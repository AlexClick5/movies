{"version":3,"sources":["webpack:///build.js","webpack:///webpack/bootstrap e565c39187a041a64be0","webpack:///./src/main.js","webpack:///./~/css-loader/lib/css-base.js","webpack:///./~/vue-style-loader/addStyles.js","webpack:///./src/helpers/constants.js","webpack:///./src/services/search.js","webpack:///./~/cormoran/dist/cormoran.js","webpack:///./src/services/movie.js","webpack:///app.vue","webpack:///loading-bar.vue","webpack:///movie-box.vue","webpack:///search-box.vue","webpack:///search-result.vue","webpack:///movie-view.vue","webpack:///search-view.vue","webpack:///./src/components/app.vue?c9f2","webpack:///./src/components/search-result.vue?5d7c","webpack:///./src/components/search-box.vue?0df4","webpack:///./src/components/loading-bar.vue?3a76","webpack:///./src/components/movie-box.vue?d833","webpack:///./src/views/movie-view.vue?6c42","webpack:///./src/views/search-view.vue?33b1","webpack:///./src/components/app.vue?54a9","webpack:///./src/components/search-result.vue?8651","webpack:///./src/components/search-box.vue?e7dd","webpack:///./src/components/loading-bar.vue?3436","webpack:///./src/components/movie-box.vue?3cfd","webpack:///./src/views/movie-view.vue?d462","webpack:///./src/views/search-view.vue?0a81","webpack:///./src/components/app.vue","webpack:///./src/components/loading-bar.vue","webpack:///./src/components/movie-box.vue","webpack:///./src/components/search-box.vue","webpack:///./src/components/search-result.vue","webpack:///./src/views/movie-view.vue","webpack:///./src/views/search-view.vue","webpack:///./~/vue-router/dist/vue-router.js","webpack:///./src/components/app.vue?6c91","webpack:///./src/components/search-result.vue?ca16","webpack:///./src/components/search-box.vue?cd68","webpack:///./src/components/loading-bar.vue?820e","webpack:///./src/components/movie-box.vue?be38","webpack:///./src/views/movie-view.vue?5205","webpack:///./src/views/search-view.vue?3526","webpack:///./~/vue/dist/vue.common.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_vue","_vue2","_vueRouter","_vueRouter2","_app","_app2","_searchView","_searchView2","_movieView","_movieView2","use","router","hashbang","history","root","saveScrollPosition","map","/","component","name","/movie/:id","start","list","toString","result","i","this","length","item","push","join","mediaQuery","alreadyImportedModules","addStylesToDom","styles","options","domStyle","stylesInDom","refs","j","parts","addStyle","listToStyles","newStyles","css","media","sourceMap","part","insertStyleElement","styleElement","head","getHeadElement","lastStyleElementInsertedAtTop","styleElementsInsertedAtTop","insertAt","nextSibling","insertBefore","appendChild","firstChild","Error","removeStyleElement","parentNode","removeChild","idx","indexOf","splice","createStyleElement","document","createElement","type","update","remove","singleton","styleIndex","singletonCounter","singletonElement","applyToSingletonTag","bind","applyToTag","newObj","index","styleSheet","cssText","replaceText","cssNode","createTextNode","childNodes","setAttribute","sources","btoa","unescape","encodeURIComponent","JSON","stringify","memoize","fn","memo","apply","arguments","isOldIE","test","window","navigator","userAgent","toLowerCase","getElementsByTagName","newList","mayRemove","textStore","replacement","filter","Boolean","Object","defineProperty","value","baseUrl","search","title","page","url","_constants","encodeURI","_cormoran2","get","_cormoran","query","naming","__WEBPACK_AMD_DEFINE_RESULT__","factory","undefined","self","cName","cNumber","cormoran","_doc","ref","body","Promise","resolve","reject","onScriptLoaded","scope","callbackId","script","scopeQuery","data","onerror","error","src","str","movie","_loadingBar","_loadingBar2","loading","components","loadingBar","props","visible","_search","_search2","searchTitle","isSearching","methods","onSearch","e","_this","preventDefault","$parent","results","noResults","$router","app","then","Search","totalResults","pageResults","_movie","_movie2","_movieBox","_movieBox2","movieBox","attached","$route","params","_searchBox","_searchBox2","_searchResult","_searchResult2","persistData","searchBox","searchResult","getMoreResults","concat","ready","route","activate","$data","deactivate","__vue_script__","__vue_template__","template","global","Target","path","matcher","delegate","Matcher","target","routes","children","generateMatch","startingPath","nestedCallback","fullPath","addRoute","routeArray","handler","len","l","substr","eachRoute","baseRoute","callback","binding","hasOwnProperty","slice","addRouteCallback","add","warn","msg","noWarning","console","tryDecode","uri","asComponent","decodeURIComponent","decodeURI","isArray","prototype","StaticSegment","string","DynamicSegment","StarSegment","EpsilonSegment","parse","names","specificity","charAt","segments","split","val","match","segment","State","charSpec","nextStates","sortSolutions","states","sort","a","b","recognizeChar","ch","state","RecognizeResults","queryParams","findHandler","handlers","regex","captures","currentCapture","isDynamic","addSegment","currentState","eachChar","put","decodeQueryParamPart","replace","warn$1","resolvePath","base","relative","append","stack","pop","unshift","isPromise","getRouteConfig","$options","resolveAsyncComponent","cb","resolver","_","exports$1","Vue","_resolveComponent","Component","mapParams","key","genQuery","canReuse","view","transition","childVM","canReuseFn","to","from","canDeactivate","next","fromComponent","hook","callHook","expectBoolean","canActivate","aborted","callHooks","depth","reuse","activateQueue","saveChildView","_bound","setComponent","activateHook","dataHook","waitForData","activated","constructor","$loadingRouteData","unbuild","build","_meta","created","_routerView","keepAlive","cachedChildView","_keepAliveRouterView","childView","cleanup","$destroy","insert","_rendered","_transitionOnLoad","setCurrent","$before","anchor","afterData","afterActivate","loadData","postActivate","$emit","processData","promises","isPlainObject","keys","forEach","resolvedVal","$set","all","isPlainOjbect","toArray","Array","applyOverride","_Vue$util","util","extend","defineReactive","init","_init","_parent","parent","_children","_defineMeta","destroy","_destroy","_isBeingDestroyed","$remove","strats","config","optionMergeStrategies","hooksToMergeRE","parentVal","childVal","ret","View","componentDef","directive","internalDirectives","viewDef","_isRouterView","vm","_isDynamicLiteral","parentView","_rootView","_currentTransition","done","unbind","elementDirective","Link","sameOrigin","link","protocol","location","hostname","port","toggleClasses","el","trim","_bind","isObject","addClass","removeClass","onPriority","priority","LINK_UPDATE","activeId","String","childLinks","querySelectorAll","existingId","getAttribute","$on","activeIds","updateClasses","$off","unwatch","$watch","onRouteUpdate","removeAttribute","tagName","onClick","addEventListener","exact","prevActiveClass","activeClass","metaKey","ctrlKey","shiftKey","defaultPrevented","button","go","pathname","rootRE","newPath","stringifyPath","updateActiveMatch","updateHref","activeRE","RegExp","queryStringRE","regexEscapeRE","isAbsolute","href","mode","formatPath","_linkActiveClass","dest","trailingSlashRE","removeEventListener","guardComponent","comp","babelHelpers","classCallCheck","instance","Constructor","TypeError","willAddRoute","addChild","contextEntered","specials","escapeRegex","validChars","generate","invalidChars","repeat","child","isEqual","chars","returned","oCreate","create","proto","F","RouteRecognizer","rootState","allSegments","isEmpty","as","handlersFor","hasRoute","output","generateQueryString","pairs","pair","arrayPair","parseQueryString","queryString","keyLength","recognize","silent","pathLen","queryStart","isSlashDropped","solutions","source","hashRE","HTML5History","_ref","onChange","baseEl","querySelector","listener","hash","stop","replaceState","pos","x","pageXOffset","y","pageYOffset","pushState","hashMatch","HashHistory","raw","formattedPath","isAbsoloute","prefix","AbstractHistory","currentPath","RouteTransition","abort","abortingOnLoad","redirect","deactivateQueue","reverseDeactivateQueue","reverse","matched","reuseQueue","runQueue","_onTransitionValidated","_view","queue","step","context","_ref$expectBoolean","_ref$postActivate","nextCalled","onError","err","_suppress","onPromiseError","setTimeout","nextWithBoolean","res","ok","nextWithData","exposed","hooks","internalKeysRE","Route","_recognizer","reduce","prev","cur","_notFoundHandler","enumerable","freeze","historyBackends","abstract","html5","Router","_ref$hashbang","_ref$abstract","_ref$history","_ref$saveScrollPosition","_ref$transitionOnLoad","transitionOnLoad","_ref$suppressTransitionError","suppressTransitionError","_ref$root","_ref$linkActiveClass","linkActiveClass","installed","_guardRecognizer","_started","_startCb","_currentRoute","_previousTransition","_notFoundRedirect","_beforeEachHooks","_afterEachHooks","_root","_abstract","_hashbang","hasPushState","_history","_historyFallback","inBrowser","History","_match","_saveScrollPosition","_map","on","rootPath","_notFound","_addRoute","_addRedirect","alias","_addAlias","beforeEach","afterEach","App","container","_appContainer","Ctor","_appConstructor","_location","assign","generatedPath","currentParams","targetParams","subRoutes","subPath","redirectPath","_addGuard","aliasPath","mappedPath","_handler","_this2","realPath","_checkGuard","_this3","currentRoute","currentTransition","_prevTransition","beforeHooks","startTransition","_postTransition","nextTick","scrollTo","getElementById","scrollX","offsetTop","install","externalVue","content","locals","set","hasOwn","_isVue","_data","ob","__ob__","convert","dep","notify","vms","_proxy","_digest","del","_unproxy","isLiteral","exp","literalValueRE","isReserved","charCodeAt","_toString","toNumber","parsed","Number","isNaN","toBoolean","stripQuotes","camelize","camelizeRE","toUpper","toUpperCase","hyphenate","hyphenateRE","classify","classifyRE","ctx","OBJECT_STRING","def","writable","configurable","_debounce","func","wait","timeout","args","timestamp","later","last","Date","now","arr","cancellable","cancelled","cancel","looseEqual","Cache","limit","size","tail","_keymap","pushFilter","lastFilterIndex","tokens","filterTokenRE","processFilterArg","dir","filters","arg","reservedArgRE","dynamic","stripped","parseDirective","s","hit","cache$1","inSingle","inDouble","curly","square","paren","expression","compileRegex","open","delimiters","close","unsafeOpen","unsafeDelimiters","unsafeClose","tagRE","htmlRE","cache","parseText","text","html","first","oneTime","lastIndex","exec","tag","tokensToExp","token","formatToken","single","$eval","inlineFilters","filterRE","appendWithTransition","applyTransition","beforeWithTransition","before","removeWithTransition","direction","op","__v_trans","transitionEndEvent","_isCompiled","action","inDoc","node","doc","ownerDocument","documentElement","nodeType","contains","getAttr","_attr","getBindAttr","hasBindAttr","hasAttribute","after","prepend","replaceChild","event","useCapture","off","getClass","classname","className","baseVal","setClass","cls","isIE9","namespaceURI","classList","tar","extractContent","asFragment","rawContent","isTemplate","isFragment","hasChildNodes","trimNode","createDocumentFragment","isTrimmable","lastChild","createAnchor","persist","debug","createComment","__v_anchor","findRef","hasAttributes","attrs","attributes","refRE","mapNodeRange","end","removeNodeRange","frag","onRemoved","removed","nodes","getOuterHTML","outerHTML","cloneNode","innerHTML","checkComponentAttr","hasAttrs","commonTagRE","reservedTagRE","getIsBinding","resolveAsset","is","mergeData","toVal","fromVal","mergeAssets","guardArrayAssets","guardComponents","ids","guardProps","assets","asset","mergeOptions","mergeField","strat","defaultStrat","mixins","warnMissing","camelizedId","Dep","uid$1","subs","withoutConversion","shouldConvert","Observer","augment","hasProto","protoAugment","copyAugment","arrayMethods","arrayKeys","observeArray","walk","__proto__","observe","isExtensible","addVm","property","getOwnPropertyDescriptor","getter","setter","childOb","depend","newVal","initMixin","$el","$root","$children","$refs","$els","_watchers","_directives","_uid","uid","_events","_eventsCount","_isFragment","_fragment","_fragmentStart","_fragmentEnd","_isDestroyed","_isReady","_isAttached","_vForRemoving","_unlinkFn","_context","_scope","_frag","_updateRef","_callHook","_initState","_initEvents","$mount","getPathCharType","code","formatSubPath","trimmed","maybeUnescapeQuote","nextChar","IN_SINGLE_QUOTE","IN_DOUBLE_QUOTE","newChar","actions","APPEND","typeMap","BEFORE_PATH","subPathDepth","PUSH","INC_SUB_PATH_DEPTH","PUSH_SUB_PATH","IN_SUB_PATH","pathStateMachine","ERROR","AFTER_PATH","parsePath","pathCache","getPath","parseExpression","setPath","original","save","isString","saved","newlineRE","rewrite","allowedKeywordsRE","restoreRE","restore","compileGetter","improperKeywordsRE","saveRE","wsRE","identRE","makeGetterFn","Function","compileSetter","needSet","expressionCache","isSimplePath","pathTestRE","booleanLiteralRE","resetBatcherState","userQueue","has","circular","waiting","flushBatcherQueue","_again","runBatcherQueue","devtools","emit","watcher","run","pushWatcher","q","user","Watcher","expOrFn","isFn","uid$2","active","dirty","lazy","deps","newDeps","depIds","_Set","newDepIds","prevError","twoWay","queued","shallow","traverse","seen","seenObjects","clear","isA","isO","depId","isRealTemplate","stringToFragment","templateString","cacheKey","templateCache","tagMatch","tagRE$1","entityMatch","entityRE","wrap","efault","suffix","nodeToFragment","textContent","clonedNode","cloned","hasBrokenTemplate","tempClone","hasTextareaCloneBug","parseTemplate","shouldClone","idSelectorCache","Fragment","linker","host","parentFrag","childFrags","inserted","unlink","singleBefore","singleRemove","multiBefore","multiRemove","__v_frag","withTransition","method","attach","shouldCallRemove","beforeRemove","detach","FragmentFactory","cid","cacheId","linkerCache","compile","findPrevFrag","previousSibling","forId","findVmFromFrag","__vue__","range","n","Math","floor","getTrackByKey","trackByKey","getValue","multi","selected","_value","indexOf$1","keyFilter","codes","charCode","parseInt","keyCodes","keyCode","stopFilter","stopPropagation","preventFilter","selfFilter","currentTarget","normalize","prop","propCache","camel","upper","testEl","prefixed","prefixes","style","kebab","camelPrefixes","normalize$1","_key","k","callActivateHooks","called","total","compileProps","propOptions","attr","empty","identRE$1","propBindingModes","ONE_WAY","TWO_WAY","ONE_TIME","optimizedLiteral","parentPath","makePropsLinkFn","_props","inlineProps","propsData","initProp","$get","_bindDir","propDef","processPropValue","rawValue","isSimple","getPropDefaultValue","coerceProp","coerced","assertProp","updateProp","required","valid","expectedTypes","assertedType","assertType","expectedType","validator","coerce","pushJob","job","queue$1","flush","f","offsetHeight","Transition","enterClass","leaveClass","pendingCssEvent","pendingCssCb","pendingJsCb","justEntered","entered","left","typeCache","isHidden","rect","getBoundingClientRect","width","height","offsetWidth","getClientRects","partial","nodeLinkFn","_asComponent","compileNode","childLinkFn","terminal","isScript","compileNodeList","dirs","linkAndCapture","makeUnlinkFn","originalDirCount","directiveComparator","descriptor","DEFAULT_PRIORITY","contextDirs","destroying","teardownDirs","_teardown","compileAndLinkProps","propsLinkFn","propDirs","compileRoot","contextOptions","contextLinkFn","replacerLinkFn","containerAttrs","_containerAttrs","replacerAttrs","_replacerAttrs","compileDirectives","selfDirs","compileTextNode","compileElement","linkFn","checkTerminalDirectives","checkElementDirectives","checkComponent","_skip","removeText","wholeText","processTextToken","makeTextNodeLinkFn","setTokenType","directives","fragClone","nodeList","linkFns","makeChildLinkFn","childrenLinkFn","makeTerminalNodeLinkFn","modifiers","literal","componentLinkFn","skip","previousElementSibling","dirName","rawName","termDef","modifierRE","dirAttrRE","DEFAULT_TERMINAL_PRIORITY","parseModifiers","pushDir","interpTokens","hasOneTimeToken","hasOneTime","interp","dirDef","transitionRE","bindRE","onRE","makeNodeLinkFn","transclude","extractAttrs","_content","transcludeTemplate","replacer","mergeAttrs","specialCharRE","resolveSlots","contents","_slotContents","extractFragment","stateMixin","noop","makeComputedGetter","owner","evaluate","newData","_setData","_initProps","_initMeta","_initMethods","_initData","_initComputed","_propsUnlinkFn","dataFn","oldData","removeVm","computed","userDef","metas","eventsMixin","registerComponentEvents","eventRE","_fromParent","registerCallbacks","register","onAttached","callAttach","onDetached","callDetach","events","watch","_initDOMHooks","Directive","_locked","_listeners","_host","lifecycleMixin","_compile","_initElement","rootLinker","contentLinkFn","ctor","_linkerCachable","rootUnlinkFn","contentUnlinkFn","deferCleanup","_cleanup","destroyReady","pendingRemoval","cleanupIfPossible","teardown","miscMixin","_applyFilters","oldValue","write","offset","read","resolved","requested","pendingCallbacks","cbs","reason","dataAPI","clean","asStatement","$arguments","$delete","deep","sync","immediate","filterRE$1","$interpolate","$log","log","domAPI","op1","op2","targetIsDetached","shouldCallHook","beforeWithCb","removeWithCb","$nextTick","$appendTo","$prependTo","$after","inDocument","realCb","eventsAPI","modifyListenerCount","count","hookRE","$once","isSource","shouldPropagate","hasParentCbs","some","$broadcast","$dispatch","lifecycleAPI","$compile","limitBy","filterBy","delimiter","convertArray","$value","$key","orderBy","baseCompare","sortKeyIndex","sortKey","sortKeys","order","comparator","firstArg","installGlobalAPI","createClass","elementDirectives","transitions","partials","compiler","parsers","extendOptions","Super","isFirstExtend","_Ctor","Sub","_assetTypes","plugin","mixin","definition","__VUE_DEVTOOLS_GLOBAL_HOOK__","UA","isAndroid","isIos","isWechat","transitionProp","animationProp","animationEndEvent","isWebkitTrans","ontransitionend","onwebkittransitionend","isWebkitAnim","onanimationend","onwebkitanimationend","nextTickHandler","pending","copies","callbacks","timerFunc","MutationObserver","setImmediate","counter","observer","textNode","characterData","Set","shift","entry","newer","older","returnEntry","defineProperties","async","warnExpressionErrors","_delimitersChanged","_propBindingModes","_maxUpdateCount","instanceData","defaultData","detached","beforeCompile","compiled","beforeDestroy","destroyed","addSub","sub","removeSub","addDep","arrayProto","getOwnPropertyNames","items","debounce","IN_PATH","BEFORE_IDENT","IN_IDENT","ws","ident","[","eof",".","0","number","'","\"","]","else","allowedKeywords","improperKeywords","beforeGet","preProcess","postProcess","afterGet","forContext","$forContext","_withLock","$index","tmp","current","text$1","legend","tr","col","td","th","option","optgroup","thead","tbody","colgroup","caption","tfoot","g","defs","symbol","image","circle","ellipse","line","polygon","polyline","t","placeholder","swap","_watcher","ON","MODEL","BIND","TRANSITION","EL","COMPONENT","PARTIAL","IF","FOR","SLOT","uid$3","vFor","inMatch","itMatch","iterator","isOption","diff","updateRef","updateModel","primitive","convertedFromObject","fromObject","trackBy","oldFrags","frags","getCachedFrag","reused","fresh","removalIndex","totalRemoved","deleteCachedFrag","w","targetPrev","prevEl","currentPrev","insertionIndex","staggerCb","staggerAnchor","move","parentScope","cacheFrag","model","__v_model","forceUpdate","staggerAmount","getStagger","trans","stagger","_preProcess","_postProcess","vIf","invalid","nextElementSibling","elseEl","elseFrag","elseFactory","show","toggle","display","text$2","isRange","composing","focused","rawListener","hasjQuery","jQuery","afterBind","radio","checked","select","multiple","initValue","selectedIndex","checkbox","getBooleanValue","_trueValue","_falseValue","checkFilters","hasRead","hasWrite","_unbind","esc","tab","enter","space","delete","up","right","down","on$1","acceptStatement","iframeBind","contentWindow","capture","prevent","reset","importantRE","handleObject","handleSingle","isImportant","setProperty","xlinkNS","xlinkRE","disallowedInterpAttrRE","attrWithPropsRE","enumeratedAttrRE","modelProps","true-value","false-value","bind$1","attrValue","modelProp","setAttributeNS","cloak","for","if","vClass","prevKeys","inlineTemplate","pendingComponentCb","pendingRemovals","pendingRemovalCb","invalidatePending","resolveComponent","mountComponent","ComponentName","activateHooks","cached","getCached","newComponent","waitingFor","extraOptions","defer","_inactive","transitionMode","bindingModes","childKey","parentKey","parentWatcher","childWatcher","TYPE_TRANSITION","TYPE_ANIMATION","transDurationProp","animDurationProp","raf","requestAnimationFrame","waitForTransitionStart","p$1","cancelPending","callHookWithCb","enterCancelled","enterNextTick","enterDone","getCssTransitionType","setupCssCb","leave","leaveCancelled","leaveDone","leaveNextTick","hasPending","hidden","inlineStyles","computedStyles","getComputedStyle","transDuration","animDuration","onEnd","transition$1","oldId","class","_setupParams","_checkStatement","_update","oldVal","mappedKey","_setupParamWatcher","paramWatchers","_paramUnwatchFns","$event","listeners","unwatchFns","slot","fallback","elseBlock","digitsRE","json","indent","capitalize","uppercase","lowercase","currency","_currency","decimals","parseFloat","isFinite","stringified","abs","toFixed","_int","_float","sign","pluralize","delay","version"],"mappings":"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","file":"build.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/dist/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _vue = __webpack_require__(44);\n\t\n\tvar _vue2 = _interopRequireDefault(_vue);\n\t\n\tvar _vueRouter = __webpack_require__(36);\n\t\n\tvar _vueRouter2 = _interopRequireDefault(_vueRouter);\n\t\n\tvar _app = __webpack_require__(29);\n\t\n\tvar _app2 = _interopRequireDefault(_app);\n\t\n\tvar _searchView = __webpack_require__(35);\n\t\n\tvar _searchView2 = _interopRequireDefault(_searchView);\n\t\n\tvar _movieView = __webpack_require__(34);\n\t\n\tvar _movieView2 = _interopRequireDefault(_movieView);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t_vue2.default.use(_vueRouter2.default);\n\t\n\tvar router = new _vueRouter2.default({\n\t  hashbang: false,\n\t  history: true,\n\t  root: '/',\n\t  saveScrollPosition: true\n\t});\n\t\n\trouter.map({\n\t  '/': {\n\t    component: _searchView2.default,\n\t    name: 'search'\n\t  },\n\t  '/movie/:id': {\n\t    component: _movieView2.default,\n\t    name: 'movie'\n\t  }\n\t});\n\t\n\trouter.start(_app2.default, 'app');\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t/*\r\n\t\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\t\tAuthor Tobias Koppers @sokra\r\n\t*/\r\n\t// css base code, injected by the css-loader\r\n\tmodule.exports = function() {\r\n\t\tvar list = [];\r\n\t\r\n\t\t// return the list of modules as css string\r\n\t\tlist.toString = function toString() {\r\n\t\t\tvar result = [];\r\n\t\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\t\tvar item = this[i];\r\n\t\t\t\tif(item[2]) {\r\n\t\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult.push(item[1]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn result.join(\"\");\r\n\t\t};\r\n\t\r\n\t\t// import a list of modules into the list\r\n\t\tlist.i = function(modules, mediaQuery) {\r\n\t\t\tif(typeof modules === \"string\")\r\n\t\t\t\tmodules = [[null, modules, \"\"]];\r\n\t\t\tvar alreadyImportedModules = {};\r\n\t\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\t\tvar id = this[i][0];\r\n\t\t\t\tif(typeof id === \"number\")\r\n\t\t\t\t\talreadyImportedModules[id] = true;\r\n\t\t\t}\r\n\t\t\tfor(i = 0; i < modules.length; i++) {\r\n\t\t\t\tvar item = modules[i];\r\n\t\t\t\t// skip already imported module\r\n\t\t\t\t// this implementation is not 100% perfect for weird media query combinations\r\n\t\t\t\t//  when a module is imported multiple times with different media queries.\r\n\t\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\r\n\t\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\r\n\t\t\t\t\tif(mediaQuery && !item[2]) {\r\n\t\t\t\t\t\titem[2] = mediaQuery;\r\n\t\t\t\t\t} else if(mediaQuery) {\r\n\t\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlist.push(item);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn list;\r\n\t};\r\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*\n\t\tMIT License http://www.opensource.org/licenses/mit-license.php\n\t\tAuthor Tobias Koppers @sokra\n\t*/\n\tvar stylesInDom = {},\n\t\tmemoize = function(fn) {\n\t\t\tvar memo;\n\t\t\treturn function () {\n\t\t\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\t\t\treturn memo;\n\t\t\t};\n\t\t},\n\t\tisOldIE = memoize(function() {\n\t\t\treturn /msie [6-9]\\b/.test(window.navigator.userAgent.toLowerCase());\n\t\t}),\n\t\tgetHeadElement = memoize(function () {\n\t\t\treturn document.head || document.getElementsByTagName(\"head\")[0];\n\t\t}),\n\t\tsingletonElement = null,\n\t\tsingletonCounter = 0,\n\t\tstyleElementsInsertedAtTop = [];\n\t\n\tmodule.exports = function(list, options) {\n\t\tif(false) {\n\t\t\tif(typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t\t}\n\t\n\t\toptions = options || {};\n\t\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t\t// tags it will allow on a page\n\t\tif (typeof options.singleton === \"undefined\") options.singleton = isOldIE();\n\t\n\t\t// By default, add <style> tags to the bottom of <head>.\n\t\tif (typeof options.insertAt === \"undefined\") options.insertAt = \"bottom\";\n\t\n\t\tvar styles = listToStyles(list);\n\t\taddStylesToDom(styles, options);\n\t\n\t\treturn function update(newList) {\n\t\t\tvar mayRemove = [];\n\t\t\tfor(var i = 0; i < styles.length; i++) {\n\t\t\t\tvar item = styles[i];\n\t\t\t\tvar domStyle = stylesInDom[item.id];\n\t\t\t\tdomStyle.refs--;\n\t\t\t\tmayRemove.push(domStyle);\n\t\t\t}\n\t\t\tif(newList) {\n\t\t\t\tvar newStyles = listToStyles(newList);\n\t\t\t\taddStylesToDom(newStyles, options);\n\t\t\t}\n\t\t\tfor(var i = 0; i < mayRemove.length; i++) {\n\t\t\t\tvar domStyle = mayRemove[i];\n\t\t\t\tif(domStyle.refs === 0) {\n\t\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\n\t\t\t\t\t\tdomStyle.parts[j]();\n\t\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\t\n\tfunction addStylesToDom(styles, options) {\n\t\tfor(var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\t\t\tif(domStyle) {\n\t\t\t\tdomStyle.refs++;\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t\t}\n\t\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar parts = [];\n\t\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t\t}\n\t\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction listToStyles(list) {\n\t\tvar styles = [];\n\t\tvar newStyles = {};\n\t\tfor(var i = 0; i < list.length; i++) {\n\t\t\tvar item = list[i];\n\t\t\tvar id = item[0];\n\t\t\tvar css = item[1];\n\t\t\tvar media = item[2];\n\t\t\tvar sourceMap = item[3];\n\t\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\t\t\tif(!newStyles[id])\n\t\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\n\t\t\telse\n\t\t\t\tnewStyles[id].parts.push(part);\n\t\t}\n\t\treturn styles;\n\t}\n\t\n\tfunction insertStyleElement(options, styleElement) {\n\t\tvar head = getHeadElement();\n\t\tvar lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];\n\t\tif (options.insertAt === \"top\") {\n\t\t\tif(!lastStyleElementInsertedAtTop) {\n\t\t\t\thead.insertBefore(styleElement, head.firstChild);\n\t\t\t} else if(lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\t\thead.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);\n\t\t\t} else {\n\t\t\t\thead.appendChild(styleElement);\n\t\t\t}\n\t\t\tstyleElementsInsertedAtTop.push(styleElement);\n\t\t} else if (options.insertAt === \"bottom\") {\n\t\t\thead.appendChild(styleElement);\n\t\t} else {\n\t\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\n\t\t}\n\t}\n\t\n\tfunction removeStyleElement(styleElement) {\n\t\tstyleElement.parentNode.removeChild(styleElement);\n\t\tvar idx = styleElementsInsertedAtTop.indexOf(styleElement);\n\t\tif(idx >= 0) {\n\t\t\tstyleElementsInsertedAtTop.splice(idx, 1);\n\t\t}\n\t}\n\t\n\tfunction createStyleElement(options) {\n\t\tvar styleElement = document.createElement(\"style\");\n\t\tstyleElement.type = \"text/css\";\n\t\tinsertStyleElement(options, styleElement);\n\t\treturn styleElement;\n\t}\n\t\n\tfunction addStyle(obj, options) {\n\t\tvar styleElement, update, remove;\n\t\n\t\tif (options.singleton) {\n\t\t\tvar styleIndex = singletonCounter++;\n\t\t\tstyleElement = singletonElement || (singletonElement = createStyleElement(options));\n\t\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\n\t\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\n\t\t} else {\n\t\t\tstyleElement = createStyleElement(options);\n\t\t\tupdate = applyToTag.bind(null, styleElement);\n\t\t\tremove = function() {\n\t\t\t\tremoveStyleElement(styleElement);\n\t\t\t};\n\t\t}\n\t\n\t\tupdate(obj);\n\t\n\t\treturn function updateStyle(newObj) {\n\t\t\tif(newObj) {\n\t\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\n\t\t\t\t\treturn;\n\t\t\t\tupdate(obj = newObj);\n\t\t\t} else {\n\t\t\t\tremove();\n\t\t\t}\n\t\t};\n\t}\n\t\n\tvar replaceText = (function () {\n\t\tvar textStore = [];\n\t\n\t\treturn function (index, replacement) {\n\t\t\ttextStore[index] = replacement;\n\t\t\treturn textStore.filter(Boolean).join('\\n');\n\t\t};\n\t})();\n\t\n\tfunction applyToSingletonTag(styleElement, index, remove, obj) {\n\t\tvar css = remove ? \"\" : obj.css;\n\t\n\t\tif (styleElement.styleSheet) {\n\t\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\n\t\t} else {\n\t\t\tvar cssNode = document.createTextNode(css);\n\t\t\tvar childNodes = styleElement.childNodes;\n\t\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\n\t\t\tif (childNodes.length) {\n\t\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\n\t\t\t} else {\n\t\t\t\tstyleElement.appendChild(cssNode);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction applyToTag(styleElement, obj) {\n\t\tvar css = obj.css;\n\t\tvar media = obj.media;\n\t\tvar sourceMap = obj.sourceMap;\n\t\n\t\tif (media) {\n\t\t\tstyleElement.setAttribute(\"media\", media);\n\t\t}\n\t\n\t\tif (sourceMap) {\n\t\t\t// https://developer.chrome.com/devtools/docs/javascript-debugging\n\t\t\t// this makes source maps inside style tags work properly in Chrome\n\t\t\tcss += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */';\n\t\t\t// http://stackoverflow.com/a/26603875\n\t\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t\t}\n\t\n\t\tif (styleElement.styleSheet) {\n\t\t\tstyleElement.styleSheet.cssText = css;\n\t\t} else {\n\t\t\twhile(styleElement.firstChild) {\n\t\t\t\tstyleElement.removeChild(styleElement.firstChild);\n\t\t\t}\n\t\t\tstyleElement.appendChild(document.createTextNode(css));\n\t\t}\n\t}\n\n\n/***/ },\n/* 3 */,\n/* 4 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\tvar baseUrl = 'https://www.omdbapi.com/?type=movie';\n\t\n\texports.baseUrl = baseUrl;\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _constants = __webpack_require__(4);\n\t\n\tvar _cormoran = __webpack_require__(6);\n\t\n\tvar _cormoran2 = _interopRequireDefault(_cormoran);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t_cormoran2.default.query('&callback').naming('searchJSONPCallback');\n\t\n\tfunction search(title, page) {\n\t  var url = _constants.baseUrl + '&s=' + encodeURI(title) + '&page=' + (page || 1);\n\t\n\t  return _cormoran2.default.get(url);\n\t}\n\t\n\texports.default = search;\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;(function(root, factory) {\n\t    'use strict';\n\t    if (true) {\n\t        !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t            return factory(root);\n\t        }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t    } else if (typeof exports === 'object') {\n\t        module.exports = factory(root);\n\t    } else {\n\t        root.cormoran = factory(root);\n\t    }\n\t})(self, function(root) {\n\t    'use strict';\n\t\n\t    var cName,\n\t        cNumber,\n\t        query,\n\t        cormoran = {},\n\t        _doc = document,\n\t        ref = _doc.getElementsByTagName('script')[0] || _doc.head || _doc.body;\n\t\n\t    cormoran.get = function(url) {\n\t        return new Promise(function(resolve, reject) {\n\t\n\t            // if config object doesn't contain url and\n\t            // a success callback method throw an error\n\t            if (typeof url !== 'string') {\n\t                reject('Invalid url');\n\t            }\n\t\n\t            var script = _doc.createElement('script'),\n\t                scope = root,\n\t                scopeQuery = 'self.',\n\t                callbackId = cName + cNumber;\n\t\n\t            // increase callback number\n\t            cNumber++;\n\t\n\t            function onScriptLoaded() { // eslint-disable-line func-style\n\t                // unable callback and data ref\n\t                delete scope[callbackId];\n\t\n\t                // erase script element\n\t                script.parentNode.removeChild(script);\n\t            }\n\t\n\t            // handle success\n\t            scope[callbackId] = function(data) {\n\t                resolve(data);\n\t                onScriptLoaded();\n\t            };\n\t\n\t            // handle error\n\t            script.onerror = function(error) {\n\t                reject(error);\n\t                onScriptLoaded();\n\t            };\n\t\n\t            script.src = url + query + '=' + scopeQuery + callbackId;\n\t\n\t            // insert strategy supported on Paul Irish post:\n\t            // http://www.paulirish.com/2011/surefire-dom-element-insertion/\n\t            ref.parentNode.insertBefore(script, ref);\n\t        });\n\t    };\n\t\n\t    cormoran.naming = function(str) {\n\t        if (typeof str !== 'string') {\n\t            throw new Error('Callback name must be a string');\n\t        } else {\n\t            cName = str;\n\t            cNumber = 0;\n\t            return cormoran;\n\t        }\n\t    };\n\t\n\t    cormoran.query = function(str) {\n\t        if (typeof str !== 'string') {\n\t            throw new Error('Query name must be a string');\n\t        } else {\n\t            query = str;\n\t            return cormoran;\n\t        }\n\t    };\n\t\n\t    // set default configuration\n\t    cormoran.naming('cormoranCallback');\n\t    cormoran.query('?callback');\n\t\n\t    return cormoran;\n\t});\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _constants = __webpack_require__(4);\n\t\n\tvar _cormoran = __webpack_require__(6);\n\t\n\tvar _cormoran2 = _interopRequireDefault(_cormoran);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t_cormoran2.default.query('&callback').naming('movieJSONPCallback');\n\t\n\tfunction movie(id) {\n\t  var url = _constants.baseUrl + '&i=' + id;\n\t\n\t  return _cormoran2.default.get(url);\n\t}\n\t\n\texports.default = movie;\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _loadingBar = __webpack_require__(30);\n\t\n\tvar _loadingBar2 = _interopRequireDefault(_loadingBar);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = {\n\t  data: function data() {\n\t    return {\n\t      loading: true\n\t    };\n\t  },\n\t\n\t  components: {\n\t    loadingBar: _loadingBar2.default\n\t  }\n\t};\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = {\n\t  props: {\n\t    visible: {\n\t      type: Boolean,\n\t      default: function _default() {\n\t        return false;\n\t      }\n\t    }\n\t  }\n\t};\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = {\n\t  props: {\n\t    movie: {\n\t      type: Object,\n\t      default: function _default() {\n\t        return {};\n\t      }\n\t    }\n\t  }\n\t};\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _search = __webpack_require__(5);\n\t\n\tvar _search2 = _interopRequireDefault(_search);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = {\n\t  data: function data() {\n\t    return {\n\t      searchTitle: '',\n\t      isSearching: false\n\t    };\n\t  },\n\t\n\t  methods: {\n\t    onSearch: function onSearch(e) {\n\t      var _this = this;\n\t\n\t      e.preventDefault();\n\t\n\t      this.$parent.results = [];\n\t      this.$parent.noResults = false;\n\t      this.isSearching = true;\n\t      this.$router.app.loading = true;\n\t\n\t      (0, _search2.default)(this.searchTitle).then(function (data) {\n\t        _this.isSearching = false;\n\t        _this.$router.app.loading = false;\n\t\n\t        _this.$parent.searchTitle = _this.searchTitle;\n\t\n\t        if (data.Search && data.Search.length) {\n\t          _this.$parent.results = data.Search;\n\t          _this.$parent.totalResults = data.totalResults;\n\t          _this.$parent.pageResults = 1;\n\t        } else {\n\t          _this.$parent.noResults = true;\n\t        }\n\t      });\n\t    }\n\t  }\n\t};\n\n/***/ },\n/* 12 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = {\n\t  props: ['movie']\n\t};\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _movie = __webpack_require__(7);\n\t\n\tvar _movie2 = _interopRequireDefault(_movie);\n\t\n\tvar _movieBox = __webpack_require__(31);\n\t\n\tvar _movieBox2 = _interopRequireDefault(_movieBox);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = {\n\t  components: {\n\t    movieBox: _movieBox2.default\n\t  },\n\t  data: function data() {\n\t    return {\n\t      movie: {}\n\t    };\n\t  },\n\t\n\t  props: {\n\t    loaded: {\n\t      type: Boolean,\n\t      default: function _default() {\n\t        return false;\n\t      }\n\t    }\n\t  },\n\t  attached: function attached() {\n\t    var _this = this;\n\t\n\t    this.$router.app.loading = true;\n\t\n\t    (0, _movie2.default)(this.$route.params.id).then(function (data) {\n\t      _this.movie = data;\n\t      _this.loaded = true;\n\t      _this.$router.app.loading = false;\n\t    });\n\t  }\n\t};\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _search = __webpack_require__(5);\n\t\n\tvar _search2 = _interopRequireDefault(_search);\n\t\n\tvar _searchBox = __webpack_require__(32);\n\t\n\tvar _searchBox2 = _interopRequireDefault(_searchBox);\n\t\n\tvar _searchResult = __webpack_require__(33);\n\t\n\tvar _searchResult2 = _interopRequireDefault(_searchResult);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar persistData = null;\n\t\n\texports.default = {\n\t  components: {\n\t    searchBox: _searchBox2.default,\n\t    searchResult: _searchResult2.default\n\t  },\n\t  data: function data() {\n\t    return {\n\t      searchTitle: '',\n\t      results: [],\n\t      totalResults: 0,\n\t      pageResults: 0,\n\t      noResults: false\n\t    };\n\t  },\n\t\n\t  methods: {\n\t    getMoreResults: function getMoreResults(e) {\n\t      var _this = this;\n\t\n\t      e.preventDefault();\n\t      this.$router.app.loading = true;\n\t      (0, _search2.default)(this.searchTitle, ++this.pageResults).then(function (data) {\n\t        _this.results = _this.results.concat(data.Search);\n\t        _this.$router.app.loading = false;\n\t      });\n\t    }\n\t  },\n\t  ready: function ready() {\n\t    this.$router.app.loading = false;\n\t  },\n\t\n\t  route: {\n\t    activate: function activate() {\n\t      this.$data = persistData ? persistData : this.$data;\n\t    },\n\t    deactivate: function deactivate() {\n\t      persistData = this.results.length ? this.$data : null;\n\t    }\n\t  }\n\t};\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(1)();\n\t// imports\n\t\n\t\n\t// module\n\texports.push([module.id, \"html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block}audio:not([controls]){display:none;height:0}progress{vertical-align:baseline}[hidden],template{display:none}a{background-color:transparent;-webkit-text-decoration-skip:objects}a:active,a:hover{outline-width:0}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:inherit;font-weight:bolder}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}svg:not(:root){overflow:hidden}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}button,input,select,textarea{font:inherit;margin:0}optgroup{font-weight:700}button,input{overflow:visible}button,select{text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-input-placeholder{color:inherit;opacity:.54}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}body{background-color:#cfd8dc;color:#212121;font-family:Raleway,sans-serif;font-size:14px;letter-spacing:.015em;text-rendering:optimizeLegibility;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}html{box-sizing:border-box}*,:after,:before{box-sizing:inherit}img{max-width:100%}#app{padding:0 1em 2em}header{margin:0 0 45px}h1{font-weight:100;line-height:1.1;margin-bottom:0}h2{font-size:1em;font-weight:800;height:25px;line-height:25px}h2 span{vertical-align:middle}.back{color:inherit;text-decoration:none}@media (min-width:481px){body{font-size:16px}#app{padding-left:2em;padding-right:2em}}.card{margin:auto;max-width:640px;padding:10px}.card:not(.hollow){background-color:#fff}.icon{vertical-align:middle;fill:currentColor}@media (min-width:769px){body{font-size:18px}header{margin-bottom:60px}h1{font-size:3em}.card{padding:35px}}\", \"\"]);\n\t\n\t// exports\n\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(1)();\n\t// imports\n\t\n\t\n\t// module\n\texports.push([module.id, \".search__result{padding:30px 0}.search__result+.search__result{border-width:1px 0 0;border-style:solid;border-color:#b0bec5}.search__result-link{color:inherit;text-decoration:none}.search__result-title{position:relative;padding:0 35px 0 0}.search__result-title,.search__result-year{line-height:1.2em;margin:0}.search__result .icon{fill:#ec5a62;position:absolute;top:0;right:0}\", \"\"]);\n\t\n\t// exports\n\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(1)();\n\t// imports\n\t\n\t\n\t// module\n\texports.push([module.id, \".search__form[_v-2955fe6e]{position:relative;padding:0 45px 0 0}.search__input[_v-2955fe6e]{border-width:0;font-style:italic;height:45px;letter-spacing:inherit;opacity:.85;padding:10px 20px;width:100%;-webkit-transition:opacity .15s ease;transition:opacity .15s ease}.search__input[_v-2955fe6e]:focus{outline:none;opacity:1}.search__button[_v-2955fe6e]{background-color:#ec5a62;border-width:0;color:#fff;cursor:pointer;position:absolute;top:0;right:0;height:45px;width:45px;-webkit-transition:background-color .25s ease;transition:background-color .25s ease}.search__button[disabled][_v-2955fe6e]{background-color:#b0bec5;cursor:default}\", \"\"]);\n\t\n\t// exports\n\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(1)();\n\t// imports\n\t\n\t\n\t// module\n\texports.push([module.id, \".progress[_v-6d0180ea]{height:4px;opacity:0;overflow:hidden;position:fixed;top:0;left:0;width:100%;-webkit-transition:opacity .15s ease;transition:opacity .15s ease}.progress.visible[_v-6d0180ea]{opacity:1}.indeterminate[_v-6d0180ea]{background-color:#ec5a62;width:70%}.indeterminate[_v-6d0180ea]:after,.indeterminate[_v-6d0180ea]:before{-webkit-animation:indeterminate 1s cubic-bezier(.65,.815,.735,.395) infinite;animation:indeterminate 1s cubic-bezier(.65,.815,.735,.395) infinite;content:'';bottom:0;top:0;position:absolute;background-color:inherit;left:0;will-change:left,right}@-webkit-keyframes indeterminate{0%{left:-35%;right:100%}60%,to{left:100%;right:-90%}}@keyframes indeterminate{0%{left:-35%;right:100%}60%,to{left:100%;right:-90%}}\", \"\"]);\n\t\n\t// exports\n\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(1)();\n\t// imports\n\t\n\t\n\t// module\n\texports.push([module.id, \".movie__title[_v-8b76b6d4]{font-size:1.45em;margin:0 0 .67em}.movie__data[_v-8b76b6d4]{clear:both}.movie__data dt[_v-8b76b6d4]{color:#ec5a62;display:inline-block;font-size:.9em;font-weight:800;letter-spacing:.03em;text-transform:uppercase}.movie__data dd[_v-8b76b6d4]{display:inline;margin:0}.movie__data dd[_v-8b76b6d4]:after{color:#b0bec5;content:'/';font-weight:400;margin:0 5px 0 8px}.movie__data dd[_v-8b76b6d4]:last-child:after{display:none}.movie__plot__label[_v-8b76b6d4]{color:#b0bec5;font-size:.9em;font-weight:800;letter-spacing:.03em;text-transform:uppercase}.movie__plot[_v-8b76b6d4]{margin-top:-.25em}.movie__thumb[_v-8b76b6d4]{background-color:#b0bec5;float:left;margin:0 25px 10px 0;min-height:100px;width:100px}@media (min-width:481px){.movie__thumb[_v-8b76b6d4]{width:150px}.movie__plot[_v-8b76b6d4]{font-size:.9em}}@media (min-width:769px){.movie__thumb[_v-8b76b6d4]{width:200px}}\", \"\"]);\n\t\n\t// exports\n\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(1)();\n\t// imports\n\t\n\t\n\t// module\n\texports.push([module.id, \".movie[_v-ca60e4f8]{line-height:1.5;opacity:0;overflow:hidden;-webkit-transition:all .25s ease;transition:all .25s ease}.movie.loaded[_v-ca60e4f8]{opacity:1}\", \"\"]);\n\t\n\t// exports\n\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(1)();\n\t// imports\n\t\n\t\n\t// module\n\texports.push([module.id, \".search__results[_v-d21df490]{list-style:none;margin:0;padding:0}.more[_v-d21df490]{color:#ec5a62;display:block;text-align:center;text-decoration:none;font-size:.9em;font-weight:800;letter-spacing:.03em;text-transform:uppercase}\", \"\"]);\n\t\n\t// exports\n\n\n/***/ },\n/* 22 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<svg style=display:none> <defs> <g id=action> <path d=\\\"M2.01 21L23 12 2.01 3 2 10l15 2-15 2z\\\"/> <path d=\\\"M0 0h24v24H0z\\\" fill=none /> </g> <g id=back> <path d=\\\"M0 0h24v24H0z\\\" fill=none /> <path d=\\\"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\\\"/> </g> <g id=search> <path d=\\\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\\\"/> <path d=\\\"M0 0h24v24H0z\\\" fill=none /> </g> </defs> </svg> <div id=app> <loading-bar :visible=loading></loading-bar> <header> <h1>Movies</h1> <h2 v-show=\\\"$route.name === 'search'\\\">Look up fast information about your favorite titles</h2> <h2 v-show=\\\"$route.name === 'movie'\\\"> <a v-link=\\\"{ path: '/' }\\\" class=back> <svg class=icon viewBox=\\\"0 0 24 24\\\" height=24 width=24> <use xlink:href=#back></use> </svg> <span>Back to Search</span> </a> </h2> </header> <main class=view> <router-view></router-view> </main> </div>\";\n\n/***/ },\n/* 23 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<li class=search__result :movie=movie> <a v-link=\\\"{ name: 'movie',  params: { id: movie.imdbID } }\\\" class=search__result-link> <h3 class=search__result-title> <span v-text=movie.Title></span> <svg class=icon viewBox=\\\"0 0 24 24\\\" height=24 width=24> <use xlink:href=#action></use> </svg> </h3> <p class=search__result-year v-text=movie.Year></p> </a> </li>\";\n\n/***/ },\n/* 24 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<form action=? class=search__form @submit=onSearch _v-2955fe6e=\\\"\\\"> <input type=text class=search__input placeholder=Search v-model=searchTitle _v-2955fe6e=\\\"\\\"> <button type=submit class=search__button :disabled=\\\"isSearching || !searchTitle\\\" _v-2955fe6e=\\\"\\\"> <svg class=icon viewBox=\\\"0 0 24 24\\\" height=24 width=24 _v-2955fe6e=\\\"\\\"> <use xlink:href=#search _v-2955fe6e=\\\"\\\"></use> </svg> </button> </form>\";\n\n/***/ },\n/* 25 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=progress :class=\\\"{ 'visible': visible }\\\" _v-6d0180ea=\\\"\\\"> <div class=indeterminate _v-6d0180ea=\\\"\\\"></div> </div>\";\n\n/***/ },\n/* 26 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<h3 class=movie__title v-text=movie.Title _v-8b76b6d4=\\\"\\\"></h3> <dl class=movie__data _v-8b76b6d4=\\\"\\\"> <dt _v-8b76b6d4=\\\"\\\">Released</dt> <dd v-text=movie.Released _v-8b76b6d4=\\\"\\\"></dd> <dt _v-8b76b6d4=\\\"\\\">Runtime</dt> <dd v-text=movie.Runtime _v-8b76b6d4=\\\"\\\"></dd> <dt v-if=\\\"movie.Director !== 'N/A'\\\" _v-8b76b6d4=\\\"\\\">Director</dt> <dd v-if=\\\"movie.Director !== 'N/A'\\\" v-text=movie.Director _v-8b76b6d4=\\\"\\\"></dd> <dt _v-8b76b6d4=\\\"\\\">Cast</dt> <dd v-text=movie.Actors _v-8b76b6d4=\\\"\\\"></dd> <dt _v-8b76b6d4=\\\"\\\">IMDb Rating</dt> <dd v-text=movie.imdbRating _v-8b76b6d4=\\\"\\\"></dd> </dl> <img :src=movie.Poster alt=\\\"\\\" class=movie__thumb v-if=\\\"movie.Poster !== 'N/A'\\\" _v-8b76b6d4=\\\"\\\"> <p class=movie__plot _v-8b76b6d4=\\\"\\\"> <span class=movie__plot__label _v-8b76b6d4=\\\"\\\">Plot</span> <span v-text=movie.Plot _v-8b76b6d4=\\\"\\\"></span> </p>\";\n\n/***/ },\n/* 27 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"card movie\\\" :class=\\\"{ 'loaded': loaded }\\\" _v-ca60e4f8=\\\"\\\"> <movie-box :movie=movie _v-ca60e4f8=\\\"\\\"></movie-box> </div>\";\n\n/***/ },\n/* 28 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"card hollow\\\" _v-d21df490=\\\"\\\"> <search-box _v-d21df490=\\\"\\\"></search-box> </div> <div class=\\\"card hollow\\\" v-show=\\\"!results.length &amp;&amp; noResults\\\" _v-d21df490=\\\"\\\"> <p _v-d21df490=\\\"\\\"><em _v-d21df490=\\\"\\\">No results for «<span v-text=searchTitle _v-d21df490=\\\"\\\"></span></em>»</p> </div> <div class=\\\"card hollow\\\" v-show=results.length _v-d21df490=\\\"\\\"> <p _v-d21df490=\\\"\\\"><em _v-d21df490=\\\"\\\">Search results for «<span v-text=searchTitle _v-d21df490=\\\"\\\"></span></em>»</p> <ul class=search__results _v-d21df490=\\\"\\\"> <search-result v-for=\\\"r in results\\\" :movie=r _v-d21df490=\\\"\\\"></search-result> </ul> </div> <div class=\\\"card hollow\\\" v-show=\\\"results.length < totalResults &amp;&amp; results.length\\\" _v-d21df490=\\\"\\\"> <a href=# class=more @click=getMoreResults _v-d21df490=\\\"\\\">Load more results</a> </div>\";\n\n/***/ },\n/* 29 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__webpack_require__(37)\n\t__vue_script__ = __webpack_require__(8)\n\t__vue_template__ = __webpack_require__(22)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 30 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__webpack_require__(40)\n\t__vue_script__ = __webpack_require__(9)\n\t__vue_template__ = __webpack_require__(25)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 31 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__webpack_require__(41)\n\t__vue_script__ = __webpack_require__(10)\n\t__vue_template__ = __webpack_require__(26)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 32 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__webpack_require__(39)\n\t__vue_script__ = __webpack_require__(11)\n\t__vue_template__ = __webpack_require__(24)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 33 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__webpack_require__(38)\n\t__vue_script__ = __webpack_require__(12)\n\t__vue_template__ = __webpack_require__(23)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 34 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__webpack_require__(42)\n\t__vue_script__ = __webpack_require__(13)\n\t__vue_template__ = __webpack_require__(27)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 35 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__webpack_require__(43)\n\t__vue_script__ = __webpack_require__(14)\n\t__vue_template__ = __webpack_require__(28)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 36 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*!\n\t * vue-router v0.7.13\n\t * (c) 2016 Evan You\n\t * Released under the MIT License.\n\t */\n\t(function (global, factory) {\n\t   true ? module.exports = factory() :\n\t  typeof define === 'function' && define.amd ? define(factory) :\n\t  global.VueRouter = factory();\n\t}(this, function () { 'use strict';\n\t\n\t  var babelHelpers = {};\n\t\n\t  babelHelpers.classCallCheck = function (instance, Constructor) {\n\t    if (!(instance instanceof Constructor)) {\n\t      throw new TypeError(\"Cannot call a class as a function\");\n\t    }\n\t  };\n\t  function Target(path, matcher, delegate) {\n\t    this.path = path;\n\t    this.matcher = matcher;\n\t    this.delegate = delegate;\n\t  }\n\t\n\t  Target.prototype = {\n\t    to: function to(target, callback) {\n\t      var delegate = this.delegate;\n\t\n\t      if (delegate && delegate.willAddRoute) {\n\t        target = delegate.willAddRoute(this.matcher.target, target);\n\t      }\n\t\n\t      this.matcher.add(this.path, target);\n\t\n\t      if (callback) {\n\t        if (callback.length === 0) {\n\t          throw new Error(\"You must have an argument in the function passed to `to`\");\n\t        }\n\t        this.matcher.addChild(this.path, target, callback, this.delegate);\n\t      }\n\t      return this;\n\t    }\n\t  };\n\t\n\t  function Matcher(target) {\n\t    this.routes = {};\n\t    this.children = {};\n\t    this.target = target;\n\t  }\n\t\n\t  Matcher.prototype = {\n\t    add: function add(path, handler) {\n\t      this.routes[path] = handler;\n\t    },\n\t\n\t    addChild: function addChild(path, target, callback, delegate) {\n\t      var matcher = new Matcher(target);\n\t      this.children[path] = matcher;\n\t\n\t      var match = generateMatch(path, matcher, delegate);\n\t\n\t      if (delegate && delegate.contextEntered) {\n\t        delegate.contextEntered(target, match);\n\t      }\n\t\n\t      callback(match);\n\t    }\n\t  };\n\t\n\t  function generateMatch(startingPath, matcher, delegate) {\n\t    return function (path, nestedCallback) {\n\t      var fullPath = startingPath + path;\n\t\n\t      if (nestedCallback) {\n\t        nestedCallback(generateMatch(fullPath, matcher, delegate));\n\t      } else {\n\t        return new Target(startingPath + path, matcher, delegate);\n\t      }\n\t    };\n\t  }\n\t\n\t  function addRoute(routeArray, path, handler) {\n\t    var len = 0;\n\t    for (var i = 0, l = routeArray.length; i < l; i++) {\n\t      len += routeArray[i].path.length;\n\t    }\n\t\n\t    path = path.substr(len);\n\t    var route = { path: path, handler: handler };\n\t    routeArray.push(route);\n\t  }\n\t\n\t  function eachRoute(baseRoute, matcher, callback, binding) {\n\t    var routes = matcher.routes;\n\t\n\t    for (var path in routes) {\n\t      if (routes.hasOwnProperty(path)) {\n\t        var routeArray = baseRoute.slice();\n\t        addRoute(routeArray, path, routes[path]);\n\t\n\t        if (matcher.children[path]) {\n\t          eachRoute(routeArray, matcher.children[path], callback, binding);\n\t        } else {\n\t          callback.call(binding, routeArray);\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  function map (callback, addRouteCallback) {\n\t    var matcher = new Matcher();\n\t\n\t    callback(generateMatch(\"\", matcher, this.delegate));\n\t\n\t    eachRoute([], matcher, function (route) {\n\t      if (addRouteCallback) {\n\t        addRouteCallback(this, route);\n\t      } else {\n\t        this.add(route);\n\t      }\n\t    }, this);\n\t  }\n\t\n\t  var specials = ['/', '.', '*', '+', '?', '|', '(', ')', '[', ']', '{', '}', '\\\\'];\n\t\n\t  var escapeRegex = new RegExp('(\\\\' + specials.join('|\\\\') + ')', 'g');\n\t\n\t  var noWarning = false;\n\t  function warn(msg) {\n\t    if (!noWarning && typeof console !== 'undefined') {\n\t      console.error('[vue-router] ' + msg);\n\t    }\n\t  }\n\t\n\t  function tryDecode(uri, asComponent) {\n\t    try {\n\t      return asComponent ? decodeURIComponent(uri) : decodeURI(uri);\n\t    } catch (e) {\n\t      warn('malformed URI' + (asComponent ? ' component: ' : ': ') + uri);\n\t    }\n\t  }\n\t\n\t  function isArray(test) {\n\t    return Object.prototype.toString.call(test) === \"[object Array]\";\n\t  }\n\t\n\t  // A Segment represents a segment in the original route description.\n\t  // Each Segment type provides an `eachChar` and `regex` method.\n\t  //\n\t  // The `eachChar` method invokes the callback with one or more character\n\t  // specifications. A character specification consumes one or more input\n\t  // characters.\n\t  //\n\t  // The `regex` method returns a regex fragment for the segment. If the\n\t  // segment is a dynamic of star segment, the regex fragment also includes\n\t  // a capture.\n\t  //\n\t  // A character specification contains:\n\t  //\n\t  // * `validChars`: a String with a list of all valid characters, or\n\t  // * `invalidChars`: a String with a list of all invalid characters\n\t  // * `repeat`: true if the character specification can repeat\n\t\n\t  function StaticSegment(string) {\n\t    this.string = string;\n\t  }\n\t  StaticSegment.prototype = {\n\t    eachChar: function eachChar(callback) {\n\t      var string = this.string,\n\t          ch;\n\t\n\t      for (var i = 0, l = string.length; i < l; i++) {\n\t        ch = string.charAt(i);\n\t        callback({ validChars: ch });\n\t      }\n\t    },\n\t\n\t    regex: function regex() {\n\t      return this.string.replace(escapeRegex, '\\\\$1');\n\t    },\n\t\n\t    generate: function generate() {\n\t      return this.string;\n\t    }\n\t  };\n\t\n\t  function DynamicSegment(name) {\n\t    this.name = name;\n\t  }\n\t  DynamicSegment.prototype = {\n\t    eachChar: function eachChar(callback) {\n\t      callback({ invalidChars: \"/\", repeat: true });\n\t    },\n\t\n\t    regex: function regex() {\n\t      return \"([^/]+)\";\n\t    },\n\t\n\t    generate: function generate(params) {\n\t      var val = params[this.name];\n\t      return val == null ? \":\" + this.name : val;\n\t    }\n\t  };\n\t\n\t  function StarSegment(name) {\n\t    this.name = name;\n\t  }\n\t  StarSegment.prototype = {\n\t    eachChar: function eachChar(callback) {\n\t      callback({ invalidChars: \"\", repeat: true });\n\t    },\n\t\n\t    regex: function regex() {\n\t      return \"(.+)\";\n\t    },\n\t\n\t    generate: function generate(params) {\n\t      var val = params[this.name];\n\t      return val == null ? \":\" + this.name : val;\n\t    }\n\t  };\n\t\n\t  function EpsilonSegment() {}\n\t  EpsilonSegment.prototype = {\n\t    eachChar: function eachChar() {},\n\t    regex: function regex() {\n\t      return \"\";\n\t    },\n\t    generate: function generate() {\n\t      return \"\";\n\t    }\n\t  };\n\t\n\t  function parse(route, names, specificity) {\n\t    // normalize route as not starting with a \"/\". Recognition will\n\t    // also normalize.\n\t    if (route.charAt(0) === \"/\") {\n\t      route = route.substr(1);\n\t    }\n\t\n\t    var segments = route.split(\"/\"),\n\t        results = [];\n\t\n\t    // A routes has specificity determined by the order that its different segments\n\t    // appear in. This system mirrors how the magnitude of numbers written as strings\n\t    // works.\n\t    // Consider a number written as: \"abc\". An example would be \"200\". Any other number written\n\t    // \"xyz\" will be smaller than \"abc\" so long as `a > z`. For instance, \"199\" is smaller\n\t    // then \"200\", even though \"y\" and \"z\" (which are both 9) are larger than \"0\" (the value\n\t    // of (`b` and `c`). This is because the leading symbol, \"2\", is larger than the other\n\t    // leading symbol, \"1\".\n\t    // The rule is that symbols to the left carry more weight than symbols to the right\n\t    // when a number is written out as a string. In the above strings, the leading digit\n\t    // represents how many 100's are in the number, and it carries more weight than the middle\n\t    // number which represents how many 10's are in the number.\n\t    // This system of number magnitude works well for route specificity, too. A route written as\n\t    // `a/b/c` will be more specific than `x/y/z` as long as `a` is more specific than\n\t    // `x`, irrespective of the other parts.\n\t    // Because of this similarity, we assign each type of segment a number value written as a\n\t    // string. We can find the specificity of compound routes by concatenating these strings\n\t    // together, from left to right. After we have looped through all of the segments,\n\t    // we convert the string to a number.\n\t    specificity.val = '';\n\t\n\t    for (var i = 0, l = segments.length; i < l; i++) {\n\t      var segment = segments[i],\n\t          match;\n\t\n\t      if (match = segment.match(/^:([^\\/]+)$/)) {\n\t        results.push(new DynamicSegment(match[1]));\n\t        names.push(match[1]);\n\t        specificity.val += '3';\n\t      } else if (match = segment.match(/^\\*([^\\/]+)$/)) {\n\t        results.push(new StarSegment(match[1]));\n\t        specificity.val += '2';\n\t        names.push(match[1]);\n\t      } else if (segment === \"\") {\n\t        results.push(new EpsilonSegment());\n\t        specificity.val += '1';\n\t      } else {\n\t        results.push(new StaticSegment(segment));\n\t        specificity.val += '4';\n\t      }\n\t    }\n\t\n\t    specificity.val = +specificity.val;\n\t\n\t    return results;\n\t  }\n\t\n\t  // A State has a character specification and (`charSpec`) and a list of possible\n\t  // subsequent states (`nextStates`).\n\t  //\n\t  // If a State is an accepting state, it will also have several additional\n\t  // properties:\n\t  //\n\t  // * `regex`: A regular expression that is used to extract parameters from paths\n\t  //   that reached this accepting state.\n\t  // * `handlers`: Information on how to convert the list of captures into calls\n\t  //   to registered handlers with the specified parameters\n\t  // * `types`: How many static, dynamic or star segments in this route. Used to\n\t  //   decide which route to use if multiple registered routes match a path.\n\t  //\n\t  // Currently, State is implemented naively by looping over `nextStates` and\n\t  // comparing a character specification against a character. A more efficient\n\t  // implementation would use a hash of keys pointing at one or more next states.\n\t\n\t  function State(charSpec) {\n\t    this.charSpec = charSpec;\n\t    this.nextStates = [];\n\t  }\n\t\n\t  State.prototype = {\n\t    get: function get(charSpec) {\n\t      var nextStates = this.nextStates;\n\t\n\t      for (var i = 0, l = nextStates.length; i < l; i++) {\n\t        var child = nextStates[i];\n\t\n\t        var isEqual = child.charSpec.validChars === charSpec.validChars;\n\t        isEqual = isEqual && child.charSpec.invalidChars === charSpec.invalidChars;\n\t\n\t        if (isEqual) {\n\t          return child;\n\t        }\n\t      }\n\t    },\n\t\n\t    put: function put(charSpec) {\n\t      var state;\n\t\n\t      // If the character specification already exists in a child of the current\n\t      // state, just return that state.\n\t      if (state = this.get(charSpec)) {\n\t        return state;\n\t      }\n\t\n\t      // Make a new state for the character spec\n\t      state = new State(charSpec);\n\t\n\t      // Insert the new state as a child of the current state\n\t      this.nextStates.push(state);\n\t\n\t      // If this character specification repeats, insert the new state as a child\n\t      // of itself. Note that this will not trigger an infinite loop because each\n\t      // transition during recognition consumes a character.\n\t      if (charSpec.repeat) {\n\t        state.nextStates.push(state);\n\t      }\n\t\n\t      // Return the new state\n\t      return state;\n\t    },\n\t\n\t    // Find a list of child states matching the next character\n\t    match: function match(ch) {\n\t      // DEBUG \"Processing `\" + ch + \"`:\"\n\t      var nextStates = this.nextStates,\n\t          child,\n\t          charSpec,\n\t          chars;\n\t\n\t      // DEBUG \"  \" + debugState(this)\n\t      var returned = [];\n\t\n\t      for (var i = 0, l = nextStates.length; i < l; i++) {\n\t        child = nextStates[i];\n\t\n\t        charSpec = child.charSpec;\n\t\n\t        if (typeof (chars = charSpec.validChars) !== 'undefined') {\n\t          if (chars.indexOf(ch) !== -1) {\n\t            returned.push(child);\n\t          }\n\t        } else if (typeof (chars = charSpec.invalidChars) !== 'undefined') {\n\t          if (chars.indexOf(ch) === -1) {\n\t            returned.push(child);\n\t          }\n\t        }\n\t      }\n\t\n\t      return returned;\n\t    }\n\t\n\t    /** IF DEBUG\n\t    , debug: function() {\n\t      var charSpec = this.charSpec,\n\t          debug = \"[\",\n\t          chars = charSpec.validChars || charSpec.invalidChars;\n\t       if (charSpec.invalidChars) { debug += \"^\"; }\n\t      debug += chars;\n\t      debug += \"]\";\n\t       if (charSpec.repeat) { debug += \"+\"; }\n\t       return debug;\n\t    }\n\t    END IF **/\n\t  };\n\t\n\t  /** IF DEBUG\n\t  function debug(log) {\n\t    console.log(log);\n\t  }\n\t\n\t  function debugState(state) {\n\t    return state.nextStates.map(function(n) {\n\t      if (n.nextStates.length === 0) { return \"( \" + n.debug() + \" [accepting] )\"; }\n\t      return \"( \" + n.debug() + \" <then> \" + n.nextStates.map(function(s) { return s.debug() }).join(\" or \") + \" )\";\n\t    }).join(\", \")\n\t  }\n\t  END IF **/\n\t\n\t  // Sort the routes by specificity\n\t  function sortSolutions(states) {\n\t    return states.sort(function (a, b) {\n\t      return b.specificity.val - a.specificity.val;\n\t    });\n\t  }\n\t\n\t  function recognizeChar(states, ch) {\n\t    var nextStates = [];\n\t\n\t    for (var i = 0, l = states.length; i < l; i++) {\n\t      var state = states[i];\n\t\n\t      nextStates = nextStates.concat(state.match(ch));\n\t    }\n\t\n\t    return nextStates;\n\t  }\n\t\n\t  var oCreate = Object.create || function (proto) {\n\t    function F() {}\n\t    F.prototype = proto;\n\t    return new F();\n\t  };\n\t\n\t  function RecognizeResults(queryParams) {\n\t    this.queryParams = queryParams || {};\n\t  }\n\t  RecognizeResults.prototype = oCreate({\n\t    splice: Array.prototype.splice,\n\t    slice: Array.prototype.slice,\n\t    push: Array.prototype.push,\n\t    length: 0,\n\t    queryParams: null\n\t  });\n\t\n\t  function findHandler(state, path, queryParams) {\n\t    var handlers = state.handlers,\n\t        regex = state.regex;\n\t    var captures = path.match(regex),\n\t        currentCapture = 1;\n\t    var result = new RecognizeResults(queryParams);\n\t\n\t    for (var i = 0, l = handlers.length; i < l; i++) {\n\t      var handler = handlers[i],\n\t          names = handler.names,\n\t          params = {};\n\t\n\t      for (var j = 0, m = names.length; j < m; j++) {\n\t        params[names[j]] = captures[currentCapture++];\n\t      }\n\t\n\t      result.push({ handler: handler.handler, params: params, isDynamic: !!names.length });\n\t    }\n\t\n\t    return result;\n\t  }\n\t\n\t  function addSegment(currentState, segment) {\n\t    segment.eachChar(function (ch) {\n\t      var state;\n\t\n\t      currentState = currentState.put(ch);\n\t    });\n\t\n\t    return currentState;\n\t  }\n\t\n\t  function decodeQueryParamPart(part) {\n\t    // http://www.w3.org/TR/html401/interact/forms.html#h-17.13.4.1\n\t    part = part.replace(/\\+/gm, '%20');\n\t    return tryDecode(part, true);\n\t  }\n\t\n\t  // The main interface\n\t\n\t  var RouteRecognizer = function RouteRecognizer() {\n\t    this.rootState = new State();\n\t    this.names = {};\n\t  };\n\t\n\t  RouteRecognizer.prototype = {\n\t    add: function add(routes, options) {\n\t      var currentState = this.rootState,\n\t          regex = \"^\",\n\t          specificity = {},\n\t          handlers = [],\n\t          allSegments = [],\n\t          name;\n\t\n\t      var isEmpty = true;\n\t\n\t      for (var i = 0, l = routes.length; i < l; i++) {\n\t        var route = routes[i],\n\t            names = [];\n\t\n\t        var segments = parse(route.path, names, specificity);\n\t\n\t        allSegments = allSegments.concat(segments);\n\t\n\t        for (var j = 0, m = segments.length; j < m; j++) {\n\t          var segment = segments[j];\n\t\n\t          if (segment instanceof EpsilonSegment) {\n\t            continue;\n\t          }\n\t\n\t          isEmpty = false;\n\t\n\t          // Add a \"/\" for the new segment\n\t          currentState = currentState.put({ validChars: \"/\" });\n\t          regex += \"/\";\n\t\n\t          // Add a representation of the segment to the NFA and regex\n\t          currentState = addSegment(currentState, segment);\n\t          regex += segment.regex();\n\t        }\n\t\n\t        var handler = { handler: route.handler, names: names };\n\t        handlers.push(handler);\n\t      }\n\t\n\t      if (isEmpty) {\n\t        currentState = currentState.put({ validChars: \"/\" });\n\t        regex += \"/\";\n\t      }\n\t\n\t      currentState.handlers = handlers;\n\t      currentState.regex = new RegExp(regex + \"$\");\n\t      currentState.specificity = specificity;\n\t\n\t      if (name = options && options.as) {\n\t        this.names[name] = {\n\t          segments: allSegments,\n\t          handlers: handlers\n\t        };\n\t      }\n\t    },\n\t\n\t    handlersFor: function handlersFor(name) {\n\t      var route = this.names[name],\n\t          result = [];\n\t      if (!route) {\n\t        throw new Error(\"There is no route named \" + name);\n\t      }\n\t\n\t      for (var i = 0, l = route.handlers.length; i < l; i++) {\n\t        result.push(route.handlers[i]);\n\t      }\n\t\n\t      return result;\n\t    },\n\t\n\t    hasRoute: function hasRoute(name) {\n\t      return !!this.names[name];\n\t    },\n\t\n\t    generate: function generate(name, params) {\n\t      var route = this.names[name],\n\t          output = \"\";\n\t      if (!route) {\n\t        throw new Error(\"There is no route named \" + name);\n\t      }\n\t\n\t      var segments = route.segments;\n\t\n\t      for (var i = 0, l = segments.length; i < l; i++) {\n\t        var segment = segments[i];\n\t\n\t        if (segment instanceof EpsilonSegment) {\n\t          continue;\n\t        }\n\t\n\t        output += \"/\";\n\t        output += segment.generate(params);\n\t      }\n\t\n\t      if (output.charAt(0) !== '/') {\n\t        output = '/' + output;\n\t      }\n\t\n\t      if (params && params.queryParams) {\n\t        output += this.generateQueryString(params.queryParams);\n\t      }\n\t\n\t      return output;\n\t    },\n\t\n\t    generateQueryString: function generateQueryString(params) {\n\t      var pairs = [];\n\t      var keys = [];\n\t      for (var key in params) {\n\t        if (params.hasOwnProperty(key)) {\n\t          keys.push(key);\n\t        }\n\t      }\n\t      keys.sort();\n\t      for (var i = 0, len = keys.length; i < len; i++) {\n\t        key = keys[i];\n\t        var value = params[key];\n\t        if (value == null) {\n\t          continue;\n\t        }\n\t        var pair = encodeURIComponent(key);\n\t        if (isArray(value)) {\n\t          for (var j = 0, l = value.length; j < l; j++) {\n\t            var arrayPair = key + '[]' + '=' + encodeURIComponent(value[j]);\n\t            pairs.push(arrayPair);\n\t          }\n\t        } else {\n\t          pair += \"=\" + encodeURIComponent(value);\n\t          pairs.push(pair);\n\t        }\n\t      }\n\t\n\t      if (pairs.length === 0) {\n\t        return '';\n\t      }\n\t\n\t      return \"?\" + pairs.join(\"&\");\n\t    },\n\t\n\t    parseQueryString: function parseQueryString(queryString) {\n\t      var pairs = queryString.split(\"&\"),\n\t          queryParams = {};\n\t      for (var i = 0; i < pairs.length; i++) {\n\t        var pair = pairs[i].split('='),\n\t            key = decodeQueryParamPart(pair[0]),\n\t            keyLength = key.length,\n\t            isArray = false,\n\t            value;\n\t        if (pair.length === 1) {\n\t          value = 'true';\n\t        } else {\n\t          //Handle arrays\n\t          if (keyLength > 2 && key.slice(keyLength - 2) === '[]') {\n\t            isArray = true;\n\t            key = key.slice(0, keyLength - 2);\n\t            if (!queryParams[key]) {\n\t              queryParams[key] = [];\n\t            }\n\t          }\n\t          value = pair[1] ? decodeQueryParamPart(pair[1]) : '';\n\t        }\n\t        if (isArray) {\n\t          queryParams[key].push(value);\n\t        } else {\n\t          queryParams[key] = value;\n\t        }\n\t      }\n\t      return queryParams;\n\t    },\n\t\n\t    recognize: function recognize(path, silent) {\n\t      noWarning = silent;\n\t      var states = [this.rootState],\n\t          pathLen,\n\t          i,\n\t          l,\n\t          queryStart,\n\t          queryParams = {},\n\t          isSlashDropped = false;\n\t\n\t      queryStart = path.indexOf('?');\n\t      if (queryStart !== -1) {\n\t        var queryString = path.substr(queryStart + 1, path.length);\n\t        path = path.substr(0, queryStart);\n\t        if (queryString) {\n\t          queryParams = this.parseQueryString(queryString);\n\t        }\n\t      }\n\t\n\t      path = tryDecode(path);\n\t      if (!path) return;\n\t\n\t      // DEBUG GROUP path\n\t\n\t      if (path.charAt(0) !== \"/\") {\n\t        path = \"/\" + path;\n\t      }\n\t\n\t      pathLen = path.length;\n\t      if (pathLen > 1 && path.charAt(pathLen - 1) === \"/\") {\n\t        path = path.substr(0, pathLen - 1);\n\t        isSlashDropped = true;\n\t      }\n\t\n\t      for (i = 0, l = path.length; i < l; i++) {\n\t        states = recognizeChar(states, path.charAt(i));\n\t        if (!states.length) {\n\t          break;\n\t        }\n\t      }\n\t\n\t      // END DEBUG GROUP\n\t\n\t      var solutions = [];\n\t      for (i = 0, l = states.length; i < l; i++) {\n\t        if (states[i].handlers) {\n\t          solutions.push(states[i]);\n\t        }\n\t      }\n\t\n\t      states = sortSolutions(solutions);\n\t\n\t      var state = solutions[0];\n\t\n\t      if (state && state.handlers) {\n\t        // if a trailing slash was dropped and a star segment is the last segment\n\t        // specified, put the trailing slash back\n\t        if (isSlashDropped && state.regex.source.slice(-5) === \"(.+)$\") {\n\t          path = path + \"/\";\n\t        }\n\t        return findHandler(state, path, queryParams);\n\t      }\n\t    }\n\t  };\n\t\n\t  RouteRecognizer.prototype.map = map;\n\t\n\t  var genQuery = RouteRecognizer.prototype.generateQueryString;\n\t\n\t  // export default for holding the Vue reference\n\t  var exports$1 = {};\n\t  /**\n\t   * Warn stuff.\n\t   *\n\t   * @param {String} msg\n\t   */\n\t\n\t  function warn$1(msg) {\n\t    /* istanbul ignore next */\n\t    if (typeof console !== 'undefined') {\n\t      console.error('[vue-router] ' + msg);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Resolve a relative path.\n\t   *\n\t   * @param {String} base\n\t   * @param {String} relative\n\t   * @param {Boolean} append\n\t   * @return {String}\n\t   */\n\t\n\t  function resolvePath(base, relative, append) {\n\t    var query = base.match(/(\\?.*)$/);\n\t    if (query) {\n\t      query = query[1];\n\t      base = base.slice(0, -query.length);\n\t    }\n\t    // a query!\n\t    if (relative.charAt(0) === '?') {\n\t      return base + relative;\n\t    }\n\t    var stack = base.split('/');\n\t    // remove trailing segment if:\n\t    // - not appending\n\t    // - appending to trailing slash (last segment is empty)\n\t    if (!append || !stack[stack.length - 1]) {\n\t      stack.pop();\n\t    }\n\t    // resolve relative path\n\t    var segments = relative.replace(/^\\//, '').split('/');\n\t    for (var i = 0; i < segments.length; i++) {\n\t      var segment = segments[i];\n\t      if (segment === '.') {\n\t        continue;\n\t      } else if (segment === '..') {\n\t        stack.pop();\n\t      } else {\n\t        stack.push(segment);\n\t      }\n\t    }\n\t    // ensure leading slash\n\t    if (stack[0] !== '') {\n\t      stack.unshift('');\n\t    }\n\t    return stack.join('/');\n\t  }\n\t\n\t  /**\n\t   * Forgiving check for a promise\n\t   *\n\t   * @param {Object} p\n\t   * @return {Boolean}\n\t   */\n\t\n\t  function isPromise(p) {\n\t    return p && typeof p.then === 'function';\n\t  }\n\t\n\t  /**\n\t   * Retrive a route config field from a component instance\n\t   * OR a component contructor.\n\t   *\n\t   * @param {Function|Vue} component\n\t   * @param {String} name\n\t   * @return {*}\n\t   */\n\t\n\t  function getRouteConfig(component, name) {\n\t    var options = component && (component.$options || component.options);\n\t    return options && options.route && options.route[name];\n\t  }\n\t\n\t  /**\n\t   * Resolve an async component factory. Have to do a dirty\n\t   * mock here because of Vue core's internal API depends on\n\t   * an ID check.\n\t   *\n\t   * @param {Object} handler\n\t   * @param {Function} cb\n\t   */\n\t\n\t  var resolver = undefined;\n\t\n\t  function resolveAsyncComponent(handler, cb) {\n\t    if (!resolver) {\n\t      resolver = {\n\t        resolve: exports$1.Vue.prototype._resolveComponent,\n\t        $options: {\n\t          components: {\n\t            _: handler.component\n\t          }\n\t        }\n\t      };\n\t    } else {\n\t      resolver.$options.components._ = handler.component;\n\t    }\n\t    resolver.resolve('_', function (Component) {\n\t      handler.component = Component;\n\t      cb(Component);\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Map the dynamic segments in a path to params.\n\t   *\n\t   * @param {String} path\n\t   * @param {Object} params\n\t   * @param {Object} query\n\t   */\n\t\n\t  function mapParams(path, params, query) {\n\t    if (params === undefined) params = {};\n\t\n\t    path = path.replace(/:([^\\/]+)/g, function (_, key) {\n\t      var val = params[key];\n\t      /* istanbul ignore if */\n\t      if (!val) {\n\t        warn$1('param \"' + key + '\" not found when generating ' + 'path for \"' + path + '\" with params ' + JSON.stringify(params));\n\t      }\n\t      return val || '';\n\t    });\n\t    if (query) {\n\t      path += genQuery(query);\n\t    }\n\t    return path;\n\t  }\n\t\n\t  var hashRE = /#.*$/;\n\t\n\t  var HTML5History = (function () {\n\t    function HTML5History(_ref) {\n\t      var root = _ref.root;\n\t      var onChange = _ref.onChange;\n\t      babelHelpers.classCallCheck(this, HTML5History);\n\t\n\t      if (root && root !== '/') {\n\t        // make sure there's the starting slash\n\t        if (root.charAt(0) !== '/') {\n\t          root = '/' + root;\n\t        }\n\t        // remove trailing slash\n\t        this.root = root.replace(/\\/$/, '');\n\t        this.rootRE = new RegExp('^\\\\' + this.root);\n\t      } else {\n\t        this.root = null;\n\t      }\n\t      this.onChange = onChange;\n\t      // check base tag\n\t      var baseEl = document.querySelector('base');\n\t      this.base = baseEl && baseEl.getAttribute('href');\n\t    }\n\t\n\t    HTML5History.prototype.start = function start() {\n\t      var _this = this;\n\t\n\t      this.listener = function (e) {\n\t        var url = location.pathname + location.search;\n\t        if (_this.root) {\n\t          url = url.replace(_this.rootRE, '');\n\t        }\n\t        _this.onChange(url, e && e.state, location.hash);\n\t      };\n\t      window.addEventListener('popstate', this.listener);\n\t      this.listener();\n\t    };\n\t\n\t    HTML5History.prototype.stop = function stop() {\n\t      window.removeEventListener('popstate', this.listener);\n\t    };\n\t\n\t    HTML5History.prototype.go = function go(path, replace, append) {\n\t      var url = this.formatPath(path, append);\n\t      if (replace) {\n\t        history.replaceState({}, '', url);\n\t      } else {\n\t        // record scroll position by replacing current state\n\t        history.replaceState({\n\t          pos: {\n\t            x: window.pageXOffset,\n\t            y: window.pageYOffset\n\t          }\n\t        }, '', location.href);\n\t        // then push new state\n\t        history.pushState({}, '', url);\n\t      }\n\t      var hashMatch = path.match(hashRE);\n\t      var hash = hashMatch && hashMatch[0];\n\t      path = url\n\t      // strip hash so it doesn't mess up params\n\t      .replace(hashRE, '')\n\t      // remove root before matching\n\t      .replace(this.rootRE, '');\n\t      this.onChange(path, null, hash);\n\t    };\n\t\n\t    HTML5History.prototype.formatPath = function formatPath(path, append) {\n\t      return path.charAt(0) === '/'\n\t      // absolute path\n\t      ? this.root ? this.root + '/' + path.replace(/^\\//, '') : path : resolvePath(this.base || location.pathname, path, append);\n\t    };\n\t\n\t    return HTML5History;\n\t  })();\n\t\n\t  var HashHistory = (function () {\n\t    function HashHistory(_ref) {\n\t      var hashbang = _ref.hashbang;\n\t      var onChange = _ref.onChange;\n\t      babelHelpers.classCallCheck(this, HashHistory);\n\t\n\t      this.hashbang = hashbang;\n\t      this.onChange = onChange;\n\t    }\n\t\n\t    HashHistory.prototype.start = function start() {\n\t      var self = this;\n\t      this.listener = function () {\n\t        var path = location.hash;\n\t        var raw = path.replace(/^#!?/, '');\n\t        // always\n\t        if (raw.charAt(0) !== '/') {\n\t          raw = '/' + raw;\n\t        }\n\t        var formattedPath = self.formatPath(raw);\n\t        if (formattedPath !== path) {\n\t          location.replace(formattedPath);\n\t          return;\n\t        }\n\t        // determine query\n\t        // note it's possible to have queries in both the actual URL\n\t        // and the hash fragment itself.\n\t        var query = location.search && path.indexOf('?') > -1 ? '&' + location.search.slice(1) : location.search;\n\t        self.onChange(path.replace(/^#!?/, '') + query);\n\t      };\n\t      window.addEventListener('hashchange', this.listener);\n\t      this.listener();\n\t    };\n\t\n\t    HashHistory.prototype.stop = function stop() {\n\t      window.removeEventListener('hashchange', this.listener);\n\t    };\n\t\n\t    HashHistory.prototype.go = function go(path, replace, append) {\n\t      path = this.formatPath(path, append);\n\t      if (replace) {\n\t        location.replace(path);\n\t      } else {\n\t        location.hash = path;\n\t      }\n\t    };\n\t\n\t    HashHistory.prototype.formatPath = function formatPath(path, append) {\n\t      var isAbsoloute = path.charAt(0) === '/';\n\t      var prefix = '#' + (this.hashbang ? '!' : '');\n\t      return isAbsoloute ? prefix + path : prefix + resolvePath(location.hash.replace(/^#!?/, ''), path, append);\n\t    };\n\t\n\t    return HashHistory;\n\t  })();\n\t\n\t  var AbstractHistory = (function () {\n\t    function AbstractHistory(_ref) {\n\t      var onChange = _ref.onChange;\n\t      babelHelpers.classCallCheck(this, AbstractHistory);\n\t\n\t      this.onChange = onChange;\n\t      this.currentPath = '/';\n\t    }\n\t\n\t    AbstractHistory.prototype.start = function start() {\n\t      this.onChange('/');\n\t    };\n\t\n\t    AbstractHistory.prototype.stop = function stop() {\n\t      // noop\n\t    };\n\t\n\t    AbstractHistory.prototype.go = function go(path, replace, append) {\n\t      path = this.currentPath = this.formatPath(path, append);\n\t      this.onChange(path);\n\t    };\n\t\n\t    AbstractHistory.prototype.formatPath = function formatPath(path, append) {\n\t      return path.charAt(0) === '/' ? path : resolvePath(this.currentPath, path, append);\n\t    };\n\t\n\t    return AbstractHistory;\n\t  })();\n\t\n\t  /**\n\t   * Determine the reusability of an existing router view.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Object} handler\n\t   * @param {Transition} transition\n\t   */\n\t\n\t  function canReuse(view, handler, transition) {\n\t    var component = view.childVM;\n\t    if (!component || !handler) {\n\t      return false;\n\t    }\n\t    // important: check view.Component here because it may\n\t    // have been changed in activate hook\n\t    if (view.Component !== handler.component) {\n\t      return false;\n\t    }\n\t    var canReuseFn = getRouteConfig(component, 'canReuse');\n\t    return typeof canReuseFn === 'boolean' ? canReuseFn : canReuseFn ? canReuseFn.call(component, {\n\t      to: transition.to,\n\t      from: transition.from\n\t    }) : true; // defaults to true\n\t  }\n\t\n\t  /**\n\t   * Check if a component can deactivate.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Transition} transition\n\t   * @param {Function} next\n\t   */\n\t\n\t  function canDeactivate(view, transition, next) {\n\t    var fromComponent = view.childVM;\n\t    var hook = getRouteConfig(fromComponent, 'canDeactivate');\n\t    if (!hook) {\n\t      next();\n\t    } else {\n\t      transition.callHook(hook, fromComponent, next, {\n\t        expectBoolean: true\n\t      });\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Check if a component can activate.\n\t   *\n\t   * @param {Object} handler\n\t   * @param {Transition} transition\n\t   * @param {Function} next\n\t   */\n\t\n\t  function canActivate(handler, transition, next) {\n\t    resolveAsyncComponent(handler, function (Component) {\n\t      // have to check due to async-ness\n\t      if (transition.aborted) {\n\t        return;\n\t      }\n\t      // determine if this component can be activated\n\t      var hook = getRouteConfig(Component, 'canActivate');\n\t      if (!hook) {\n\t        next();\n\t      } else {\n\t        transition.callHook(hook, null, next, {\n\t          expectBoolean: true\n\t        });\n\t      }\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Call deactivate hooks for existing router-views.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Transition} transition\n\t   * @param {Function} next\n\t   */\n\t\n\t  function deactivate(view, transition, next) {\n\t    var component = view.childVM;\n\t    var hook = getRouteConfig(component, 'deactivate');\n\t    if (!hook) {\n\t      next();\n\t    } else {\n\t      transition.callHooks(hook, component, next);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Activate / switch component for a router-view.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Transition} transition\n\t   * @param {Number} depth\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function activate(view, transition, depth, cb, reuse) {\n\t    var handler = transition.activateQueue[depth];\n\t    if (!handler) {\n\t      saveChildView(view);\n\t      if (view._bound) {\n\t        view.setComponent(null);\n\t      }\n\t      cb && cb();\n\t      return;\n\t    }\n\t\n\t    var Component = view.Component = handler.component;\n\t    var activateHook = getRouteConfig(Component, 'activate');\n\t    var dataHook = getRouteConfig(Component, 'data');\n\t    var waitForData = getRouteConfig(Component, 'waitForData');\n\t\n\t    view.depth = depth;\n\t    view.activated = false;\n\t\n\t    var component = undefined;\n\t    var loading = !!(dataHook && !waitForData);\n\t\n\t    // \"reuse\" is a flag passed down when the parent view is\n\t    // either reused via keep-alive or as a child of a kept-alive view.\n\t    // of course we can only reuse if the current kept-alive instance\n\t    // is of the correct type.\n\t    reuse = reuse && view.childVM && view.childVM.constructor === Component;\n\t\n\t    if (reuse) {\n\t      // just reuse\n\t      component = view.childVM;\n\t      component.$loadingRouteData = loading;\n\t    } else {\n\t      saveChildView(view);\n\t\n\t      // unbuild current component. this step also destroys\n\t      // and removes all nested child views.\n\t      view.unbuild(true);\n\t\n\t      // build the new component. this will also create the\n\t      // direct child view of the current one. it will register\n\t      // itself as view.childView.\n\t      component = view.build({\n\t        _meta: {\n\t          $loadingRouteData: loading\n\t        },\n\t        created: function created() {\n\t          this._routerView = view;\n\t        }\n\t      });\n\t\n\t      // handle keep-alive.\n\t      // when a kept-alive child vm is restored, we need to\n\t      // add its cached child views into the router's view list,\n\t      // and also properly update current view's child view.\n\t      if (view.keepAlive) {\n\t        component.$loadingRouteData = loading;\n\t        var cachedChildView = component._keepAliveRouterView;\n\t        if (cachedChildView) {\n\t          view.childView = cachedChildView;\n\t          component._keepAliveRouterView = null;\n\t        }\n\t      }\n\t    }\n\t\n\t    // cleanup the component in case the transition is aborted\n\t    // before the component is ever inserted.\n\t    var cleanup = function cleanup() {\n\t      component.$destroy();\n\t    };\n\t\n\t    // actually insert the component and trigger transition\n\t    var insert = function insert() {\n\t      if (reuse) {\n\t        cb && cb();\n\t        return;\n\t      }\n\t      var router = transition.router;\n\t      if (router._rendered || router._transitionOnLoad) {\n\t        view.transition(component);\n\t      } else {\n\t        // no transition on first render, manual transition\n\t        /* istanbul ignore if */\n\t        if (view.setCurrent) {\n\t          // 0.12 compat\n\t          view.setCurrent(component);\n\t        } else {\n\t          // 1.0\n\t          view.childVM = component;\n\t        }\n\t        component.$before(view.anchor, null, false);\n\t      }\n\t      cb && cb();\n\t    };\n\t\n\t    var afterData = function afterData() {\n\t      // activate the child view\n\t      if (view.childView) {\n\t        activate(view.childView, transition, depth + 1, null, reuse || view.keepAlive);\n\t      }\n\t      insert();\n\t    };\n\t\n\t    // called after activation hook is resolved\n\t    var afterActivate = function afterActivate() {\n\t      view.activated = true;\n\t      if (dataHook && waitForData) {\n\t        // wait until data loaded to insert\n\t        loadData(component, transition, dataHook, afterData, cleanup);\n\t      } else {\n\t        // load data and insert at the same time\n\t        if (dataHook) {\n\t          loadData(component, transition, dataHook);\n\t        }\n\t        afterData();\n\t      }\n\t    };\n\t\n\t    if (activateHook) {\n\t      transition.callHooks(activateHook, component, afterActivate, {\n\t        cleanup: cleanup,\n\t        postActivate: true\n\t      });\n\t    } else {\n\t      afterActivate();\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Reuse a view, just reload data if necessary.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Transition} transition\n\t   */\n\t\n\t  function reuse(view, transition) {\n\t    var component = view.childVM;\n\t    var dataHook = getRouteConfig(component, 'data');\n\t    if (dataHook) {\n\t      loadData(component, transition, dataHook);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Asynchronously load and apply data to component.\n\t   *\n\t   * @param {Vue} component\n\t   * @param {Transition} transition\n\t   * @param {Function} hook\n\t   * @param {Function} cb\n\t   * @param {Function} cleanup\n\t   */\n\t\n\t  function loadData(component, transition, hook, cb, cleanup) {\n\t    component.$loadingRouteData = true;\n\t    transition.callHooks(hook, component, function () {\n\t      component.$loadingRouteData = false;\n\t      component.$emit('route-data-loaded', component);\n\t      cb && cb();\n\t    }, {\n\t      cleanup: cleanup,\n\t      postActivate: true,\n\t      processData: function processData(data) {\n\t        // handle promise sugar syntax\n\t        var promises = [];\n\t        if (isPlainObject(data)) {\n\t          Object.keys(data).forEach(function (key) {\n\t            var val = data[key];\n\t            if (isPromise(val)) {\n\t              promises.push(val.then(function (resolvedVal) {\n\t                component.$set(key, resolvedVal);\n\t              }));\n\t            } else {\n\t              component.$set(key, val);\n\t            }\n\t          });\n\t        }\n\t        if (promises.length) {\n\t          return promises[0].constructor.all(promises);\n\t        }\n\t      }\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Save the child view for a kept-alive view so that\n\t   * we can restore it when it is switched back to.\n\t   *\n\t   * @param {Directive} view\n\t   */\n\t\n\t  function saveChildView(view) {\n\t    if (view.keepAlive && view.childVM && view.childView) {\n\t      view.childVM._keepAliveRouterView = view.childView;\n\t    }\n\t    view.childView = null;\n\t  }\n\t\n\t  /**\n\t   * Check plain object.\n\t   *\n\t   * @param {*} val\n\t   */\n\t\n\t  function isPlainObject(val) {\n\t    return Object.prototype.toString.call(val) === '[object Object]';\n\t  }\n\t\n\t  /**\n\t   * A RouteTransition object manages the pipeline of a\n\t   * router-view switching process. This is also the object\n\t   * passed into user route hooks.\n\t   *\n\t   * @param {Router} router\n\t   * @param {Route} to\n\t   * @param {Route} from\n\t   */\n\t\n\t  var RouteTransition = (function () {\n\t    function RouteTransition(router, to, from) {\n\t      babelHelpers.classCallCheck(this, RouteTransition);\n\t\n\t      this.router = router;\n\t      this.to = to;\n\t      this.from = from;\n\t      this.next = null;\n\t      this.aborted = false;\n\t      this.done = false;\n\t    }\n\t\n\t    /**\n\t     * Abort current transition and return to previous location.\n\t     */\n\t\n\t    RouteTransition.prototype.abort = function abort() {\n\t      if (!this.aborted) {\n\t        this.aborted = true;\n\t        // if the root path throws an error during validation\n\t        // on initial load, it gets caught in an infinite loop.\n\t        var abortingOnLoad = !this.from.path && this.to.path === '/';\n\t        if (!abortingOnLoad) {\n\t          this.router.replace(this.from.path || '/');\n\t        }\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Abort current transition and redirect to a new location.\n\t     *\n\t     * @param {String} path\n\t     */\n\t\n\t    RouteTransition.prototype.redirect = function redirect(path) {\n\t      if (!this.aborted) {\n\t        this.aborted = true;\n\t        if (typeof path === 'string') {\n\t          path = mapParams(path, this.to.params, this.to.query);\n\t        } else {\n\t          path.params = path.params || this.to.params;\n\t          path.query = path.query || this.to.query;\n\t        }\n\t        this.router.replace(path);\n\t      }\n\t    };\n\t\n\t    /**\n\t     * A router view transition's pipeline can be described as\n\t     * follows, assuming we are transitioning from an existing\n\t     * <router-view> chain [Component A, Component B] to a new\n\t     * chain [Component A, Component C]:\n\t     *\n\t     *  A    A\n\t     *  | => |\n\t     *  B    C\n\t     *\n\t     * 1. Reusablity phase:\n\t     *   -> canReuse(A, A)\n\t     *   -> canReuse(B, C)\n\t     *   -> determine new queues:\n\t     *      - deactivation: [B]\n\t     *      - activation: [C]\n\t     *\n\t     * 2. Validation phase:\n\t     *   -> canDeactivate(B)\n\t     *   -> canActivate(C)\n\t     *\n\t     * 3. Activation phase:\n\t     *   -> deactivate(B)\n\t     *   -> activate(C)\n\t     *\n\t     * Each of these steps can be asynchronous, and any\n\t     * step can potentially abort the transition.\n\t     *\n\t     * @param {Function} cb\n\t     */\n\t\n\t    RouteTransition.prototype.start = function start(cb) {\n\t      var transition = this;\n\t\n\t      // determine the queue of views to deactivate\n\t      var deactivateQueue = [];\n\t      var view = this.router._rootView;\n\t      while (view) {\n\t        deactivateQueue.unshift(view);\n\t        view = view.childView;\n\t      }\n\t      var reverseDeactivateQueue = deactivateQueue.slice().reverse();\n\t\n\t      // determine the queue of route handlers to activate\n\t      var activateQueue = this.activateQueue = toArray(this.to.matched).map(function (match) {\n\t        return match.handler;\n\t      });\n\t\n\t      // 1. Reusability phase\n\t      var i = undefined,\n\t          reuseQueue = undefined;\n\t      for (i = 0; i < reverseDeactivateQueue.length; i++) {\n\t        if (!canReuse(reverseDeactivateQueue[i], activateQueue[i], transition)) {\n\t          break;\n\t        }\n\t      }\n\t      if (i > 0) {\n\t        reuseQueue = reverseDeactivateQueue.slice(0, i);\n\t        deactivateQueue = reverseDeactivateQueue.slice(i).reverse();\n\t        activateQueue = activateQueue.slice(i);\n\t      }\n\t\n\t      // 2. Validation phase\n\t      transition.runQueue(deactivateQueue, canDeactivate, function () {\n\t        transition.runQueue(activateQueue, canActivate, function () {\n\t          transition.runQueue(deactivateQueue, deactivate, function () {\n\t            // 3. Activation phase\n\t\n\t            // Update router current route\n\t            transition.router._onTransitionValidated(transition);\n\t\n\t            // trigger reuse for all reused views\n\t            reuseQueue && reuseQueue.forEach(function (view) {\n\t              return reuse(view, transition);\n\t            });\n\t\n\t            // the root of the chain that needs to be replaced\n\t            // is the top-most non-reusable view.\n\t            if (deactivateQueue.length) {\n\t              var _view = deactivateQueue[deactivateQueue.length - 1];\n\t              var depth = reuseQueue ? reuseQueue.length : 0;\n\t              activate(_view, transition, depth, cb);\n\t            } else {\n\t              cb();\n\t            }\n\t          });\n\t        });\n\t      });\n\t    };\n\t\n\t    /**\n\t     * Asynchronously and sequentially apply a function to a\n\t     * queue.\n\t     *\n\t     * @param {Array} queue\n\t     * @param {Function} fn\n\t     * @param {Function} cb\n\t     */\n\t\n\t    RouteTransition.prototype.runQueue = function runQueue(queue, fn, cb) {\n\t      var transition = this;\n\t      step(0);\n\t      function step(index) {\n\t        if (index >= queue.length) {\n\t          cb();\n\t        } else {\n\t          fn(queue[index], transition, function () {\n\t            step(index + 1);\n\t          });\n\t        }\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Call a user provided route transition hook and handle\n\t     * the response (e.g. if the user returns a promise).\n\t     *\n\t     * If the user neither expects an argument nor returns a\n\t     * promise, the hook is assumed to be synchronous.\n\t     *\n\t     * @param {Function} hook\n\t     * @param {*} [context]\n\t     * @param {Function} [cb]\n\t     * @param {Object} [options]\n\t     *                 - {Boolean} expectBoolean\n\t     *                 - {Boolean} postActive\n\t     *                 - {Function} processData\n\t     *                 - {Function} cleanup\n\t     */\n\t\n\t    RouteTransition.prototype.callHook = function callHook(hook, context, cb) {\n\t      var _ref = arguments.length <= 3 || arguments[3] === undefined ? {} : arguments[3];\n\t\n\t      var _ref$expectBoolean = _ref.expectBoolean;\n\t      var expectBoolean = _ref$expectBoolean === undefined ? false : _ref$expectBoolean;\n\t      var _ref$postActivate = _ref.postActivate;\n\t      var postActivate = _ref$postActivate === undefined ? false : _ref$postActivate;\n\t      var processData = _ref.processData;\n\t      var cleanup = _ref.cleanup;\n\t\n\t      var transition = this;\n\t      var nextCalled = false;\n\t\n\t      // abort the transition\n\t      var abort = function abort() {\n\t        cleanup && cleanup();\n\t        transition.abort();\n\t      };\n\t\n\t      // handle errors\n\t      var onError = function onError(err) {\n\t        postActivate ? next() : abort();\n\t        if (err && !transition.router._suppress) {\n\t          warn$1('Uncaught error during transition: ');\n\t          throw err instanceof Error ? err : new Error(err);\n\t        }\n\t      };\n\t\n\t      // since promise swallows errors, we have to\n\t      // throw it in the next tick...\n\t      var onPromiseError = function onPromiseError(err) {\n\t        try {\n\t          onError(err);\n\t        } catch (e) {\n\t          setTimeout(function () {\n\t            throw e;\n\t          }, 0);\n\t        }\n\t      };\n\t\n\t      // advance the transition to the next step\n\t      var next = function next() {\n\t        if (nextCalled) {\n\t          warn$1('transition.next() should be called only once.');\n\t          return;\n\t        }\n\t        nextCalled = true;\n\t        if (transition.aborted) {\n\t          cleanup && cleanup();\n\t          return;\n\t        }\n\t        cb && cb();\n\t      };\n\t\n\t      var nextWithBoolean = function nextWithBoolean(res) {\n\t        if (typeof res === 'boolean') {\n\t          res ? next() : abort();\n\t        } else if (isPromise(res)) {\n\t          res.then(function (ok) {\n\t            ok ? next() : abort();\n\t          }, onPromiseError);\n\t        } else if (!hook.length) {\n\t          next();\n\t        }\n\t      };\n\t\n\t      var nextWithData = function nextWithData(data) {\n\t        var res = undefined;\n\t        try {\n\t          res = processData(data);\n\t        } catch (err) {\n\t          return onError(err);\n\t        }\n\t        if (isPromise(res)) {\n\t          res.then(next, onPromiseError);\n\t        } else {\n\t          next();\n\t        }\n\t      };\n\t\n\t      // expose a clone of the transition object, so that each\n\t      // hook gets a clean copy and prevent the user from\n\t      // messing with the internals.\n\t      var exposed = {\n\t        to: transition.to,\n\t        from: transition.from,\n\t        abort: abort,\n\t        next: processData ? nextWithData : next,\n\t        redirect: function redirect() {\n\t          transition.redirect.apply(transition, arguments);\n\t        }\n\t      };\n\t\n\t      // actually call the hook\n\t      var res = undefined;\n\t      try {\n\t        res = hook.call(context, exposed);\n\t      } catch (err) {\n\t        return onError(err);\n\t      }\n\t\n\t      if (expectBoolean) {\n\t        // boolean hooks\n\t        nextWithBoolean(res);\n\t      } else if (isPromise(res)) {\n\t        // promise\n\t        if (processData) {\n\t          res.then(nextWithData, onPromiseError);\n\t        } else {\n\t          res.then(next, onPromiseError);\n\t        }\n\t      } else if (processData && isPlainOjbect(res)) {\n\t        // data promise sugar\n\t        nextWithData(res);\n\t      } else if (!hook.length) {\n\t        next();\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Call a single hook or an array of async hooks in series.\n\t     *\n\t     * @param {Array} hooks\n\t     * @param {*} context\n\t     * @param {Function} cb\n\t     * @param {Object} [options]\n\t     */\n\t\n\t    RouteTransition.prototype.callHooks = function callHooks(hooks, context, cb, options) {\n\t      var _this = this;\n\t\n\t      if (Array.isArray(hooks)) {\n\t        this.runQueue(hooks, function (hook, _, next) {\n\t          if (!_this.aborted) {\n\t            _this.callHook(hook, context, next, options);\n\t          }\n\t        }, cb);\n\t      } else {\n\t        this.callHook(hooks, context, cb, options);\n\t      }\n\t    };\n\t\n\t    return RouteTransition;\n\t  })();\n\t\n\t  function isPlainOjbect(val) {\n\t    return Object.prototype.toString.call(val) === '[object Object]';\n\t  }\n\t\n\t  function toArray(val) {\n\t    return val ? Array.prototype.slice.call(val) : [];\n\t  }\n\t\n\t  var internalKeysRE = /^(component|subRoutes|fullPath)$/;\n\t\n\t  /**\n\t   * Route Context Object\n\t   *\n\t   * @param {String} path\n\t   * @param {Router} router\n\t   */\n\t\n\t  var Route = function Route(path, router) {\n\t    var _this = this;\n\t\n\t    babelHelpers.classCallCheck(this, Route);\n\t\n\t    var matched = router._recognizer.recognize(path);\n\t    if (matched) {\n\t      // copy all custom fields from route configs\n\t      [].forEach.call(matched, function (match) {\n\t        for (var key in match.handler) {\n\t          if (!internalKeysRE.test(key)) {\n\t            _this[key] = match.handler[key];\n\t          }\n\t        }\n\t      });\n\t      // set query and params\n\t      this.query = matched.queryParams;\n\t      this.params = [].reduce.call(matched, function (prev, cur) {\n\t        if (cur.params) {\n\t          for (var key in cur.params) {\n\t            prev[key] = cur.params[key];\n\t          }\n\t        }\n\t        return prev;\n\t      }, {});\n\t    }\n\t    // expose path and router\n\t    this.path = path;\n\t    // for internal use\n\t    this.matched = matched || router._notFoundHandler;\n\t    // internal reference to router\n\t    Object.defineProperty(this, 'router', {\n\t      enumerable: false,\n\t      value: router\n\t    });\n\t    // Important: freeze self to prevent observation\n\t    Object.freeze(this);\n\t  };\n\t\n\t  function applyOverride (Vue) {\n\t    var _Vue$util = Vue.util;\n\t    var extend = _Vue$util.extend;\n\t    var isArray = _Vue$util.isArray;\n\t    var defineReactive = _Vue$util.defineReactive;\n\t\n\t    // override Vue's init and destroy process to keep track of router instances\n\t    var init = Vue.prototype._init;\n\t    Vue.prototype._init = function (options) {\n\t      options = options || {};\n\t      var root = options._parent || options.parent || this;\n\t      var router = root.$router;\n\t      var route = root.$route;\n\t      if (router) {\n\t        // expose router\n\t        this.$router = router;\n\t        router._children.push(this);\n\t        /* istanbul ignore if */\n\t        if (this._defineMeta) {\n\t          // 0.12\n\t          this._defineMeta('$route', route);\n\t        } else {\n\t          // 1.0\n\t          defineReactive(this, '$route', route);\n\t        }\n\t      }\n\t      init.call(this, options);\n\t    };\n\t\n\t    var destroy = Vue.prototype._destroy;\n\t    Vue.prototype._destroy = function () {\n\t      if (!this._isBeingDestroyed && this.$router) {\n\t        this.$router._children.$remove(this);\n\t      }\n\t      destroy.apply(this, arguments);\n\t    };\n\t\n\t    // 1.0 only: enable route mixins\n\t    var strats = Vue.config.optionMergeStrategies;\n\t    var hooksToMergeRE = /^(data|activate|deactivate)$/;\n\t\n\t    if (strats) {\n\t      strats.route = function (parentVal, childVal) {\n\t        if (!childVal) return parentVal;\n\t        if (!parentVal) return childVal;\n\t        var ret = {};\n\t        extend(ret, parentVal);\n\t        for (var key in childVal) {\n\t          var a = ret[key];\n\t          var b = childVal[key];\n\t          // for data, activate and deactivate, we need to merge them into\n\t          // arrays similar to lifecycle hooks.\n\t          if (a && hooksToMergeRE.test(key)) {\n\t            ret[key] = (isArray(a) ? a : [a]).concat(b);\n\t          } else {\n\t            ret[key] = b;\n\t          }\n\t        }\n\t        return ret;\n\t      };\n\t    }\n\t  }\n\t\n\t  function View (Vue) {\n\t\n\t    var _ = Vue.util;\n\t    var componentDef =\n\t    // 0.12\n\t    Vue.directive('_component') ||\n\t    // 1.0\n\t    Vue.internalDirectives.component;\n\t    // <router-view> extends the internal component directive\n\t    var viewDef = _.extend({}, componentDef);\n\t\n\t    // with some overrides\n\t    _.extend(viewDef, {\n\t\n\t      _isRouterView: true,\n\t\n\t      bind: function bind() {\n\t        var route = this.vm.$route;\n\t        /* istanbul ignore if */\n\t        if (!route) {\n\t          warn$1('<router-view> can only be used inside a ' + 'router-enabled app.');\n\t          return;\n\t        }\n\t        // force dynamic directive so v-component doesn't\n\t        // attempt to build right now\n\t        this._isDynamicLiteral = true;\n\t        // finally, init by delegating to v-component\n\t        componentDef.bind.call(this);\n\t\n\t        // locate the parent view\n\t        var parentView = undefined;\n\t        var parent = this.vm;\n\t        while (parent) {\n\t          if (parent._routerView) {\n\t            parentView = parent._routerView;\n\t            break;\n\t          }\n\t          parent = parent.$parent;\n\t        }\n\t        if (parentView) {\n\t          // register self as a child of the parent view,\n\t          // instead of activating now. This is so that the\n\t          // child's activate hook is called after the\n\t          // parent's has resolved.\n\t          this.parentView = parentView;\n\t          parentView.childView = this;\n\t        } else {\n\t          // this is the root view!\n\t          var router = route.router;\n\t          router._rootView = this;\n\t        }\n\t\n\t        // handle late-rendered view\n\t        // two possibilities:\n\t        // 1. root view rendered after transition has been\n\t        //    validated;\n\t        // 2. child view rendered after parent view has been\n\t        //    activated.\n\t        var transition = route.router._currentTransition;\n\t        if (!parentView && transition.done || parentView && parentView.activated) {\n\t          var depth = parentView ? parentView.depth + 1 : 0;\n\t          activate(this, transition, depth);\n\t        }\n\t      },\n\t\n\t      unbind: function unbind() {\n\t        if (this.parentView) {\n\t          this.parentView.childView = null;\n\t        }\n\t        componentDef.unbind.call(this);\n\t      }\n\t    });\n\t\n\t    Vue.elementDirective('router-view', viewDef);\n\t  }\n\t\n\t  var trailingSlashRE = /\\/$/;\n\t  var regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\t  var queryStringRE = /\\?.*$/;\n\t\n\t  // install v-link, which provides navigation support for\n\t  // HTML5 history mode\n\t  function Link (Vue) {\n\t    var _Vue$util = Vue.util;\n\t    var _bind = _Vue$util.bind;\n\t    var isObject = _Vue$util.isObject;\n\t    var addClass = _Vue$util.addClass;\n\t    var removeClass = _Vue$util.removeClass;\n\t\n\t    var onPriority = Vue.directive('on').priority;\n\t    var LINK_UPDATE = '__vue-router-link-update__';\n\t\n\t    var activeId = 0;\n\t\n\t    Vue.directive('link-active', {\n\t      priority: 9999,\n\t      bind: function bind() {\n\t        var _this = this;\n\t\n\t        var id = String(activeId++);\n\t        // collect v-links contained within this element.\n\t        // we need do this here before the parent-child relationship\n\t        // gets messed up by terminal directives (if, for, components)\n\t        var childLinks = this.el.querySelectorAll('[v-link]');\n\t        for (var i = 0, l = childLinks.length; i < l; i++) {\n\t          var link = childLinks[i];\n\t          var existingId = link.getAttribute(LINK_UPDATE);\n\t          var value = existingId ? existingId + ',' + id : id;\n\t          // leave a mark on the link element which can be persisted\n\t          // through fragment clones.\n\t          link.setAttribute(LINK_UPDATE, value);\n\t        }\n\t        this.vm.$on(LINK_UPDATE, this.cb = function (link, path) {\n\t          if (link.activeIds.indexOf(id) > -1) {\n\t            link.updateClasses(path, _this.el);\n\t          }\n\t        });\n\t      },\n\t      unbind: function unbind() {\n\t        this.vm.$off(LINK_UPDATE, this.cb);\n\t      }\n\t    });\n\t\n\t    Vue.directive('link', {\n\t      priority: onPriority - 2,\n\t\n\t      bind: function bind() {\n\t        var vm = this.vm;\n\t        /* istanbul ignore if */\n\t        if (!vm.$route) {\n\t          warn$1('v-link can only be used inside a router-enabled app.');\n\t          return;\n\t        }\n\t        this.router = vm.$route.router;\n\t        // update things when the route changes\n\t        this.unwatch = vm.$watch('$route', _bind(this.onRouteUpdate, this));\n\t        // check v-link-active ids\n\t        var activeIds = this.el.getAttribute(LINK_UPDATE);\n\t        if (activeIds) {\n\t          this.el.removeAttribute(LINK_UPDATE);\n\t          this.activeIds = activeIds.split(',');\n\t        }\n\t        // no need to handle click if link expects to be opened\n\t        // in a new window/tab.\n\t        /* istanbul ignore if */\n\t        if (this.el.tagName === 'A' && this.el.getAttribute('target') === '_blank') {\n\t          return;\n\t        }\n\t        // handle click\n\t        this.handler = _bind(this.onClick, this);\n\t        this.el.addEventListener('click', this.handler);\n\t      },\n\t\n\t      update: function update(target) {\n\t        this.target = target;\n\t        if (isObject(target)) {\n\t          this.append = target.append;\n\t          this.exact = target.exact;\n\t          this.prevActiveClass = this.activeClass;\n\t          this.activeClass = target.activeClass;\n\t        }\n\t        this.onRouteUpdate(this.vm.$route);\n\t      },\n\t\n\t      onClick: function onClick(e) {\n\t        // don't redirect with control keys\n\t        /* istanbul ignore if */\n\t        if (e.metaKey || e.ctrlKey || e.shiftKey) return;\n\t        // don't redirect when preventDefault called\n\t        /* istanbul ignore if */\n\t        if (e.defaultPrevented) return;\n\t        // don't redirect on right click\n\t        /* istanbul ignore if */\n\t        if (e.button !== 0) return;\n\t\n\t        var target = this.target;\n\t        if (target) {\n\t          // v-link with expression, just go\n\t          e.preventDefault();\n\t          this.router.go(target);\n\t        } else {\n\t          // no expression, delegate for an <a> inside\n\t          var el = e.target;\n\t          while (el.tagName !== 'A' && el !== this.el) {\n\t            el = el.parentNode;\n\t          }\n\t          if (el.tagName === 'A' && sameOrigin(el)) {\n\t            e.preventDefault();\n\t            var path = el.pathname;\n\t            if (this.router.history.root) {\n\t              path = path.replace(this.router.history.rootRE, '');\n\t            }\n\t            this.router.go({\n\t              path: path,\n\t              replace: target && target.replace,\n\t              append: target && target.append\n\t            });\n\t          }\n\t        }\n\t      },\n\t\n\t      onRouteUpdate: function onRouteUpdate(route) {\n\t        // router.stringifyPath is dependent on current route\n\t        // and needs to be called again whenver route changes.\n\t        var newPath = this.router.stringifyPath(this.target);\n\t        if (this.path !== newPath) {\n\t          this.path = newPath;\n\t          this.updateActiveMatch();\n\t          this.updateHref();\n\t        }\n\t        if (this.activeIds) {\n\t          this.vm.$emit(LINK_UPDATE, this, route.path);\n\t        } else {\n\t          this.updateClasses(route.path, this.el);\n\t        }\n\t      },\n\t\n\t      updateActiveMatch: function updateActiveMatch() {\n\t        this.activeRE = this.path && !this.exact ? new RegExp('^' + this.path.replace(/\\/$/, '').replace(queryStringRE, '').replace(regexEscapeRE, '\\\\$&') + '(\\\\/|$)') : null;\n\t      },\n\t\n\t      updateHref: function updateHref() {\n\t        if (this.el.tagName !== 'A') {\n\t          return;\n\t        }\n\t        var path = this.path;\n\t        var router = this.router;\n\t        var isAbsolute = path.charAt(0) === '/';\n\t        // do not format non-hash relative paths\n\t        var href = path && (router.mode === 'hash' || isAbsolute) ? router.history.formatPath(path, this.append) : path;\n\t        if (href) {\n\t          this.el.href = href;\n\t        } else {\n\t          this.el.removeAttribute('href');\n\t        }\n\t      },\n\t\n\t      updateClasses: function updateClasses(path, el) {\n\t        var activeClass = this.activeClass || this.router._linkActiveClass;\n\t        // clear old class\n\t        if (this.prevActiveClass && this.prevActiveClass !== activeClass) {\n\t          toggleClasses(el, this.prevActiveClass, removeClass);\n\t        }\n\t        // remove query string before matching\n\t        var dest = this.path.replace(queryStringRE, '');\n\t        path = path.replace(queryStringRE, '');\n\t        // add new class\n\t        if (this.exact) {\n\t          if (dest === path ||\n\t          // also allow additional trailing slash\n\t          dest.charAt(dest.length - 1) !== '/' && dest === path.replace(trailingSlashRE, '')) {\n\t            toggleClasses(el, activeClass, addClass);\n\t          } else {\n\t            toggleClasses(el, activeClass, removeClass);\n\t          }\n\t        } else {\n\t          if (this.activeRE && this.activeRE.test(path)) {\n\t            toggleClasses(el, activeClass, addClass);\n\t          } else {\n\t            toggleClasses(el, activeClass, removeClass);\n\t          }\n\t        }\n\t      },\n\t\n\t      unbind: function unbind() {\n\t        this.el.removeEventListener('click', this.handler);\n\t        this.unwatch && this.unwatch();\n\t      }\n\t    });\n\t\n\t    function sameOrigin(link) {\n\t      return link.protocol === location.protocol && link.hostname === location.hostname && link.port === location.port;\n\t    }\n\t\n\t    // this function is copied from v-bind:class implementation until\n\t    // we properly expose it...\n\t    function toggleClasses(el, key, fn) {\n\t      key = key.trim();\n\t      if (key.indexOf(' ') === -1) {\n\t        fn(el, key);\n\t        return;\n\t      }\n\t      var keys = key.split(/\\s+/);\n\t      for (var i = 0, l = keys.length; i < l; i++) {\n\t        fn(el, keys[i]);\n\t      }\n\t    }\n\t  }\n\t\n\t  var historyBackends = {\n\t    abstract: AbstractHistory,\n\t    hash: HashHistory,\n\t    html5: HTML5History\n\t  };\n\t\n\t  // late bind during install\n\t  var Vue = undefined;\n\t\n\t  /**\n\t   * Router constructor\n\t   *\n\t   * @param {Object} [options]\n\t   */\n\t\n\t  var Router = (function () {\n\t    function Router() {\n\t      var _this = this;\n\t\n\t      var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\t\n\t      var _ref$hashbang = _ref.hashbang;\n\t      var hashbang = _ref$hashbang === undefined ? true : _ref$hashbang;\n\t      var _ref$abstract = _ref.abstract;\n\t      var abstract = _ref$abstract === undefined ? false : _ref$abstract;\n\t      var _ref$history = _ref.history;\n\t      var history = _ref$history === undefined ? false : _ref$history;\n\t      var _ref$saveScrollPosition = _ref.saveScrollPosition;\n\t      var saveScrollPosition = _ref$saveScrollPosition === undefined ? false : _ref$saveScrollPosition;\n\t      var _ref$transitionOnLoad = _ref.transitionOnLoad;\n\t      var transitionOnLoad = _ref$transitionOnLoad === undefined ? false : _ref$transitionOnLoad;\n\t      var _ref$suppressTransitionError = _ref.suppressTransitionError;\n\t      var suppressTransitionError = _ref$suppressTransitionError === undefined ? false : _ref$suppressTransitionError;\n\t      var _ref$root = _ref.root;\n\t      var root = _ref$root === undefined ? null : _ref$root;\n\t      var _ref$linkActiveClass = _ref.linkActiveClass;\n\t      var linkActiveClass = _ref$linkActiveClass === undefined ? 'v-link-active' : _ref$linkActiveClass;\n\t      babelHelpers.classCallCheck(this, Router);\n\t\n\t      /* istanbul ignore if */\n\t      if (!Router.installed) {\n\t        throw new Error('Please install the Router with Vue.use() before ' + 'creating an instance.');\n\t      }\n\t\n\t      // Vue instances\n\t      this.app = null;\n\t      this._children = [];\n\t\n\t      // route recognizer\n\t      this._recognizer = new RouteRecognizer();\n\t      this._guardRecognizer = new RouteRecognizer();\n\t\n\t      // state\n\t      this._started = false;\n\t      this._startCb = null;\n\t      this._currentRoute = {};\n\t      this._currentTransition = null;\n\t      this._previousTransition = null;\n\t      this._notFoundHandler = null;\n\t      this._notFoundRedirect = null;\n\t      this._beforeEachHooks = [];\n\t      this._afterEachHooks = [];\n\t\n\t      // trigger transition on initial render?\n\t      this._rendered = false;\n\t      this._transitionOnLoad = transitionOnLoad;\n\t\n\t      // history mode\n\t      this._root = root;\n\t      this._abstract = abstract;\n\t      this._hashbang = hashbang;\n\t\n\t      // check if HTML5 history is available\n\t      var hasPushState = typeof window !== 'undefined' && window.history && window.history.pushState;\n\t      this._history = history && hasPushState;\n\t      this._historyFallback = history && !hasPushState;\n\t\n\t      // create history object\n\t      var inBrowser = Vue.util.inBrowser;\n\t      this.mode = !inBrowser || this._abstract ? 'abstract' : this._history ? 'html5' : 'hash';\n\t\n\t      var History = historyBackends[this.mode];\n\t      this.history = new History({\n\t        root: root,\n\t        hashbang: this._hashbang,\n\t        onChange: function onChange(path, state, anchor) {\n\t          _this._match(path, state, anchor);\n\t        }\n\t      });\n\t\n\t      // other options\n\t      this._saveScrollPosition = saveScrollPosition;\n\t      this._linkActiveClass = linkActiveClass;\n\t      this._suppress = suppressTransitionError;\n\t    }\n\t\n\t    /**\n\t     * Allow directly passing components to a route\n\t     * definition.\n\t     *\n\t     * @param {String} path\n\t     * @param {Object} handler\n\t     */\n\t\n\t    // API ===================================================\n\t\n\t    /**\n\t    * Register a map of top-level paths.\n\t    *\n\t    * @param {Object} map\n\t    */\n\t\n\t    Router.prototype.map = function map(_map) {\n\t      for (var route in _map) {\n\t        this.on(route, _map[route]);\n\t      }\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Register a single root-level path\n\t     *\n\t     * @param {String} rootPath\n\t     * @param {Object} handler\n\t     *                 - {String} component\n\t     *                 - {Object} [subRoutes]\n\t     *                 - {Boolean} [forceRefresh]\n\t     *                 - {Function} [before]\n\t     *                 - {Function} [after]\n\t     */\n\t\n\t    Router.prototype.on = function on(rootPath, handler) {\n\t      if (rootPath === '*') {\n\t        this._notFound(handler);\n\t      } else {\n\t        this._addRoute(rootPath, handler, []);\n\t      }\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Set redirects.\n\t     *\n\t     * @param {Object} map\n\t     */\n\t\n\t    Router.prototype.redirect = function redirect(map) {\n\t      for (var path in map) {\n\t        this._addRedirect(path, map[path]);\n\t      }\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Set aliases.\n\t     *\n\t     * @param {Object} map\n\t     */\n\t\n\t    Router.prototype.alias = function alias(map) {\n\t      for (var path in map) {\n\t        this._addAlias(path, map[path]);\n\t      }\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Set global before hook.\n\t     *\n\t     * @param {Function} fn\n\t     */\n\t\n\t    Router.prototype.beforeEach = function beforeEach(fn) {\n\t      this._beforeEachHooks.push(fn);\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Set global after hook.\n\t     *\n\t     * @param {Function} fn\n\t     */\n\t\n\t    Router.prototype.afterEach = function afterEach(fn) {\n\t      this._afterEachHooks.push(fn);\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Navigate to a given path.\n\t     * The path can be an object describing a named path in\n\t     * the format of { name: '...', params: {}, query: {}}\n\t     * The path is assumed to be already decoded, and will\n\t     * be resolved against root (if provided)\n\t     *\n\t     * @param {String|Object} path\n\t     * @param {Boolean} [replace]\n\t     */\n\t\n\t    Router.prototype.go = function go(path) {\n\t      var replace = false;\n\t      var append = false;\n\t      if (Vue.util.isObject(path)) {\n\t        replace = path.replace;\n\t        append = path.append;\n\t      }\n\t      path = this.stringifyPath(path);\n\t      if (path) {\n\t        this.history.go(path, replace, append);\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Short hand for replacing current path\n\t     *\n\t     * @param {String} path\n\t     */\n\t\n\t    Router.prototype.replace = function replace(path) {\n\t      if (typeof path === 'string') {\n\t        path = { path: path };\n\t      }\n\t      path.replace = true;\n\t      this.go(path);\n\t    };\n\t\n\t    /**\n\t     * Start the router.\n\t     *\n\t     * @param {VueConstructor} App\n\t     * @param {String|Element} container\n\t     * @param {Function} [cb]\n\t     */\n\t\n\t    Router.prototype.start = function start(App, container, cb) {\n\t      /* istanbul ignore if */\n\t      if (this._started) {\n\t        warn$1('already started.');\n\t        return;\n\t      }\n\t      this._started = true;\n\t      this._startCb = cb;\n\t      if (!this.app) {\n\t        /* istanbul ignore if */\n\t        if (!App || !container) {\n\t          throw new Error('Must start vue-router with a component and a ' + 'root container.');\n\t        }\n\t        /* istanbul ignore if */\n\t        if (App instanceof Vue) {\n\t          throw new Error('Must start vue-router with a component, not a ' + 'Vue instance.');\n\t        }\n\t        this._appContainer = container;\n\t        var Ctor = this._appConstructor = typeof App === 'function' ? App : Vue.extend(App);\n\t        // give it a name for better debugging\n\t        Ctor.options.name = Ctor.options.name || 'RouterApp';\n\t      }\n\t\n\t      // handle history fallback in browsers that do not\n\t      // support HTML5 history API\n\t      if (this._historyFallback) {\n\t        var _location = window.location;\n\t        var _history = new HTML5History({ root: this._root });\n\t        var path = _history.root ? _location.pathname.replace(_history.rootRE, '') : _location.pathname;\n\t        if (path && path !== '/') {\n\t          _location.assign((_history.root || '') + '/' + this.history.formatPath(path) + _location.search);\n\t          return;\n\t        }\n\t      }\n\t\n\t      this.history.start();\n\t    };\n\t\n\t    /**\n\t     * Stop listening to route changes.\n\t     */\n\t\n\t    Router.prototype.stop = function stop() {\n\t      this.history.stop();\n\t      this._started = false;\n\t    };\n\t\n\t    /**\n\t     * Normalize named route object / string paths into\n\t     * a string.\n\t     *\n\t     * @param {Object|String|Number} path\n\t     * @return {String}\n\t     */\n\t\n\t    Router.prototype.stringifyPath = function stringifyPath(path) {\n\t      var generatedPath = '';\n\t      if (path && typeof path === 'object') {\n\t        if (path.name) {\n\t          var extend = Vue.util.extend;\n\t          var currentParams = this._currentTransition && this._currentTransition.to.params;\n\t          var targetParams = path.params || {};\n\t          var params = currentParams ? extend(extend({}, currentParams), targetParams) : targetParams;\n\t          generatedPath = encodeURI(this._recognizer.generate(path.name, params));\n\t        } else if (path.path) {\n\t          generatedPath = encodeURI(path.path);\n\t        }\n\t        if (path.query) {\n\t          // note: the generated query string is pre-URL-encoded by the recognizer\n\t          var query = this._recognizer.generateQueryString(path.query);\n\t          if (generatedPath.indexOf('?') > -1) {\n\t            generatedPath += '&' + query.slice(1);\n\t          } else {\n\t            generatedPath += query;\n\t          }\n\t        }\n\t      } else {\n\t        generatedPath = encodeURI(path ? path + '' : '');\n\t      }\n\t      return generatedPath;\n\t    };\n\t\n\t    // Internal methods ======================================\n\t\n\t    /**\n\t    * Add a route containing a list of segments to the internal\n\t    * route recognizer. Will be called recursively to add all\n\t    * possible sub-routes.\n\t    *\n\t    * @param {String} path\n\t    * @param {Object} handler\n\t    * @param {Array} segments\n\t    */\n\t\n\t    Router.prototype._addRoute = function _addRoute(path, handler, segments) {\n\t      guardComponent(path, handler);\n\t      handler.path = path;\n\t      handler.fullPath = (segments.reduce(function (path, segment) {\n\t        return path + segment.path;\n\t      }, '') + path).replace('//', '/');\n\t      segments.push({\n\t        path: path,\n\t        handler: handler\n\t      });\n\t      this._recognizer.add(segments, {\n\t        as: handler.name\n\t      });\n\t      // add sub routes\n\t      if (handler.subRoutes) {\n\t        for (var subPath in handler.subRoutes) {\n\t          // recursively walk all sub routes\n\t          this._addRoute(subPath, handler.subRoutes[subPath],\n\t          // pass a copy in recursion to avoid mutating\n\t          // across branches\n\t          segments.slice());\n\t        }\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Set the notFound route handler.\n\t     *\n\t     * @param {Object} handler\n\t     */\n\t\n\t    Router.prototype._notFound = function _notFound(handler) {\n\t      guardComponent('*', handler);\n\t      this._notFoundHandler = [{ handler: handler }];\n\t    };\n\t\n\t    /**\n\t     * Add a redirect record.\n\t     *\n\t     * @param {String} path\n\t     * @param {String} redirectPath\n\t     */\n\t\n\t    Router.prototype._addRedirect = function _addRedirect(path, redirectPath) {\n\t      if (path === '*') {\n\t        this._notFoundRedirect = redirectPath;\n\t      } else {\n\t        this._addGuard(path, redirectPath, this.replace);\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Add an alias record.\n\t     *\n\t     * @param {String} path\n\t     * @param {String} aliasPath\n\t     */\n\t\n\t    Router.prototype._addAlias = function _addAlias(path, aliasPath) {\n\t      this._addGuard(path, aliasPath, this._match);\n\t    };\n\t\n\t    /**\n\t     * Add a path guard.\n\t     *\n\t     * @param {String} path\n\t     * @param {String} mappedPath\n\t     * @param {Function} handler\n\t     */\n\t\n\t    Router.prototype._addGuard = function _addGuard(path, mappedPath, _handler) {\n\t      var _this2 = this;\n\t\n\t      this._guardRecognizer.add([{\n\t        path: path,\n\t        handler: function handler(match, query) {\n\t          var realPath = mapParams(mappedPath, match.params, query);\n\t          _handler.call(_this2, realPath);\n\t        }\n\t      }]);\n\t    };\n\t\n\t    /**\n\t     * Check if a path matches any redirect records.\n\t     *\n\t     * @param {String} path\n\t     * @return {Boolean} - if true, will skip normal match.\n\t     */\n\t\n\t    Router.prototype._checkGuard = function _checkGuard(path) {\n\t      var matched = this._guardRecognizer.recognize(path, true);\n\t      if (matched) {\n\t        matched[0].handler(matched[0], matched.queryParams);\n\t        return true;\n\t      } else if (this._notFoundRedirect) {\n\t        matched = this._recognizer.recognize(path);\n\t        if (!matched) {\n\t          this.replace(this._notFoundRedirect);\n\t          return true;\n\t        }\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Match a URL path and set the route context on vm,\n\t     * triggering view updates.\n\t     *\n\t     * @param {String} path\n\t     * @param {Object} [state]\n\t     * @param {String} [anchor]\n\t     */\n\t\n\t    Router.prototype._match = function _match(path, state, anchor) {\n\t      var _this3 = this;\n\t\n\t      if (this._checkGuard(path)) {\n\t        return;\n\t      }\n\t\n\t      var currentRoute = this._currentRoute;\n\t      var currentTransition = this._currentTransition;\n\t\n\t      if (currentTransition) {\n\t        if (currentTransition.to.path === path) {\n\t          // do nothing if we have an active transition going to the same path\n\t          return;\n\t        } else if (currentRoute.path === path) {\n\t          // We are going to the same path, but we also have an ongoing but\n\t          // not-yet-validated transition. Abort that transition and reset to\n\t          // prev transition.\n\t          currentTransition.aborted = true;\n\t          this._currentTransition = this._prevTransition;\n\t          return;\n\t        } else {\n\t          // going to a totally different path. abort ongoing transition.\n\t          currentTransition.aborted = true;\n\t        }\n\t      }\n\t\n\t      // construct new route and transition context\n\t      var route = new Route(path, this);\n\t      var transition = new RouteTransition(this, route, currentRoute);\n\t\n\t      // current transition is updated right now.\n\t      // however, current route will only be updated after the transition has\n\t      // been validated.\n\t      this._prevTransition = currentTransition;\n\t      this._currentTransition = transition;\n\t\n\t      if (!this.app) {\n\t        (function () {\n\t          // initial render\n\t          var router = _this3;\n\t          _this3.app = new _this3._appConstructor({\n\t            el: _this3._appContainer,\n\t            created: function created() {\n\t              this.$router = router;\n\t            },\n\t            _meta: {\n\t              $route: route\n\t            }\n\t          });\n\t        })();\n\t      }\n\t\n\t      // check global before hook\n\t      var beforeHooks = this._beforeEachHooks;\n\t      var startTransition = function startTransition() {\n\t        transition.start(function () {\n\t          _this3._postTransition(route, state, anchor);\n\t        });\n\t      };\n\t\n\t      if (beforeHooks.length) {\n\t        transition.runQueue(beforeHooks, function (hook, _, next) {\n\t          if (transition === _this3._currentTransition) {\n\t            transition.callHook(hook, null, next, {\n\t              expectBoolean: true\n\t            });\n\t          }\n\t        }, startTransition);\n\t      } else {\n\t        startTransition();\n\t      }\n\t\n\t      if (!this._rendered && this._startCb) {\n\t        this._startCb.call(null);\n\t      }\n\t\n\t      // HACK:\n\t      // set rendered to true after the transition start, so\n\t      // that components that are acitvated synchronously know\n\t      // whether it is the initial render.\n\t      this._rendered = true;\n\t    };\n\t\n\t    /**\n\t     * Set current to the new transition.\n\t     * This is called by the transition object when the\n\t     * validation of a route has succeeded.\n\t     *\n\t     * @param {Transition} transition\n\t     */\n\t\n\t    Router.prototype._onTransitionValidated = function _onTransitionValidated(transition) {\n\t      // set current route\n\t      var route = this._currentRoute = transition.to;\n\t      // update route context for all children\n\t      if (this.app.$route !== route) {\n\t        this.app.$route = route;\n\t        this._children.forEach(function (child) {\n\t          child.$route = route;\n\t        });\n\t      }\n\t      // call global after hook\n\t      if (this._afterEachHooks.length) {\n\t        this._afterEachHooks.forEach(function (hook) {\n\t          return hook.call(null, {\n\t            to: transition.to,\n\t            from: transition.from\n\t          });\n\t        });\n\t      }\n\t      this._currentTransition.done = true;\n\t    };\n\t\n\t    /**\n\t     * Handle stuff after the transition.\n\t     *\n\t     * @param {Route} route\n\t     * @param {Object} [state]\n\t     * @param {String} [anchor]\n\t     */\n\t\n\t    Router.prototype._postTransition = function _postTransition(route, state, anchor) {\n\t      // handle scroll positions\n\t      // saved scroll positions take priority\n\t      // then we check if the path has an anchor\n\t      var pos = state && state.pos;\n\t      if (pos && this._saveScrollPosition) {\n\t        Vue.nextTick(function () {\n\t          window.scrollTo(pos.x, pos.y);\n\t        });\n\t      } else if (anchor) {\n\t        Vue.nextTick(function () {\n\t          var el = document.getElementById(anchor.slice(1));\n\t          if (el) {\n\t            window.scrollTo(window.scrollX, el.offsetTop);\n\t          }\n\t        });\n\t      }\n\t    };\n\t\n\t    return Router;\n\t  })();\n\t\n\t  function guardComponent(path, handler) {\n\t    var comp = handler.component;\n\t    if (Vue.util.isPlainObject(comp)) {\n\t      comp = handler.component = Vue.extend(comp);\n\t    }\n\t    /* istanbul ignore if */\n\t    if (typeof comp !== 'function') {\n\t      handler.component = null;\n\t      warn$1('invalid component for route \"' + path + '\".');\n\t    }\n\t  }\n\t\n\t  /* Installation */\n\t\n\t  Router.installed = false;\n\t\n\t  /**\n\t   * Installation interface.\n\t   * Install the necessary directives.\n\t   */\n\t\n\t  Router.install = function (externalVue) {\n\t    /* istanbul ignore if */\n\t    if (Router.installed) {\n\t      warn$1('already installed.');\n\t      return;\n\t    }\n\t    Vue = externalVue;\n\t    applyOverride(Vue);\n\t    View(Vue);\n\t    Link(Vue);\n\t    exports$1.Vue = Vue;\n\t    Router.installed = true;\n\t  };\n\t\n\t  // auto install\n\t  /* istanbul ignore if */\n\t  if (typeof window !== 'undefined' && window.Vue) {\n\t    window.Vue.use(Router);\n\t  }\n\t\n\t  return Router;\n\t\n\t}));\n\n/***/ },\n/* 37 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\t\n\t// load the styles\n\tvar content = __webpack_require__(15);\n\tif(typeof content === 'string') content = [[module.id, content, '']];\n\t// add the styles to the DOM\n\tvar update = __webpack_require__(2)(content, {});\n\tif(content.locals) module.exports = content.locals;\n\t// Hot Module Replacement\n\tif(false) {\n\t\t// When the styles change, update the <style> tags\n\t\tif(!content.locals) {\n\t\t\tmodule.hot.accept(\"!!./../../node_modules/css-loader/index.js!./../../node_modules/vue-loader/lib/style-rewriter.js!./../../node_modules/less-loader/index.js!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./app.vue\", function() {\n\t\t\t\tvar newContent = require(\"!!./../../node_modules/css-loader/index.js!./../../node_modules/vue-loader/lib/style-rewriter.js!./../../node_modules/less-loader/index.js!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./app.vue\");\n\t\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\t\tupdate(newContent);\n\t\t\t});\n\t\t}\n\t\t// When the module is disposed, remove the <style> tags\n\t\tmodule.hot.dispose(function() { update(); });\n\t}\n\n/***/ },\n/* 38 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\t\n\t// load the styles\n\tvar content = __webpack_require__(16);\n\tif(typeof content === 'string') content = [[module.id, content, '']];\n\t// add the styles to the DOM\n\tvar update = __webpack_require__(2)(content, {});\n\tif(content.locals) module.exports = content.locals;\n\t// Hot Module Replacement\n\tif(false) {\n\t\t// When the styles change, update the <style> tags\n\t\tif(!content.locals) {\n\t\t\tmodule.hot.accept(\"!!./../../node_modules/css-loader/index.js!./../../node_modules/vue-loader/lib/style-rewriter.js!./../../node_modules/less-loader/index.js!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./search-result.vue\", function() {\n\t\t\t\tvar newContent = require(\"!!./../../node_modules/css-loader/index.js!./../../node_modules/vue-loader/lib/style-rewriter.js!./../../node_modules/less-loader/index.js!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./search-result.vue\");\n\t\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\t\tupdate(newContent);\n\t\t\t});\n\t\t}\n\t\t// When the module is disposed, remove the <style> tags\n\t\tmodule.hot.dispose(function() { update(); });\n\t}\n\n/***/ },\n/* 39 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\t\n\t// load the styles\n\tvar content = __webpack_require__(17);\n\tif(typeof content === 'string') content = [[module.id, content, '']];\n\t// add the styles to the DOM\n\tvar update = __webpack_require__(2)(content, {});\n\tif(content.locals) module.exports = content.locals;\n\t// Hot Module Replacement\n\tif(false) {\n\t\t// When the styles change, update the <style> tags\n\t\tif(!content.locals) {\n\t\t\tmodule.hot.accept(\"!!./../../node_modules/css-loader/index.js!./../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-2955fe6e&scoped=true!./../../node_modules/less-loader/index.js!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./search-box.vue\", function() {\n\t\t\t\tvar newContent = require(\"!!./../../node_modules/css-loader/index.js!./../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-2955fe6e&scoped=true!./../../node_modules/less-loader/index.js!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./search-box.vue\");\n\t\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\t\tupdate(newContent);\n\t\t\t});\n\t\t}\n\t\t// When the module is disposed, remove the <style> tags\n\t\tmodule.hot.dispose(function() { update(); });\n\t}\n\n/***/ },\n/* 40 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\t\n\t// load the styles\n\tvar content = __webpack_require__(18);\n\tif(typeof content === 'string') content = [[module.id, content, '']];\n\t// add the styles to the DOM\n\tvar update = __webpack_require__(2)(content, {});\n\tif(content.locals) module.exports = content.locals;\n\t// Hot Module Replacement\n\tif(false) {\n\t\t// When the styles change, update the <style> tags\n\t\tif(!content.locals) {\n\t\t\tmodule.hot.accept(\"!!./../../node_modules/css-loader/index.js!./../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-6d0180ea&scoped=true!./../../node_modules/less-loader/index.js!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./loading-bar.vue\", function() {\n\t\t\t\tvar newContent = require(\"!!./../../node_modules/css-loader/index.js!./../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-6d0180ea&scoped=true!./../../node_modules/less-loader/index.js!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./loading-bar.vue\");\n\t\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\t\tupdate(newContent);\n\t\t\t});\n\t\t}\n\t\t// When the module is disposed, remove the <style> tags\n\t\tmodule.hot.dispose(function() { update(); });\n\t}\n\n/***/ },\n/* 41 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\t\n\t// load the styles\n\tvar content = __webpack_require__(19);\n\tif(typeof content === 'string') content = [[module.id, content, '']];\n\t// add the styles to the DOM\n\tvar update = __webpack_require__(2)(content, {});\n\tif(content.locals) module.exports = content.locals;\n\t// Hot Module Replacement\n\tif(false) {\n\t\t// When the styles change, update the <style> tags\n\t\tif(!content.locals) {\n\t\t\tmodule.hot.accept(\"!!./../../node_modules/css-loader/index.js!./../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-8b76b6d4&scoped=true!./../../node_modules/less-loader/index.js!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./movie-box.vue\", function() {\n\t\t\t\tvar newContent = require(\"!!./../../node_modules/css-loader/index.js!./../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-8b76b6d4&scoped=true!./../../node_modules/less-loader/index.js!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./movie-box.vue\");\n\t\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\t\tupdate(newContent);\n\t\t\t});\n\t\t}\n\t\t// When the module is disposed, remove the <style> tags\n\t\tmodule.hot.dispose(function() { update(); });\n\t}\n\n/***/ },\n/* 42 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\t\n\t// load the styles\n\tvar content = __webpack_require__(20);\n\tif(typeof content === 'string') content = [[module.id, content, '']];\n\t// add the styles to the DOM\n\tvar update = __webpack_require__(2)(content, {});\n\tif(content.locals) module.exports = content.locals;\n\t// Hot Module Replacement\n\tif(false) {\n\t\t// When the styles change, update the <style> tags\n\t\tif(!content.locals) {\n\t\t\tmodule.hot.accept(\"!!./../../node_modules/css-loader/index.js!./../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-ca60e4f8&scoped=true!./../../node_modules/less-loader/index.js!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./movie-view.vue\", function() {\n\t\t\t\tvar newContent = require(\"!!./../../node_modules/css-loader/index.js!./../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-ca60e4f8&scoped=true!./../../node_modules/less-loader/index.js!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./movie-view.vue\");\n\t\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\t\tupdate(newContent);\n\t\t\t});\n\t\t}\n\t\t// When the module is disposed, remove the <style> tags\n\t\tmodule.hot.dispose(function() { update(); });\n\t}\n\n/***/ },\n/* 43 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\t\n\t// load the styles\n\tvar content = __webpack_require__(21);\n\tif(typeof content === 'string') content = [[module.id, content, '']];\n\t// add the styles to the DOM\n\tvar update = __webpack_require__(2)(content, {});\n\tif(content.locals) module.exports = content.locals;\n\t// Hot Module Replacement\n\tif(false) {\n\t\t// When the styles change, update the <style> tags\n\t\tif(!content.locals) {\n\t\t\tmodule.hot.accept(\"!!./../../node_modules/css-loader/index.js!./../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-d21df490&scoped=true!./../../node_modules/less-loader/index.js!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./search-view.vue\", function() {\n\t\t\t\tvar newContent = require(\"!!./../../node_modules/css-loader/index.js!./../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-d21df490&scoped=true!./../../node_modules/less-loader/index.js!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./search-view.vue\");\n\t\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\t\tupdate(newContent);\n\t\t\t});\n\t\t}\n\t\t// When the module is disposed, remove the <style> tags\n\t\tmodule.hot.dispose(function() { update(); });\n\t}\n\n/***/ },\n/* 44 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/*!\n\t * Vue.js v1.0.24\n\t * (c) 2016 Evan You\n\t * Released under the MIT License.\n\t */\n\t'use strict';\n\t\n\tfunction set(obj, key, val) {\n\t  if (hasOwn(obj, key)) {\n\t    obj[key] = val;\n\t    return;\n\t  }\n\t  if (obj._isVue) {\n\t    set(obj._data, key, val);\n\t    return;\n\t  }\n\t  var ob = obj.__ob__;\n\t  if (!ob) {\n\t    obj[key] = val;\n\t    return;\n\t  }\n\t  ob.convert(key, val);\n\t  ob.dep.notify();\n\t  if (ob.vms) {\n\t    var i = ob.vms.length;\n\t    while (i--) {\n\t      var vm = ob.vms[i];\n\t      vm._proxy(key);\n\t      vm._digest();\n\t    }\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Delete a property and trigger change if necessary.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t */\n\t\n\tfunction del(obj, key) {\n\t  if (!hasOwn(obj, key)) {\n\t    return;\n\t  }\n\t  delete obj[key];\n\t  var ob = obj.__ob__;\n\t  if (!ob) {\n\t    if (obj._isVue) {\n\t      delete obj._data[key];\n\t      obj._digest();\n\t    }\n\t    return;\n\t  }\n\t  ob.dep.notify();\n\t  if (ob.vms) {\n\t    var i = ob.vms.length;\n\t    while (i--) {\n\t      var vm = ob.vms[i];\n\t      vm._unproxy(key);\n\t      vm._digest();\n\t    }\n\t  }\n\t}\n\t\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\t/**\n\t * Check whether the object has the property.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasOwn(obj, key) {\n\t  return hasOwnProperty.call(obj, key);\n\t}\n\t\n\t/**\n\t * Check if an expression is a literal value.\n\t *\n\t * @param {String} exp\n\t * @return {Boolean}\n\t */\n\t\n\tvar literalValueRE = /^\\s?(true|false|-?[\\d\\.]+|'[^']*'|\"[^\"]*\")\\s?$/;\n\t\n\tfunction isLiteral(exp) {\n\t  return literalValueRE.test(exp);\n\t}\n\t\n\t/**\n\t * Check if a string starts with $ or _\n\t *\n\t * @param {String} str\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isReserved(str) {\n\t  var c = (str + '').charCodeAt(0);\n\t  return c === 0x24 || c === 0x5F;\n\t}\n\t\n\t/**\n\t * Guard text output, make sure undefined outputs\n\t * empty string\n\t *\n\t * @param {*} value\n\t * @return {String}\n\t */\n\t\n\tfunction _toString(value) {\n\t  return value == null ? '' : value.toString();\n\t}\n\t\n\t/**\n\t * Check and convert possible numeric strings to numbers\n\t * before setting back to data\n\t *\n\t * @param {*} value\n\t * @return {*|Number}\n\t */\n\t\n\tfunction toNumber(value) {\n\t  if (typeof value !== 'string') {\n\t    return value;\n\t  } else {\n\t    var parsed = Number(value);\n\t    return isNaN(parsed) ? value : parsed;\n\t  }\n\t}\n\t\n\t/**\n\t * Convert string boolean literals into real booleans.\n\t *\n\t * @param {*} value\n\t * @return {*|Boolean}\n\t */\n\t\n\tfunction toBoolean(value) {\n\t  return value === 'true' ? true : value === 'false' ? false : value;\n\t}\n\t\n\t/**\n\t * Strip quotes from a string\n\t *\n\t * @param {String} str\n\t * @return {String | false}\n\t */\n\t\n\tfunction stripQuotes(str) {\n\t  var a = str.charCodeAt(0);\n\t  var b = str.charCodeAt(str.length - 1);\n\t  return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n\t}\n\t\n\t/**\n\t * Camelize a hyphen-delmited string.\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar camelizeRE = /-(\\w)/g;\n\t\n\tfunction camelize(str) {\n\t  return str.replace(camelizeRE, toUpper);\n\t}\n\t\n\tfunction toUpper(_, c) {\n\t  return c ? c.toUpperCase() : '';\n\t}\n\t\n\t/**\n\t * Hyphenate a camelCase string.\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar hyphenateRE = /([a-z\\d])([A-Z])/g;\n\t\n\tfunction hyphenate(str) {\n\t  return str.replace(hyphenateRE, '$1-$2').toLowerCase();\n\t}\n\t\n\t/**\n\t * Converts hyphen/underscore/slash delimitered names into\n\t * camelized classNames.\n\t *\n\t * e.g. my-component => MyComponent\n\t *      some_else    => SomeElse\n\t *      some/comp    => SomeComp\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar classifyRE = /(?:^|[-_\\/])(\\w)/g;\n\t\n\tfunction classify(str) {\n\t  return str.replace(classifyRE, toUpper);\n\t}\n\t\n\t/**\n\t * Simple bind, faster than native\n\t *\n\t * @param {Function} fn\n\t * @param {Object} ctx\n\t * @return {Function}\n\t */\n\t\n\tfunction bind(fn, ctx) {\n\t  return function (a) {\n\t    var l = arguments.length;\n\t    return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);\n\t  };\n\t}\n\t\n\t/**\n\t * Convert an Array-like object to a real Array.\n\t *\n\t * @param {Array-like} list\n\t * @param {Number} [start] - start index\n\t * @return {Array}\n\t */\n\t\n\tfunction toArray(list, start) {\n\t  start = start || 0;\n\t  var i = list.length - start;\n\t  var ret = new Array(i);\n\t  while (i--) {\n\t    ret[i] = list[i + start];\n\t  }\n\t  return ret;\n\t}\n\t\n\t/**\n\t * Mix properties into target object.\n\t *\n\t * @param {Object} to\n\t * @param {Object} from\n\t */\n\t\n\tfunction extend(to, from) {\n\t  var keys = Object.keys(from);\n\t  var i = keys.length;\n\t  while (i--) {\n\t    to[keys[i]] = from[keys[i]];\n\t  }\n\t  return to;\n\t}\n\t\n\t/**\n\t * Quick object check - this is primarily used to tell\n\t * Objects from primitive values when we know the value\n\t * is a JSON-compliant type.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isObject(obj) {\n\t  return obj !== null && typeof obj === 'object';\n\t}\n\t\n\t/**\n\t * Strict object type check. Only returns true\n\t * for plain JavaScript objects.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tvar toString = Object.prototype.toString;\n\tvar OBJECT_STRING = '[object Object]';\n\t\n\tfunction isPlainObject(obj) {\n\t  return toString.call(obj) === OBJECT_STRING;\n\t}\n\t\n\t/**\n\t * Array type check.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tvar isArray = Array.isArray;\n\t\n\t/**\n\t * Define a property.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @param {*} val\n\t * @param {Boolean} [enumerable]\n\t */\n\t\n\tfunction def(obj, key, val, enumerable) {\n\t  Object.defineProperty(obj, key, {\n\t    value: val,\n\t    enumerable: !!enumerable,\n\t    writable: true,\n\t    configurable: true\n\t  });\n\t}\n\t\n\t/**\n\t * Debounce a function so it only gets called after the\n\t * input stops arriving after the given wait period.\n\t *\n\t * @param {Function} func\n\t * @param {Number} wait\n\t * @return {Function} - the debounced function\n\t */\n\t\n\tfunction _debounce(func, wait) {\n\t  var timeout, args, context, timestamp, result;\n\t  var later = function later() {\n\t    var last = Date.now() - timestamp;\n\t    if (last < wait && last >= 0) {\n\t      timeout = setTimeout(later, wait - last);\n\t    } else {\n\t      timeout = null;\n\t      result = func.apply(context, args);\n\t      if (!timeout) context = args = null;\n\t    }\n\t  };\n\t  return function () {\n\t    context = this;\n\t    args = arguments;\n\t    timestamp = Date.now();\n\t    if (!timeout) {\n\t      timeout = setTimeout(later, wait);\n\t    }\n\t    return result;\n\t  };\n\t}\n\t\n\t/**\n\t * Manual indexOf because it's slightly faster than\n\t * native.\n\t *\n\t * @param {Array} arr\n\t * @param {*} obj\n\t */\n\t\n\tfunction indexOf(arr, obj) {\n\t  var i = arr.length;\n\t  while (i--) {\n\t    if (arr[i] === obj) return i;\n\t  }\n\t  return -1;\n\t}\n\t\n\t/**\n\t * Make a cancellable version of an async callback.\n\t *\n\t * @param {Function} fn\n\t * @return {Function}\n\t */\n\t\n\tfunction cancellable(fn) {\n\t  var cb = function cb() {\n\t    if (!cb.cancelled) {\n\t      return fn.apply(this, arguments);\n\t    }\n\t  };\n\t  cb.cancel = function () {\n\t    cb.cancelled = true;\n\t  };\n\t  return cb;\n\t}\n\t\n\t/**\n\t * Check if two values are loosely equal - that is,\n\t * if they are plain objects, do they have the same shape?\n\t *\n\t * @param {*} a\n\t * @param {*} b\n\t * @return {Boolean}\n\t */\n\t\n\tfunction looseEqual(a, b) {\n\t  /* eslint-disable eqeqeq */\n\t  return a == b || (isObject(a) && isObject(b) ? JSON.stringify(a) === JSON.stringify(b) : false);\n\t  /* eslint-enable eqeqeq */\n\t}\n\t\n\tvar hasProto = ('__proto__' in {});\n\t\n\t// Browser environment sniffing\n\tvar inBrowser = typeof window !== 'undefined' && Object.prototype.toString.call(window) !== '[object Object]';\n\t\n\t// detect devtools\n\tvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\t\n\t// UA sniffing for working around browser-specific quirks\n\tvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\n\tvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\n\tvar isAndroid = UA && UA.indexOf('android') > 0;\n\tvar isIos = UA && /(iphone|ipad|ipod|ios)/i.test(UA);\n\tvar isWechat = UA && UA.indexOf('micromessenger') > 0;\n\t\n\tvar transitionProp = undefined;\n\tvar transitionEndEvent = undefined;\n\tvar animationProp = undefined;\n\tvar animationEndEvent = undefined;\n\t\n\t// Transition property/event sniffing\n\tif (inBrowser && !isIE9) {\n\t  var isWebkitTrans = window.ontransitionend === undefined && window.onwebkittransitionend !== undefined;\n\t  var isWebkitAnim = window.onanimationend === undefined && window.onwebkitanimationend !== undefined;\n\t  transitionProp = isWebkitTrans ? 'WebkitTransition' : 'transition';\n\t  transitionEndEvent = isWebkitTrans ? 'webkitTransitionEnd' : 'transitionend';\n\t  animationProp = isWebkitAnim ? 'WebkitAnimation' : 'animation';\n\t  animationEndEvent = isWebkitAnim ? 'webkitAnimationEnd' : 'animationend';\n\t}\n\t\n\t/**\n\t * Defer a task to execute it asynchronously. Ideally this\n\t * should be executed as a microtask, so we leverage\n\t * MutationObserver if it's available, and fallback to\n\t * setTimeout(0).\n\t *\n\t * @param {Function} cb\n\t * @param {Object} ctx\n\t */\n\t\n\tvar nextTick = (function () {\n\t  var callbacks = [];\n\t  var pending = false;\n\t  var timerFunc;\n\t  function nextTickHandler() {\n\t    pending = false;\n\t    var copies = callbacks.slice(0);\n\t    callbacks = [];\n\t    for (var i = 0; i < copies.length; i++) {\n\t      copies[i]();\n\t    }\n\t  }\n\t\n\t  /* istanbul ignore if */\n\t  if (typeof MutationObserver !== 'undefined' && !(isWechat && isIos)) {\n\t    var counter = 1;\n\t    var observer = new MutationObserver(nextTickHandler);\n\t    var textNode = document.createTextNode(counter);\n\t    observer.observe(textNode, {\n\t      characterData: true\n\t    });\n\t    timerFunc = function () {\n\t      counter = (counter + 1) % 2;\n\t      textNode.data = counter;\n\t    };\n\t  } else {\n\t    // webpack attempts to inject a shim for setImmediate\n\t    // if it is used as a global, so we have to work around that to\n\t    // avoid bundling unnecessary code.\n\t    var context = inBrowser ? window : typeof global !== 'undefined' ? global : {};\n\t    timerFunc = context.setImmediate || setTimeout;\n\t  }\n\t  return function (cb, ctx) {\n\t    var func = ctx ? function () {\n\t      cb.call(ctx);\n\t    } : cb;\n\t    callbacks.push(func);\n\t    if (pending) return;\n\t    pending = true;\n\t    timerFunc(nextTickHandler, 0);\n\t  };\n\t})();\n\t\n\tvar _Set = undefined;\n\t/* istanbul ignore if */\n\tif (typeof Set !== 'undefined' && Set.toString().match(/native code/)) {\n\t  // use native Set when available.\n\t  _Set = Set;\n\t} else {\n\t  // a non-standard Set polyfill that only works with primitive keys.\n\t  _Set = function () {\n\t    this.set = Object.create(null);\n\t  };\n\t  _Set.prototype.has = function (key) {\n\t    return this.set[key] !== undefined;\n\t  };\n\t  _Set.prototype.add = function (key) {\n\t    this.set[key] = 1;\n\t  };\n\t  _Set.prototype.clear = function () {\n\t    this.set = Object.create(null);\n\t  };\n\t}\n\t\n\tfunction Cache(limit) {\n\t  this.size = 0;\n\t  this.limit = limit;\n\t  this.head = this.tail = undefined;\n\t  this._keymap = Object.create(null);\n\t}\n\t\n\tvar p = Cache.prototype;\n\t\n\t/**\n\t * Put <value> into the cache associated with <key>.\n\t * Returns the entry which was removed to make room for\n\t * the new entry. Otherwise undefined is returned.\n\t * (i.e. if there was enough room already).\n\t *\n\t * @param {String} key\n\t * @param {*} value\n\t * @return {Entry|undefined}\n\t */\n\t\n\tp.put = function (key, value) {\n\t  var removed;\n\t  if (this.size === this.limit) {\n\t    removed = this.shift();\n\t  }\n\t\n\t  var entry = this.get(key, true);\n\t  if (!entry) {\n\t    entry = {\n\t      key: key\n\t    };\n\t    this._keymap[key] = entry;\n\t    if (this.tail) {\n\t      this.tail.newer = entry;\n\t      entry.older = this.tail;\n\t    } else {\n\t      this.head = entry;\n\t    }\n\t    this.tail = entry;\n\t    this.size++;\n\t  }\n\t  entry.value = value;\n\t\n\t  return removed;\n\t};\n\t\n\t/**\n\t * Purge the least recently used (oldest) entry from the\n\t * cache. Returns the removed entry or undefined if the\n\t * cache was empty.\n\t */\n\t\n\tp.shift = function () {\n\t  var entry = this.head;\n\t  if (entry) {\n\t    this.head = this.head.newer;\n\t    this.head.older = undefined;\n\t    entry.newer = entry.older = undefined;\n\t    this._keymap[entry.key] = undefined;\n\t    this.size--;\n\t  }\n\t  return entry;\n\t};\n\t\n\t/**\n\t * Get and register recent use of <key>. Returns the value\n\t * associated with <key> or undefined if not in cache.\n\t *\n\t * @param {String} key\n\t * @param {Boolean} returnEntry\n\t * @return {Entry|*}\n\t */\n\t\n\tp.get = function (key, returnEntry) {\n\t  var entry = this._keymap[key];\n\t  if (entry === undefined) return;\n\t  if (entry === this.tail) {\n\t    return returnEntry ? entry : entry.value;\n\t  }\n\t  // HEAD--------------TAIL\n\t  //   <.older   .newer>\n\t  //  <--- add direction --\n\t  //   A  B  C  <D>  E\n\t  if (entry.newer) {\n\t    if (entry === this.head) {\n\t      this.head = entry.newer;\n\t    }\n\t    entry.newer.older = entry.older; // C <-- E.\n\t  }\n\t  if (entry.older) {\n\t    entry.older.newer = entry.newer; // C. --> E\n\t  }\n\t  entry.newer = undefined; // D --x\n\t  entry.older = this.tail; // D. --> E\n\t  if (this.tail) {\n\t    this.tail.newer = entry; // E. <-- D\n\t  }\n\t  this.tail = entry;\n\t  return returnEntry ? entry : entry.value;\n\t};\n\t\n\tvar cache$1 = new Cache(1000);\n\tvar filterTokenRE = /[^\\s'\"]+|'[^']*'|\"[^\"]*\"/g;\n\tvar reservedArgRE = /^in$|^-?\\d+/;\n\t\n\t/**\n\t * Parser state\n\t */\n\t\n\tvar str;\n\tvar dir;\n\tvar c;\n\tvar prev;\n\tvar i;\n\tvar l;\n\tvar lastFilterIndex;\n\tvar inSingle;\n\tvar inDouble;\n\tvar curly;\n\tvar square;\n\tvar paren;\n\t/**\n\t * Push a filter to the current directive object\n\t */\n\t\n\tfunction pushFilter() {\n\t  var exp = str.slice(lastFilterIndex, i).trim();\n\t  var filter;\n\t  if (exp) {\n\t    filter = {};\n\t    var tokens = exp.match(filterTokenRE);\n\t    filter.name = tokens[0];\n\t    if (tokens.length > 1) {\n\t      filter.args = tokens.slice(1).map(processFilterArg);\n\t    }\n\t  }\n\t  if (filter) {\n\t    (dir.filters = dir.filters || []).push(filter);\n\t  }\n\t  lastFilterIndex = i + 1;\n\t}\n\t\n\t/**\n\t * Check if an argument is dynamic and strip quotes.\n\t *\n\t * @param {String} arg\n\t * @return {Object}\n\t */\n\t\n\tfunction processFilterArg(arg) {\n\t  if (reservedArgRE.test(arg)) {\n\t    return {\n\t      value: toNumber(arg),\n\t      dynamic: false\n\t    };\n\t  } else {\n\t    var stripped = stripQuotes(arg);\n\t    var dynamic = stripped === arg;\n\t    return {\n\t      value: dynamic ? arg : stripped,\n\t      dynamic: dynamic\n\t    };\n\t  }\n\t}\n\t\n\t/**\n\t * Parse a directive value and extract the expression\n\t * and its filters into a descriptor.\n\t *\n\t * Example:\n\t *\n\t * \"a + 1 | uppercase\" will yield:\n\t * {\n\t *   expression: 'a + 1',\n\t *   filters: [\n\t *     { name: 'uppercase', args: null }\n\t *   ]\n\t * }\n\t *\n\t * @param {String} s\n\t * @return {Object}\n\t */\n\t\n\tfunction parseDirective(s) {\n\t  var hit = cache$1.get(s);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t\n\t  // reset parser state\n\t  str = s;\n\t  inSingle = inDouble = false;\n\t  curly = square = paren = 0;\n\t  lastFilterIndex = 0;\n\t  dir = {};\n\t\n\t  for (i = 0, l = str.length; i < l; i++) {\n\t    prev = c;\n\t    c = str.charCodeAt(i);\n\t    if (inSingle) {\n\t      // check single quote\n\t      if (c === 0x27 && prev !== 0x5C) inSingle = !inSingle;\n\t    } else if (inDouble) {\n\t      // check double quote\n\t      if (c === 0x22 && prev !== 0x5C) inDouble = !inDouble;\n\t    } else if (c === 0x7C && // pipe\n\t    str.charCodeAt(i + 1) !== 0x7C && str.charCodeAt(i - 1) !== 0x7C) {\n\t      if (dir.expression == null) {\n\t        // first filter, end of expression\n\t        lastFilterIndex = i + 1;\n\t        dir.expression = str.slice(0, i).trim();\n\t      } else {\n\t        // already has filter\n\t        pushFilter();\n\t      }\n\t    } else {\n\t      switch (c) {\n\t        case 0x22:\n\t          inDouble = true;break; // \"\n\t        case 0x27:\n\t          inSingle = true;break; // '\n\t        case 0x28:\n\t          paren++;break; // (\n\t        case 0x29:\n\t          paren--;break; // )\n\t        case 0x5B:\n\t          square++;break; // [\n\t        case 0x5D:\n\t          square--;break; // ]\n\t        case 0x7B:\n\t          curly++;break; // {\n\t        case 0x7D:\n\t          curly--;break; // }\n\t      }\n\t    }\n\t  }\n\t\n\t  if (dir.expression == null) {\n\t    dir.expression = str.slice(0, i).trim();\n\t  } else if (lastFilterIndex !== 0) {\n\t    pushFilter();\n\t  }\n\t\n\t  cache$1.put(s, dir);\n\t  return dir;\n\t}\n\t\n\tvar directive = Object.freeze({\n\t  parseDirective: parseDirective\n\t});\n\t\n\tvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\tvar cache = undefined;\n\tvar tagRE = undefined;\n\tvar htmlRE = undefined;\n\t/**\n\t * Escape a string so it can be used in a RegExp\n\t * constructor.\n\t *\n\t * @param {String} str\n\t */\n\t\n\tfunction escapeRegex(str) {\n\t  return str.replace(regexEscapeRE, '\\\\$&');\n\t}\n\t\n\tfunction compileRegex() {\n\t  var open = escapeRegex(config.delimiters[0]);\n\t  var close = escapeRegex(config.delimiters[1]);\n\t  var unsafeOpen = escapeRegex(config.unsafeDelimiters[0]);\n\t  var unsafeClose = escapeRegex(config.unsafeDelimiters[1]);\n\t  tagRE = new RegExp(unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '|' + open + '((?:.|\\\\n)+?)' + close, 'g');\n\t  htmlRE = new RegExp('^' + unsafeOpen + '.*' + unsafeClose + '$');\n\t  // reset cache\n\t  cache = new Cache(1000);\n\t}\n\t\n\t/**\n\t * Parse a template text string into an array of tokens.\n\t *\n\t * @param {String} text\n\t * @return {Array<Object> | null}\n\t *               - {String} type\n\t *               - {String} value\n\t *               - {Boolean} [html]\n\t *               - {Boolean} [oneTime]\n\t */\n\t\n\tfunction parseText(text) {\n\t  if (!cache) {\n\t    compileRegex();\n\t  }\n\t  var hit = cache.get(text);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t  if (!tagRE.test(text)) {\n\t    return null;\n\t  }\n\t  var tokens = [];\n\t  var lastIndex = tagRE.lastIndex = 0;\n\t  var match, index, html, value, first, oneTime;\n\t  /* eslint-disable no-cond-assign */\n\t  while (match = tagRE.exec(text)) {\n\t    /* eslint-enable no-cond-assign */\n\t    index = match.index;\n\t    // push text token\n\t    if (index > lastIndex) {\n\t      tokens.push({\n\t        value: text.slice(lastIndex, index)\n\t      });\n\t    }\n\t    // tag token\n\t    html = htmlRE.test(match[0]);\n\t    value = html ? match[1] : match[2];\n\t    first = value.charCodeAt(0);\n\t    oneTime = first === 42; // *\n\t    value = oneTime ? value.slice(1) : value;\n\t    tokens.push({\n\t      tag: true,\n\t      value: value.trim(),\n\t      html: html,\n\t      oneTime: oneTime\n\t    });\n\t    lastIndex = index + match[0].length;\n\t  }\n\t  if (lastIndex < text.length) {\n\t    tokens.push({\n\t      value: text.slice(lastIndex)\n\t    });\n\t  }\n\t  cache.put(text, tokens);\n\t  return tokens;\n\t}\n\t\n\t/**\n\t * Format a list of tokens into an expression.\n\t * e.g. tokens parsed from 'a {{b}} c' can be serialized\n\t * into one single expression as '\"a \" + b + \" c\"'.\n\t *\n\t * @param {Array} tokens\n\t * @param {Vue} [vm]\n\t * @return {String}\n\t */\n\t\n\tfunction tokensToExp(tokens, vm) {\n\t  if (tokens.length > 1) {\n\t    return tokens.map(function (token) {\n\t      return formatToken(token, vm);\n\t    }).join('+');\n\t  } else {\n\t    return formatToken(tokens[0], vm, true);\n\t  }\n\t}\n\t\n\t/**\n\t * Format a single token.\n\t *\n\t * @param {Object} token\n\t * @param {Vue} [vm]\n\t * @param {Boolean} [single]\n\t * @return {String}\n\t */\n\t\n\tfunction formatToken(token, vm, single) {\n\t  return token.tag ? token.oneTime && vm ? '\"' + vm.$eval(token.value) + '\"' : inlineFilters(token.value, single) : '\"' + token.value + '\"';\n\t}\n\t\n\t/**\n\t * For an attribute with multiple interpolation tags,\n\t * e.g. attr=\"some-{{thing | filter}}\", in order to combine\n\t * the whole thing into a single watchable expression, we\n\t * have to inline those filters. This function does exactly\n\t * that. This is a bit hacky but it avoids heavy changes\n\t * to directive parser and watcher mechanism.\n\t *\n\t * @param {String} exp\n\t * @param {Boolean} single\n\t * @return {String}\n\t */\n\t\n\tvar filterRE = /[^|]\\|[^|]/;\n\tfunction inlineFilters(exp, single) {\n\t  if (!filterRE.test(exp)) {\n\t    return single ? exp : '(' + exp + ')';\n\t  } else {\n\t    var dir = parseDirective(exp);\n\t    if (!dir.filters) {\n\t      return '(' + exp + ')';\n\t    } else {\n\t      return 'this._applyFilters(' + dir.expression + // value\n\t      ',null,' + // oldValue (null for read)\n\t      JSON.stringify(dir.filters) + // filter descriptors\n\t      ',false)'; // write?\n\t    }\n\t  }\n\t}\n\t\n\tvar text = Object.freeze({\n\t  compileRegex: compileRegex,\n\t  parseText: parseText,\n\t  tokensToExp: tokensToExp\n\t});\n\t\n\tvar delimiters = ['{{', '}}'];\n\tvar unsafeDelimiters = ['{{{', '}}}'];\n\t\n\tvar config = Object.defineProperties({\n\t\n\t  /**\n\t   * Whether to print debug messages.\n\t   * Also enables stack trace for warnings.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  debug: false,\n\t\n\t  /**\n\t   * Whether to suppress warnings.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  silent: false,\n\t\n\t  /**\n\t   * Whether to use async rendering.\n\t   */\n\t\n\t  async: true,\n\t\n\t  /**\n\t   * Whether to warn against errors caught when evaluating\n\t   * expressions.\n\t   */\n\t\n\t  warnExpressionErrors: true,\n\t\n\t  /**\n\t   * Whether to allow devtools inspection.\n\t   * Disabled by default in production builds.\n\t   */\n\t\n\t  devtools: (\"production\") !== 'production',\n\t\n\t  /**\n\t   * Internal flag to indicate the delimiters have been\n\t   * changed.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  _delimitersChanged: true,\n\t\n\t  /**\n\t   * List of asset types that a component can own.\n\t   *\n\t   * @type {Array}\n\t   */\n\t\n\t  _assetTypes: ['component', 'directive', 'elementDirective', 'filter', 'transition', 'partial'],\n\t\n\t  /**\n\t   * prop binding modes\n\t   */\n\t\n\t  _propBindingModes: {\n\t    ONE_WAY: 0,\n\t    TWO_WAY: 1,\n\t    ONE_TIME: 2\n\t  },\n\t\n\t  /**\n\t   * Max circular updates allowed in a batcher flush cycle.\n\t   */\n\t\n\t  _maxUpdateCount: 100\n\t\n\t}, {\n\t  delimiters: { /**\n\t                 * Interpolation delimiters. Changing these would trigger\n\t                 * the text parser to re-compile the regular expressions.\n\t                 *\n\t                 * @type {Array<String>}\n\t                 */\n\t\n\t    get: function get() {\n\t      return delimiters;\n\t    },\n\t    set: function set(val) {\n\t      delimiters = val;\n\t      compileRegex();\n\t    },\n\t    configurable: true,\n\t    enumerable: true\n\t  },\n\t  unsafeDelimiters: {\n\t    get: function get() {\n\t      return unsafeDelimiters;\n\t    },\n\t    set: function set(val) {\n\t      unsafeDelimiters = val;\n\t      compileRegex();\n\t    },\n\t    configurable: true,\n\t    enumerable: true\n\t  }\n\t});\n\t\n\tvar warn = undefined;\n\tvar formatComponentName = undefined;\n\t\n\tif (false) {\n\t  (function () {\n\t    var hasConsole = typeof console !== 'undefined';\n\t\n\t    warn = function (msg, vm) {\n\t      if (hasConsole && !config.silent) {\n\t        console.error('[Vue warn]: ' + msg + (vm ? formatComponentName(vm) : ''));\n\t      }\n\t    };\n\t\n\t    formatComponentName = function (vm) {\n\t      var name = vm._isVue ? vm.$options.name : vm.name;\n\t      return name ? ' (found in component: <' + hyphenate(name) + '>)' : '';\n\t    };\n\t  })();\n\t}\n\t\n\t/**\n\t * Append with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction appendWithTransition(el, target, vm, cb) {\n\t  applyTransition(el, 1, function () {\n\t    target.appendChild(el);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * InsertBefore with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction beforeWithTransition(el, target, vm, cb) {\n\t  applyTransition(el, 1, function () {\n\t    before(el, target);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * Remove with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction removeWithTransition(el, vm, cb) {\n\t  applyTransition(el, -1, function () {\n\t    remove(el);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * Apply transitions with an operation callback.\n\t *\n\t * @param {Element} el\n\t * @param {Number} direction\n\t *                  1: enter\n\t *                 -1: leave\n\t * @param {Function} op - the actual DOM operation\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction applyTransition(el, direction, op, vm, cb) {\n\t  var transition = el.__v_trans;\n\t  if (!transition ||\n\t  // skip if there are no js hooks and CSS transition is\n\t  // not supported\n\t  !transition.hooks && !transitionEndEvent ||\n\t  // skip transitions for initial compile\n\t  !vm._isCompiled ||\n\t  // if the vm is being manipulated by a parent directive\n\t  // during the parent's compilation phase, skip the\n\t  // animation.\n\t  vm.$parent && !vm.$parent._isCompiled) {\n\t    op();\n\t    if (cb) cb();\n\t    return;\n\t  }\n\t  var action = direction > 0 ? 'enter' : 'leave';\n\t  transition[action](op, cb);\n\t}\n\t\n\tvar transition = Object.freeze({\n\t  appendWithTransition: appendWithTransition,\n\t  beforeWithTransition: beforeWithTransition,\n\t  removeWithTransition: removeWithTransition,\n\t  applyTransition: applyTransition\n\t});\n\t\n\t/**\n\t * Query an element selector if it's not an element already.\n\t *\n\t * @param {String|Element} el\n\t * @return {Element}\n\t */\n\t\n\tfunction query(el) {\n\t  if (typeof el === 'string') {\n\t    var selector = el;\n\t    el = document.querySelector(el);\n\t    if (!el) {\n\t      (\"production\") !== 'production' && warn('Cannot find element: ' + selector);\n\t    }\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Check if a node is in the document.\n\t * Note: document.documentElement.contains should work here\n\t * but always returns false for comment nodes in phantomjs,\n\t * making unit tests difficult. This is fixed by doing the\n\t * contains() check on the node's parentNode instead of\n\t * the node itself.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction inDoc(node) {\n\t  if (!node) return false;\n\t  var doc = node.ownerDocument.documentElement;\n\t  var parent = node.parentNode;\n\t  return doc === node || doc === parent || !!(parent && parent.nodeType === 1 && doc.contains(parent));\n\t}\n\t\n\t/**\n\t * Get and remove an attribute from a node.\n\t *\n\t * @param {Node} node\n\t * @param {String} _attr\n\t */\n\t\n\tfunction getAttr(node, _attr) {\n\t  var val = node.getAttribute(_attr);\n\t  if (val !== null) {\n\t    node.removeAttribute(_attr);\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Get an attribute with colon or v-bind: prefix.\n\t *\n\t * @param {Node} node\n\t * @param {String} name\n\t * @return {String|null}\n\t */\n\t\n\tfunction getBindAttr(node, name) {\n\t  var val = getAttr(node, ':' + name);\n\t  if (val === null) {\n\t    val = getAttr(node, 'v-bind:' + name);\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Check the presence of a bind attribute.\n\t *\n\t * @param {Node} node\n\t * @param {String} name\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasBindAttr(node, name) {\n\t  return node.hasAttribute(name) || node.hasAttribute(':' + name) || node.hasAttribute('v-bind:' + name);\n\t}\n\t\n\t/**\n\t * Insert el before target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction before(el, target) {\n\t  target.parentNode.insertBefore(el, target);\n\t}\n\t\n\t/**\n\t * Insert el after target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction after(el, target) {\n\t  if (target.nextSibling) {\n\t    before(el, target.nextSibling);\n\t  } else {\n\t    target.parentNode.appendChild(el);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove el from DOM\n\t *\n\t * @param {Element} el\n\t */\n\t\n\tfunction remove(el) {\n\t  el.parentNode.removeChild(el);\n\t}\n\t\n\t/**\n\t * Prepend el to target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction prepend(el, target) {\n\t  if (target.firstChild) {\n\t    before(el, target.firstChild);\n\t  } else {\n\t    target.appendChild(el);\n\t  }\n\t}\n\t\n\t/**\n\t * Replace target with el\n\t *\n\t * @param {Element} target\n\t * @param {Element} el\n\t */\n\t\n\tfunction replace(target, el) {\n\t  var parent = target.parentNode;\n\t  if (parent) {\n\t    parent.replaceChild(el, target);\n\t  }\n\t}\n\t\n\t/**\n\t * Add event listener shorthand.\n\t *\n\t * @param {Element} el\n\t * @param {String} event\n\t * @param {Function} cb\n\t * @param {Boolean} [useCapture]\n\t */\n\t\n\tfunction on(el, event, cb, useCapture) {\n\t  el.addEventListener(event, cb, useCapture);\n\t}\n\t\n\t/**\n\t * Remove event listener shorthand.\n\t *\n\t * @param {Element} el\n\t * @param {String} event\n\t * @param {Function} cb\n\t */\n\t\n\tfunction off(el, event, cb) {\n\t  el.removeEventListener(event, cb);\n\t}\n\t\n\t/**\n\t * For IE9 compat: when both class and :class are present\n\t * getAttribute('class') returns wrong value...\n\t *\n\t * @param {Element} el\n\t * @return {String}\n\t */\n\t\n\tfunction getClass(el) {\n\t  var classname = el.className;\n\t  if (typeof classname === 'object') {\n\t    classname = classname.baseVal || '';\n\t  }\n\t  return classname;\n\t}\n\t\n\t/**\n\t * In IE9, setAttribute('class') will result in empty class\n\t * if the element also has the :class attribute; However in\n\t * PhantomJS, setting `className` does not work on SVG elements...\n\t * So we have to do a conditional check here.\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction setClass(el, cls) {\n\t  /* istanbul ignore if */\n\t  if (isIE9 && !/svg$/.test(el.namespaceURI)) {\n\t    el.className = cls;\n\t  } else {\n\t    el.setAttribute('class', cls);\n\t  }\n\t}\n\t\n\t/**\n\t * Add class with compatibility for IE & SVG\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction addClass(el, cls) {\n\t  if (el.classList) {\n\t    el.classList.add(cls);\n\t  } else {\n\t    var cur = ' ' + getClass(el) + ' ';\n\t    if (cur.indexOf(' ' + cls + ' ') < 0) {\n\t      setClass(el, (cur + cls).trim());\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Remove class with compatibility for IE & SVG\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction removeClass(el, cls) {\n\t  if (el.classList) {\n\t    el.classList.remove(cls);\n\t  } else {\n\t    var cur = ' ' + getClass(el) + ' ';\n\t    var tar = ' ' + cls + ' ';\n\t    while (cur.indexOf(tar) >= 0) {\n\t      cur = cur.replace(tar, ' ');\n\t    }\n\t    setClass(el, cur.trim());\n\t  }\n\t  if (!el.className) {\n\t    el.removeAttribute('class');\n\t  }\n\t}\n\t\n\t/**\n\t * Extract raw content inside an element into a temporary\n\t * container div\n\t *\n\t * @param {Element} el\n\t * @param {Boolean} asFragment\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction extractContent(el, asFragment) {\n\t  var child;\n\t  var rawContent;\n\t  /* istanbul ignore if */\n\t  if (isTemplate(el) && isFragment(el.content)) {\n\t    el = el.content;\n\t  }\n\t  if (el.hasChildNodes()) {\n\t    trimNode(el);\n\t    rawContent = asFragment ? document.createDocumentFragment() : document.createElement('div');\n\t    /* eslint-disable no-cond-assign */\n\t    while (child = el.firstChild) {\n\t      /* eslint-enable no-cond-assign */\n\t      rawContent.appendChild(child);\n\t    }\n\t  }\n\t  return rawContent;\n\t}\n\t\n\t/**\n\t * Trim possible empty head/tail text and comment\n\t * nodes inside a parent.\n\t *\n\t * @param {Node} node\n\t */\n\t\n\tfunction trimNode(node) {\n\t  var child;\n\t  /* eslint-disable no-sequences */\n\t  while ((child = node.firstChild, isTrimmable(child))) {\n\t    node.removeChild(child);\n\t  }\n\t  while ((child = node.lastChild, isTrimmable(child))) {\n\t    node.removeChild(child);\n\t  }\n\t  /* eslint-enable no-sequences */\n\t}\n\t\n\tfunction isTrimmable(node) {\n\t  return node && (node.nodeType === 3 && !node.data.trim() || node.nodeType === 8);\n\t}\n\t\n\t/**\n\t * Check if an element is a template tag.\n\t * Note if the template appears inside an SVG its tagName\n\t * will be in lowercase.\n\t *\n\t * @param {Element} el\n\t */\n\t\n\tfunction isTemplate(el) {\n\t  return el.tagName && el.tagName.toLowerCase() === 'template';\n\t}\n\t\n\t/**\n\t * Create an \"anchor\" for performing dom insertion/removals.\n\t * This is used in a number of scenarios:\n\t * - fragment instance\n\t * - v-html\n\t * - v-if\n\t * - v-for\n\t * - component\n\t *\n\t * @param {String} content\n\t * @param {Boolean} persist - IE trashes empty textNodes on\n\t *                            cloneNode(true), so in certain\n\t *                            cases the anchor needs to be\n\t *                            non-empty to be persisted in\n\t *                            templates.\n\t * @return {Comment|Text}\n\t */\n\t\n\tfunction createAnchor(content, persist) {\n\t  var anchor = config.debug ? document.createComment(content) : document.createTextNode(persist ? ' ' : '');\n\t  anchor.__v_anchor = true;\n\t  return anchor;\n\t}\n\t\n\t/**\n\t * Find a component ref attribute that starts with $.\n\t *\n\t * @param {Element} node\n\t * @return {String|undefined}\n\t */\n\t\n\tvar refRE = /^v-ref:/;\n\t\n\tfunction findRef(node) {\n\t  if (node.hasAttributes()) {\n\t    var attrs = node.attributes;\n\t    for (var i = 0, l = attrs.length; i < l; i++) {\n\t      var name = attrs[i].name;\n\t      if (refRE.test(name)) {\n\t        return camelize(name.replace(refRE, ''));\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Map a function to a range of nodes .\n\t *\n\t * @param {Node} node\n\t * @param {Node} end\n\t * @param {Function} op\n\t */\n\t\n\tfunction mapNodeRange(node, end, op) {\n\t  var next;\n\t  while (node !== end) {\n\t    next = node.nextSibling;\n\t    op(node);\n\t    node = next;\n\t  }\n\t  op(end);\n\t}\n\t\n\t/**\n\t * Remove a range of nodes with transition, store\n\t * the nodes in a fragment with correct ordering,\n\t * and call callback when done.\n\t *\n\t * @param {Node} start\n\t * @param {Node} end\n\t * @param {Vue} vm\n\t * @param {DocumentFragment} frag\n\t * @param {Function} cb\n\t */\n\t\n\tfunction removeNodeRange(start, end, vm, frag, cb) {\n\t  var done = false;\n\t  var removed = 0;\n\t  var nodes = [];\n\t  mapNodeRange(start, end, function (node) {\n\t    if (node === end) done = true;\n\t    nodes.push(node);\n\t    removeWithTransition(node, vm, onRemoved);\n\t  });\n\t  function onRemoved() {\n\t    removed++;\n\t    if (done && removed >= nodes.length) {\n\t      for (var i = 0; i < nodes.length; i++) {\n\t        frag.appendChild(nodes[i]);\n\t      }\n\t      cb && cb();\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Check if a node is a DocumentFragment.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isFragment(node) {\n\t  return node && node.nodeType === 11;\n\t}\n\t\n\t/**\n\t * Get outerHTML of elements, taking care\n\t * of SVG elements in IE as well.\n\t *\n\t * @param {Element} el\n\t * @return {String}\n\t */\n\t\n\tfunction getOuterHTML(el) {\n\t  if (el.outerHTML) {\n\t    return el.outerHTML;\n\t  } else {\n\t    var container = document.createElement('div');\n\t    container.appendChild(el.cloneNode(true));\n\t    return container.innerHTML;\n\t  }\n\t}\n\t\n\tvar commonTagRE = /^(div|p|span|img|a|b|i|br|ul|ol|li|h1|h2|h3|h4|h5|h6|code|pre|table|th|td|tr|form|label|input|select|option|nav|article|section|header|footer)$/i;\n\tvar reservedTagRE = /^(slot|partial|component)$/i;\n\t\n\tvar isUnknownElement = undefined;\n\tif (false) {\n\t  isUnknownElement = function (el, tag) {\n\t    if (tag.indexOf('-') > -1) {\n\t      // http://stackoverflow.com/a/28210364/1070244\n\t      return el.constructor === window.HTMLUnknownElement || el.constructor === window.HTMLElement;\n\t    } else {\n\t      return (/HTMLUnknownElement/.test(el.toString()) &&\n\t        // Chrome returns unknown for several HTML5 elements.\n\t        // https://code.google.com/p/chromium/issues/detail?id=540526\n\t        !/^(data|time|rtc|rb)$/.test(tag)\n\t      );\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check if an element is a component, if yes return its\n\t * component id.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Object|undefined}\n\t */\n\t\n\tfunction checkComponentAttr(el, options) {\n\t  var tag = el.tagName.toLowerCase();\n\t  var hasAttrs = el.hasAttributes();\n\t  if (!commonTagRE.test(tag) && !reservedTagRE.test(tag)) {\n\t    if (resolveAsset(options, 'components', tag)) {\n\t      return { id: tag };\n\t    } else {\n\t      var is = hasAttrs && getIsBinding(el, options);\n\t      if (is) {\n\t        return is;\n\t      } else if (false) {\n\t        var expectedTag = options._componentNameMap && options._componentNameMap[tag];\n\t        if (expectedTag) {\n\t          warn('Unknown custom element: <' + tag + '> - ' + 'did you mean <' + expectedTag + '>? ' + 'HTML is case-insensitive, remember to use kebab-case in templates.');\n\t        } else if (isUnknownElement(el, tag)) {\n\t          warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly? For recursive components, ' + 'make sure to provide the \"name\" option.');\n\t        }\n\t      }\n\t    }\n\t  } else if (hasAttrs) {\n\t    return getIsBinding(el, options);\n\t  }\n\t}\n\t\n\t/**\n\t * Get \"is\" binding from an element.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Object|undefined}\n\t */\n\t\n\tfunction getIsBinding(el, options) {\n\t  // dynamic syntax\n\t  var exp = el.getAttribute('is');\n\t  if (exp != null) {\n\t    if (resolveAsset(options, 'components', exp)) {\n\t      el.removeAttribute('is');\n\t      return { id: exp };\n\t    }\n\t  } else {\n\t    exp = getBindAttr(el, 'is');\n\t    if (exp != null) {\n\t      return { id: exp, dynamic: true };\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Option overwriting strategies are functions that handle\n\t * how to merge a parent option value and a child option\n\t * value into the final value.\n\t *\n\t * All strategy functions follow the same signature:\n\t *\n\t * @param {*} parentVal\n\t * @param {*} childVal\n\t * @param {Vue} [vm]\n\t */\n\t\n\tvar strats = config.optionMergeStrategies = Object.create(null);\n\t\n\t/**\n\t * Helper that recursively merges two data objects together.\n\t */\n\t\n\tfunction mergeData(to, from) {\n\t  var key, toVal, fromVal;\n\t  for (key in from) {\n\t    toVal = to[key];\n\t    fromVal = from[key];\n\t    if (!hasOwn(to, key)) {\n\t      set(to, key, fromVal);\n\t    } else if (isObject(toVal) && isObject(fromVal)) {\n\t      mergeData(toVal, fromVal);\n\t    }\n\t  }\n\t  return to;\n\t}\n\t\n\t/**\n\t * Data\n\t */\n\t\n\tstrats.data = function (parentVal, childVal, vm) {\n\t  if (!vm) {\n\t    // in a Vue.extend merge, both should be functions\n\t    if (!childVal) {\n\t      return parentVal;\n\t    }\n\t    if (typeof childVal !== 'function') {\n\t      (\"production\") !== 'production' && warn('The \"data\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n\t      return parentVal;\n\t    }\n\t    if (!parentVal) {\n\t      return childVal;\n\t    }\n\t    // when parentVal & childVal are both present,\n\t    // we need to return a function that returns the\n\t    // merged result of both functions... no need to\n\t    // check if parentVal is a function here because\n\t    // it has to be a function to pass previous merges.\n\t    return function mergedDataFn() {\n\t      return mergeData(childVal.call(this), parentVal.call(this));\n\t    };\n\t  } else if (parentVal || childVal) {\n\t    return function mergedInstanceDataFn() {\n\t      // instance merge\n\t      var instanceData = typeof childVal === 'function' ? childVal.call(vm) : childVal;\n\t      var defaultData = typeof parentVal === 'function' ? parentVal.call(vm) : undefined;\n\t      if (instanceData) {\n\t        return mergeData(instanceData, defaultData);\n\t      } else {\n\t        return defaultData;\n\t      }\n\t    };\n\t  }\n\t};\n\t\n\t/**\n\t * El\n\t */\n\t\n\tstrats.el = function (parentVal, childVal, vm) {\n\t  if (!vm && childVal && typeof childVal !== 'function') {\n\t    (\"production\") !== 'production' && warn('The \"el\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n\t    return;\n\t  }\n\t  var ret = childVal || parentVal;\n\t  // invoke the element factory if this is instance merge\n\t  return vm && typeof ret === 'function' ? ret.call(vm) : ret;\n\t};\n\t\n\t/**\n\t * Hooks and param attributes are merged as arrays.\n\t */\n\t\n\tstrats.init = strats.created = strats.ready = strats.attached = strats.detached = strats.beforeCompile = strats.compiled = strats.beforeDestroy = strats.destroyed = strats.activate = function (parentVal, childVal) {\n\t  return childVal ? parentVal ? parentVal.concat(childVal) : isArray(childVal) ? childVal : [childVal] : parentVal;\n\t};\n\t\n\t/**\n\t * Assets\n\t *\n\t * When a vm is present (instance creation), we need to do\n\t * a three-way merge between constructor options, instance\n\t * options and parent options.\n\t */\n\t\n\tfunction mergeAssets(parentVal, childVal) {\n\t  var res = Object.create(parentVal || null);\n\t  return childVal ? extend(res, guardArrayAssets(childVal)) : res;\n\t}\n\t\n\tconfig._assetTypes.forEach(function (type) {\n\t  strats[type + 's'] = mergeAssets;\n\t});\n\t\n\t/**\n\t * Events & Watchers.\n\t *\n\t * Events & watchers hashes should not overwrite one\n\t * another, so we merge them as arrays.\n\t */\n\t\n\tstrats.watch = strats.events = function (parentVal, childVal) {\n\t  if (!childVal) return parentVal;\n\t  if (!parentVal) return childVal;\n\t  var ret = {};\n\t  extend(ret, parentVal);\n\t  for (var key in childVal) {\n\t    var parent = ret[key];\n\t    var child = childVal[key];\n\t    if (parent && !isArray(parent)) {\n\t      parent = [parent];\n\t    }\n\t    ret[key] = parent ? parent.concat(child) : [child];\n\t  }\n\t  return ret;\n\t};\n\t\n\t/**\n\t * Other object hashes.\n\t */\n\t\n\tstrats.props = strats.methods = strats.computed = function (parentVal, childVal) {\n\t  if (!childVal) return parentVal;\n\t  if (!parentVal) return childVal;\n\t  var ret = Object.create(null);\n\t  extend(ret, parentVal);\n\t  extend(ret, childVal);\n\t  return ret;\n\t};\n\t\n\t/**\n\t * Default strategy.\n\t */\n\t\n\tvar defaultStrat = function defaultStrat(parentVal, childVal) {\n\t  return childVal === undefined ? parentVal : childVal;\n\t};\n\t\n\t/**\n\t * Make sure component options get converted to actual\n\t * constructors.\n\t *\n\t * @param {Object} options\n\t */\n\t\n\tfunction guardComponents(options) {\n\t  if (options.components) {\n\t    var components = options.components = guardArrayAssets(options.components);\n\t    var ids = Object.keys(components);\n\t    var def;\n\t    if (false) {\n\t      var map = options._componentNameMap = {};\n\t    }\n\t    for (var i = 0, l = ids.length; i < l; i++) {\n\t      var key = ids[i];\n\t      if (commonTagRE.test(key) || reservedTagRE.test(key)) {\n\t        (\"production\") !== 'production' && warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + key);\n\t        continue;\n\t      }\n\t      // record a all lowercase <-> kebab-case mapping for\n\t      // possible custom element case error warning\n\t      if (false) {\n\t        map[key.replace(/-/g, '').toLowerCase()] = hyphenate(key);\n\t      }\n\t      def = components[key];\n\t      if (isPlainObject(def)) {\n\t        components[key] = Vue.extend(def);\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Ensure all props option syntax are normalized into the\n\t * Object-based format.\n\t *\n\t * @param {Object} options\n\t */\n\t\n\tfunction guardProps(options) {\n\t  var props = options.props;\n\t  var i, val;\n\t  if (isArray(props)) {\n\t    options.props = {};\n\t    i = props.length;\n\t    while (i--) {\n\t      val = props[i];\n\t      if (typeof val === 'string') {\n\t        options.props[val] = null;\n\t      } else if (val.name) {\n\t        options.props[val.name] = val;\n\t      }\n\t    }\n\t  } else if (isPlainObject(props)) {\n\t    var keys = Object.keys(props);\n\t    i = keys.length;\n\t    while (i--) {\n\t      val = props[keys[i]];\n\t      if (typeof val === 'function') {\n\t        props[keys[i]] = { type: val };\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Guard an Array-format assets option and converted it\n\t * into the key-value Object format.\n\t *\n\t * @param {Object|Array} assets\n\t * @return {Object}\n\t */\n\t\n\tfunction guardArrayAssets(assets) {\n\t  if (isArray(assets)) {\n\t    var res = {};\n\t    var i = assets.length;\n\t    var asset;\n\t    while (i--) {\n\t      asset = assets[i];\n\t      var id = typeof asset === 'function' ? asset.options && asset.options.name || asset.id : asset.name || asset.id;\n\t      if (!id) {\n\t        (\"production\") !== 'production' && warn('Array-syntax assets must provide a \"name\" or \"id\" field.');\n\t      } else {\n\t        res[id] = asset;\n\t      }\n\t    }\n\t    return res;\n\t  }\n\t  return assets;\n\t}\n\t\n\t/**\n\t * Merge two option objects into a new one.\n\t * Core utility used in both instantiation and inheritance.\n\t *\n\t * @param {Object} parent\n\t * @param {Object} child\n\t * @param {Vue} [vm] - if vm is present, indicates this is\n\t *                     an instantiation merge.\n\t */\n\t\n\tfunction mergeOptions(parent, child, vm) {\n\t  guardComponents(child);\n\t  guardProps(child);\n\t  if (false) {\n\t    if (child.propsData && !vm) {\n\t      warn('propsData can only be used as an instantiation option.');\n\t    }\n\t  }\n\t  var options = {};\n\t  var key;\n\t  if (child['extends']) {\n\t    parent = typeof child['extends'] === 'function' ? mergeOptions(parent, child['extends'].options, vm) : mergeOptions(parent, child['extends'], vm);\n\t  }\n\t  if (child.mixins) {\n\t    for (var i = 0, l = child.mixins.length; i < l; i++) {\n\t      parent = mergeOptions(parent, child.mixins[i], vm);\n\t    }\n\t  }\n\t  for (key in parent) {\n\t    mergeField(key);\n\t  }\n\t  for (key in child) {\n\t    if (!hasOwn(parent, key)) {\n\t      mergeField(key);\n\t    }\n\t  }\n\t  function mergeField(key) {\n\t    var strat = strats[key] || defaultStrat;\n\t    options[key] = strat(parent[key], child[key], vm, key);\n\t  }\n\t  return options;\n\t}\n\t\n\t/**\n\t * Resolve an asset.\n\t * This function is used because child instances need access\n\t * to assets defined in its ancestor chain.\n\t *\n\t * @param {Object} options\n\t * @param {String} type\n\t * @param {String} id\n\t * @param {Boolean} warnMissing\n\t * @return {Object|Function}\n\t */\n\t\n\tfunction resolveAsset(options, type, id, warnMissing) {\n\t  /* istanbul ignore if */\n\t  if (typeof id !== 'string') {\n\t    return;\n\t  }\n\t  var assets = options[type];\n\t  var camelizedId;\n\t  var res = assets[id] ||\n\t  // camelCase ID\n\t  assets[camelizedId = camelize(id)] ||\n\t  // Pascal Case ID\n\t  assets[camelizedId.charAt(0).toUpperCase() + camelizedId.slice(1)];\n\t  if (false) {\n\t    warn('Failed to resolve ' + type.slice(0, -1) + ': ' + id, options);\n\t  }\n\t  return res;\n\t}\n\t\n\tvar uid$1 = 0;\n\t\n\t/**\n\t * A dep is an observable that can have multiple\n\t * directives subscribing to it.\n\t *\n\t * @constructor\n\t */\n\tfunction Dep() {\n\t  this.id = uid$1++;\n\t  this.subs = [];\n\t}\n\t\n\t// the current target watcher being evaluated.\n\t// this is globally unique because there could be only one\n\t// watcher being evaluated at any time.\n\tDep.target = null;\n\t\n\t/**\n\t * Add a directive subscriber.\n\t *\n\t * @param {Directive} sub\n\t */\n\t\n\tDep.prototype.addSub = function (sub) {\n\t  this.subs.push(sub);\n\t};\n\t\n\t/**\n\t * Remove a directive subscriber.\n\t *\n\t * @param {Directive} sub\n\t */\n\t\n\tDep.prototype.removeSub = function (sub) {\n\t  this.subs.$remove(sub);\n\t};\n\t\n\t/**\n\t * Add self as a dependency to the target watcher.\n\t */\n\t\n\tDep.prototype.depend = function () {\n\t  Dep.target.addDep(this);\n\t};\n\t\n\t/**\n\t * Notify all subscribers of a new value.\n\t */\n\t\n\tDep.prototype.notify = function () {\n\t  // stablize the subscriber list first\n\t  var subs = toArray(this.subs);\n\t  for (var i = 0, l = subs.length; i < l; i++) {\n\t    subs[i].update();\n\t  }\n\t};\n\t\n\tvar arrayProto = Array.prototype;\n\tvar arrayMethods = Object.create(arrayProto)\n\t\n\t/**\n\t * Intercept mutating methods and emit events\n\t */\n\t\n\t;['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'].forEach(function (method) {\n\t  // cache original method\n\t  var original = arrayProto[method];\n\t  def(arrayMethods, method, function mutator() {\n\t    // avoid leaking arguments:\n\t    // http://jsperf.com/closure-with-arguments\n\t    var i = arguments.length;\n\t    var args = new Array(i);\n\t    while (i--) {\n\t      args[i] = arguments[i];\n\t    }\n\t    var result = original.apply(this, args);\n\t    var ob = this.__ob__;\n\t    var inserted;\n\t    switch (method) {\n\t      case 'push':\n\t        inserted = args;\n\t        break;\n\t      case 'unshift':\n\t        inserted = args;\n\t        break;\n\t      case 'splice':\n\t        inserted = args.slice(2);\n\t        break;\n\t    }\n\t    if (inserted) ob.observeArray(inserted);\n\t    // notify change\n\t    ob.dep.notify();\n\t    return result;\n\t  });\n\t});\n\t\n\t/**\n\t * Swap the element at the given index with a new value\n\t * and emits corresponding event.\n\t *\n\t * @param {Number} index\n\t * @param {*} val\n\t * @return {*} - replaced element\n\t */\n\t\n\tdef(arrayProto, '$set', function $set(index, val) {\n\t  if (index >= this.length) {\n\t    this.length = Number(index) + 1;\n\t  }\n\t  return this.splice(index, 1, val)[0];\n\t});\n\t\n\t/**\n\t * Convenience method to remove the element at given index or target element reference.\n\t *\n\t * @param {*} item\n\t */\n\t\n\tdef(arrayProto, '$remove', function $remove(item) {\n\t  /* istanbul ignore if */\n\t  if (!this.length) return;\n\t  var index = indexOf(this, item);\n\t  if (index > -1) {\n\t    return this.splice(index, 1);\n\t  }\n\t});\n\t\n\tvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\t\n\t/**\n\t * By default, when a reactive property is set, the new value is\n\t * also converted to become reactive. However in certain cases, e.g.\n\t * v-for scope alias and props, we don't want to force conversion\n\t * because the value may be a nested value under a frozen data structure.\n\t *\n\t * So whenever we want to set a reactive property without forcing\n\t * conversion on the new value, we wrap that call inside this function.\n\t */\n\t\n\tvar shouldConvert = true;\n\t\n\tfunction withoutConversion(fn) {\n\t  shouldConvert = false;\n\t  fn();\n\t  shouldConvert = true;\n\t}\n\t\n\t/**\n\t * Observer class that are attached to each observed\n\t * object. Once attached, the observer converts target\n\t * object's property keys into getter/setters that\n\t * collect dependencies and dispatches updates.\n\t *\n\t * @param {Array|Object} value\n\t * @constructor\n\t */\n\t\n\tfunction Observer(value) {\n\t  this.value = value;\n\t  this.dep = new Dep();\n\t  def(value, '__ob__', this);\n\t  if (isArray(value)) {\n\t    var augment = hasProto ? protoAugment : copyAugment;\n\t    augment(value, arrayMethods, arrayKeys);\n\t    this.observeArray(value);\n\t  } else {\n\t    this.walk(value);\n\t  }\n\t}\n\t\n\t// Instance methods\n\t\n\t/**\n\t * Walk through each property and convert them into\n\t * getter/setters. This method should only be called when\n\t * value type is Object.\n\t *\n\t * @param {Object} obj\n\t */\n\t\n\tObserver.prototype.walk = function (obj) {\n\t  var keys = Object.keys(obj);\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    this.convert(keys[i], obj[keys[i]]);\n\t  }\n\t};\n\t\n\t/**\n\t * Observe a list of Array items.\n\t *\n\t * @param {Array} items\n\t */\n\t\n\tObserver.prototype.observeArray = function (items) {\n\t  for (var i = 0, l = items.length; i < l; i++) {\n\t    observe(items[i]);\n\t  }\n\t};\n\t\n\t/**\n\t * Convert a property into getter/setter so we can emit\n\t * the events when the property is accessed/changed.\n\t *\n\t * @param {String} key\n\t * @param {*} val\n\t */\n\t\n\tObserver.prototype.convert = function (key, val) {\n\t  defineReactive(this.value, key, val);\n\t};\n\t\n\t/**\n\t * Add an owner vm, so that when $set/$delete mutations\n\t * happen we can notify owner vms to proxy the keys and\n\t * digest the watchers. This is only called when the object\n\t * is observed as an instance's root $data.\n\t *\n\t * @param {Vue} vm\n\t */\n\t\n\tObserver.prototype.addVm = function (vm) {\n\t  (this.vms || (this.vms = [])).push(vm);\n\t};\n\t\n\t/**\n\t * Remove an owner vm. This is called when the object is\n\t * swapped out as an instance's $data object.\n\t *\n\t * @param {Vue} vm\n\t */\n\t\n\tObserver.prototype.removeVm = function (vm) {\n\t  this.vms.$remove(vm);\n\t};\n\t\n\t// helpers\n\t\n\t/**\n\t * Augment an target Object or Array by intercepting\n\t * the prototype chain using __proto__\n\t *\n\t * @param {Object|Array} target\n\t * @param {Object} src\n\t */\n\t\n\tfunction protoAugment(target, src) {\n\t  /* eslint-disable no-proto */\n\t  target.__proto__ = src;\n\t  /* eslint-enable no-proto */\n\t}\n\t\n\t/**\n\t * Augment an target Object or Array by defining\n\t * hidden properties.\n\t *\n\t * @param {Object|Array} target\n\t * @param {Object} proto\n\t */\n\t\n\tfunction copyAugment(target, src, keys) {\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    var key = keys[i];\n\t    def(target, key, src[key]);\n\t  }\n\t}\n\t\n\t/**\n\t * Attempt to create an observer instance for a value,\n\t * returns the new observer if successfully observed,\n\t * or the existing observer if the value already has one.\n\t *\n\t * @param {*} value\n\t * @param {Vue} [vm]\n\t * @return {Observer|undefined}\n\t * @static\n\t */\n\t\n\tfunction observe(value, vm) {\n\t  if (!value || typeof value !== 'object') {\n\t    return;\n\t  }\n\t  var ob;\n\t  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n\t    ob = value.__ob__;\n\t  } else if (shouldConvert && (isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {\n\t    ob = new Observer(value);\n\t  }\n\t  if (ob && vm) {\n\t    ob.addVm(vm);\n\t  }\n\t  return ob;\n\t}\n\t\n\t/**\n\t * Define a reactive property on an Object.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @param {*} val\n\t */\n\t\n\tfunction defineReactive(obj, key, val) {\n\t  var dep = new Dep();\n\t\n\t  var property = Object.getOwnPropertyDescriptor(obj, key);\n\t  if (property && property.configurable === false) {\n\t    return;\n\t  }\n\t\n\t  // cater for pre-defined getter/setters\n\t  var getter = property && property.get;\n\t  var setter = property && property.set;\n\t\n\t  var childOb = observe(val);\n\t  Object.defineProperty(obj, key, {\n\t    enumerable: true,\n\t    configurable: true,\n\t    get: function reactiveGetter() {\n\t      var value = getter ? getter.call(obj) : val;\n\t      if (Dep.target) {\n\t        dep.depend();\n\t        if (childOb) {\n\t          childOb.dep.depend();\n\t        }\n\t        if (isArray(value)) {\n\t          for (var e, i = 0, l = value.length; i < l; i++) {\n\t            e = value[i];\n\t            e && e.__ob__ && e.__ob__.dep.depend();\n\t          }\n\t        }\n\t      }\n\t      return value;\n\t    },\n\t    set: function reactiveSetter(newVal) {\n\t      var value = getter ? getter.call(obj) : val;\n\t      if (newVal === value) {\n\t        return;\n\t      }\n\t      if (setter) {\n\t        setter.call(obj, newVal);\n\t      } else {\n\t        val = newVal;\n\t      }\n\t      childOb = observe(newVal);\n\t      dep.notify();\n\t    }\n\t  });\n\t}\n\t\n\t\n\t\n\tvar util = Object.freeze({\n\t\tdefineReactive: defineReactive,\n\t\tset: set,\n\t\tdel: del,\n\t\thasOwn: hasOwn,\n\t\tisLiteral: isLiteral,\n\t\tisReserved: isReserved,\n\t\t_toString: _toString,\n\t\ttoNumber: toNumber,\n\t\ttoBoolean: toBoolean,\n\t\tstripQuotes: stripQuotes,\n\t\tcamelize: camelize,\n\t\thyphenate: hyphenate,\n\t\tclassify: classify,\n\t\tbind: bind,\n\t\ttoArray: toArray,\n\t\textend: extend,\n\t\tisObject: isObject,\n\t\tisPlainObject: isPlainObject,\n\t\tdef: def,\n\t\tdebounce: _debounce,\n\t\tindexOf: indexOf,\n\t\tcancellable: cancellable,\n\t\tlooseEqual: looseEqual,\n\t\tisArray: isArray,\n\t\thasProto: hasProto,\n\t\tinBrowser: inBrowser,\n\t\tdevtools: devtools,\n\t\tisIE9: isIE9,\n\t\tisAndroid: isAndroid,\n\t\tisIos: isIos,\n\t\tisWechat: isWechat,\n\t\tget transitionProp () { return transitionProp; },\n\t\tget transitionEndEvent () { return transitionEndEvent; },\n\t\tget animationProp () { return animationProp; },\n\t\tget animationEndEvent () { return animationEndEvent; },\n\t\tnextTick: nextTick,\n\t\tget _Set () { return _Set; },\n\t\tquery: query,\n\t\tinDoc: inDoc,\n\t\tgetAttr: getAttr,\n\t\tgetBindAttr: getBindAttr,\n\t\thasBindAttr: hasBindAttr,\n\t\tbefore: before,\n\t\tafter: after,\n\t\tremove: remove,\n\t\tprepend: prepend,\n\t\treplace: replace,\n\t\ton: on,\n\t\toff: off,\n\t\tsetClass: setClass,\n\t\taddClass: addClass,\n\t\tremoveClass: removeClass,\n\t\textractContent: extractContent,\n\t\ttrimNode: trimNode,\n\t\tisTemplate: isTemplate,\n\t\tcreateAnchor: createAnchor,\n\t\tfindRef: findRef,\n\t\tmapNodeRange: mapNodeRange,\n\t\tremoveNodeRange: removeNodeRange,\n\t\tisFragment: isFragment,\n\t\tgetOuterHTML: getOuterHTML,\n\t\tmergeOptions: mergeOptions,\n\t\tresolveAsset: resolveAsset,\n\t\tcheckComponentAttr: checkComponentAttr,\n\t\tcommonTagRE: commonTagRE,\n\t\treservedTagRE: reservedTagRE,\n\t\tget warn () { return warn; }\n\t});\n\t\n\tvar uid = 0;\n\t\n\tfunction initMixin (Vue) {\n\t  /**\n\t   * The main init sequence. This is called for every\n\t   * instance, including ones that are created from extended\n\t   * constructors.\n\t   *\n\t   * @param {Object} options - this options object should be\n\t   *                           the result of merging class\n\t   *                           options and the options passed\n\t   *                           in to the constructor.\n\t   */\n\t\n\t  Vue.prototype._init = function (options) {\n\t    options = options || {};\n\t\n\t    this.$el = null;\n\t    this.$parent = options.parent;\n\t    this.$root = this.$parent ? this.$parent.$root : this;\n\t    this.$children = [];\n\t    this.$refs = {}; // child vm references\n\t    this.$els = {}; // element references\n\t    this._watchers = []; // all watchers as an array\n\t    this._directives = []; // all directives\n\t\n\t    // a uid\n\t    this._uid = uid++;\n\t\n\t    // a flag to avoid this being observed\n\t    this._isVue = true;\n\t\n\t    // events bookkeeping\n\t    this._events = {}; // registered callbacks\n\t    this._eventsCount = {}; // for $broadcast optimization\n\t\n\t    // fragment instance properties\n\t    this._isFragment = false;\n\t    this._fragment = // @type {DocumentFragment}\n\t    this._fragmentStart = // @type {Text|Comment}\n\t    this._fragmentEnd = null; // @type {Text|Comment}\n\t\n\t    // lifecycle state\n\t    this._isCompiled = this._isDestroyed = this._isReady = this._isAttached = this._isBeingDestroyed = this._vForRemoving = false;\n\t    this._unlinkFn = null;\n\t\n\t    // context:\n\t    // if this is a transcluded component, context\n\t    // will be the common parent vm of this instance\n\t    // and its host.\n\t    this._context = options._context || this.$parent;\n\t\n\t    // scope:\n\t    // if this is inside an inline v-for, the scope\n\t    // will be the intermediate scope created for this\n\t    // repeat fragment. this is used for linking props\n\t    // and container directives.\n\t    this._scope = options._scope;\n\t\n\t    // fragment:\n\t    // if this instance is compiled inside a Fragment, it\n\t    // needs to reigster itself as a child of that fragment\n\t    // for attach/detach to work properly.\n\t    this._frag = options._frag;\n\t    if (this._frag) {\n\t      this._frag.children.push(this);\n\t    }\n\t\n\t    // push self into parent / transclusion host\n\t    if (this.$parent) {\n\t      this.$parent.$children.push(this);\n\t    }\n\t\n\t    // merge options.\n\t    options = this.$options = mergeOptions(this.constructor.options, options, this);\n\t\n\t    // set ref\n\t    this._updateRef();\n\t\n\t    // initialize data as empty object.\n\t    // it will be filled up in _initData().\n\t    this._data = {};\n\t\n\t    // call init hook\n\t    this._callHook('init');\n\t\n\t    // initialize data observation and scope inheritance.\n\t    this._initState();\n\t\n\t    // setup event system and option events.\n\t    this._initEvents();\n\t\n\t    // call created hook\n\t    this._callHook('created');\n\t\n\t    // if `el` option is passed, start compilation.\n\t    if (options.el) {\n\t      this.$mount(options.el);\n\t    }\n\t  };\n\t}\n\t\n\tvar pathCache = new Cache(1000);\n\t\n\t// actions\n\tvar APPEND = 0;\n\tvar PUSH = 1;\n\tvar INC_SUB_PATH_DEPTH = 2;\n\tvar PUSH_SUB_PATH = 3;\n\t\n\t// states\n\tvar BEFORE_PATH = 0;\n\tvar IN_PATH = 1;\n\tvar BEFORE_IDENT = 2;\n\tvar IN_IDENT = 3;\n\tvar IN_SUB_PATH = 4;\n\tvar IN_SINGLE_QUOTE = 5;\n\tvar IN_DOUBLE_QUOTE = 6;\n\tvar AFTER_PATH = 7;\n\tvar ERROR = 8;\n\t\n\tvar pathStateMachine = [];\n\t\n\tpathStateMachine[BEFORE_PATH] = {\n\t  'ws': [BEFORE_PATH],\n\t  'ident': [IN_IDENT, APPEND],\n\t  '[': [IN_SUB_PATH],\n\t  'eof': [AFTER_PATH]\n\t};\n\t\n\tpathStateMachine[IN_PATH] = {\n\t  'ws': [IN_PATH],\n\t  '.': [BEFORE_IDENT],\n\t  '[': [IN_SUB_PATH],\n\t  'eof': [AFTER_PATH]\n\t};\n\t\n\tpathStateMachine[BEFORE_IDENT] = {\n\t  'ws': [BEFORE_IDENT],\n\t  'ident': [IN_IDENT, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_IDENT] = {\n\t  'ident': [IN_IDENT, APPEND],\n\t  '0': [IN_IDENT, APPEND],\n\t  'number': [IN_IDENT, APPEND],\n\t  'ws': [IN_PATH, PUSH],\n\t  '.': [BEFORE_IDENT, PUSH],\n\t  '[': [IN_SUB_PATH, PUSH],\n\t  'eof': [AFTER_PATH, PUSH]\n\t};\n\t\n\tpathStateMachine[IN_SUB_PATH] = {\n\t  \"'\": [IN_SINGLE_QUOTE, APPEND],\n\t  '\"': [IN_DOUBLE_QUOTE, APPEND],\n\t  '[': [IN_SUB_PATH, INC_SUB_PATH_DEPTH],\n\t  ']': [IN_PATH, PUSH_SUB_PATH],\n\t  'eof': ERROR,\n\t  'else': [IN_SUB_PATH, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_SINGLE_QUOTE] = {\n\t  \"'\": [IN_SUB_PATH, APPEND],\n\t  'eof': ERROR,\n\t  'else': [IN_SINGLE_QUOTE, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_DOUBLE_QUOTE] = {\n\t  '\"': [IN_SUB_PATH, APPEND],\n\t  'eof': ERROR,\n\t  'else': [IN_DOUBLE_QUOTE, APPEND]\n\t};\n\t\n\t/**\n\t * Determine the type of a character in a keypath.\n\t *\n\t * @param {Char} ch\n\t * @return {String} type\n\t */\n\t\n\tfunction getPathCharType(ch) {\n\t  if (ch === undefined) {\n\t    return 'eof';\n\t  }\n\t\n\t  var code = ch.charCodeAt(0);\n\t\n\t  switch (code) {\n\t    case 0x5B: // [\n\t    case 0x5D: // ]\n\t    case 0x2E: // .\n\t    case 0x22: // \"\n\t    case 0x27: // '\n\t    case 0x30:\n\t      // 0\n\t      return ch;\n\t\n\t    case 0x5F: // _\n\t    case 0x24:\n\t      // $\n\t      return 'ident';\n\t\n\t    case 0x20: // Space\n\t    case 0x09: // Tab\n\t    case 0x0A: // Newline\n\t    case 0x0D: // Return\n\t    case 0xA0: // No-break space\n\t    case 0xFEFF: // Byte Order Mark\n\t    case 0x2028: // Line Separator\n\t    case 0x2029:\n\t      // Paragraph Separator\n\t      return 'ws';\n\t  }\n\t\n\t  // a-z, A-Z\n\t  if (code >= 0x61 && code <= 0x7A || code >= 0x41 && code <= 0x5A) {\n\t    return 'ident';\n\t  }\n\t\n\t  // 1-9\n\t  if (code >= 0x31 && code <= 0x39) {\n\t    return 'number';\n\t  }\n\t\n\t  return 'else';\n\t}\n\t\n\t/**\n\t * Format a subPath, return its plain form if it is\n\t * a literal string or number. Otherwise prepend the\n\t * dynamic indicator (*).\n\t *\n\t * @param {String} path\n\t * @return {String}\n\t */\n\t\n\tfunction formatSubPath(path) {\n\t  var trimmed = path.trim();\n\t  // invalid leading 0\n\t  if (path.charAt(0) === '0' && isNaN(path)) {\n\t    return false;\n\t  }\n\t  return isLiteral(trimmed) ? stripQuotes(trimmed) : '*' + trimmed;\n\t}\n\t\n\t/**\n\t * Parse a string path into an array of segments\n\t *\n\t * @param {String} path\n\t * @return {Array|undefined}\n\t */\n\t\n\tfunction parse(path) {\n\t  var keys = [];\n\t  var index = -1;\n\t  var mode = BEFORE_PATH;\n\t  var subPathDepth = 0;\n\t  var c, newChar, key, type, transition, action, typeMap;\n\t\n\t  var actions = [];\n\t\n\t  actions[PUSH] = function () {\n\t    if (key !== undefined) {\n\t      keys.push(key);\n\t      key = undefined;\n\t    }\n\t  };\n\t\n\t  actions[APPEND] = function () {\n\t    if (key === undefined) {\n\t      key = newChar;\n\t    } else {\n\t      key += newChar;\n\t    }\n\t  };\n\t\n\t  actions[INC_SUB_PATH_DEPTH] = function () {\n\t    actions[APPEND]();\n\t    subPathDepth++;\n\t  };\n\t\n\t  actions[PUSH_SUB_PATH] = function () {\n\t    if (subPathDepth > 0) {\n\t      subPathDepth--;\n\t      mode = IN_SUB_PATH;\n\t      actions[APPEND]();\n\t    } else {\n\t      subPathDepth = 0;\n\t      key = formatSubPath(key);\n\t      if (key === false) {\n\t        return false;\n\t      } else {\n\t        actions[PUSH]();\n\t      }\n\t    }\n\t  };\n\t\n\t  function maybeUnescapeQuote() {\n\t    var nextChar = path[index + 1];\n\t    if (mode === IN_SINGLE_QUOTE && nextChar === \"'\" || mode === IN_DOUBLE_QUOTE && nextChar === '\"') {\n\t      index++;\n\t      newChar = '\\\\' + nextChar;\n\t      actions[APPEND]();\n\t      return true;\n\t    }\n\t  }\n\t\n\t  while (mode != null) {\n\t    index++;\n\t    c = path[index];\n\t\n\t    if (c === '\\\\' && maybeUnescapeQuote()) {\n\t      continue;\n\t    }\n\t\n\t    type = getPathCharType(c);\n\t    typeMap = pathStateMachine[mode];\n\t    transition = typeMap[type] || typeMap['else'] || ERROR;\n\t\n\t    if (transition === ERROR) {\n\t      return; // parse error\n\t    }\n\t\n\t    mode = transition[0];\n\t    action = actions[transition[1]];\n\t    if (action) {\n\t      newChar = transition[2];\n\t      newChar = newChar === undefined ? c : newChar;\n\t      if (action() === false) {\n\t        return;\n\t      }\n\t    }\n\t\n\t    if (mode === AFTER_PATH) {\n\t      keys.raw = path;\n\t      return keys;\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * External parse that check for a cache hit first\n\t *\n\t * @param {String} path\n\t * @return {Array|undefined}\n\t */\n\t\n\tfunction parsePath(path) {\n\t  var hit = pathCache.get(path);\n\t  if (!hit) {\n\t    hit = parse(path);\n\t    if (hit) {\n\t      pathCache.put(path, hit);\n\t    }\n\t  }\n\t  return hit;\n\t}\n\t\n\t/**\n\t * Get from an object from a path string\n\t *\n\t * @param {Object} obj\n\t * @param {String} path\n\t */\n\t\n\tfunction getPath(obj, path) {\n\t  return parseExpression(path).get(obj);\n\t}\n\t\n\t/**\n\t * Warn against setting non-existent root path on a vm.\n\t */\n\t\n\tvar warnNonExistent;\n\tif (false) {\n\t  warnNonExistent = function (path, vm) {\n\t    warn('You are setting a non-existent path \"' + path.raw + '\" ' + 'on a vm instance. Consider pre-initializing the property ' + 'with the \"data\" option for more reliable reactivity ' + 'and better performance.', vm);\n\t  };\n\t}\n\t\n\t/**\n\t * Set on an object from a path\n\t *\n\t * @param {Object} obj\n\t * @param {String | Array} path\n\t * @param {*} val\n\t */\n\t\n\tfunction setPath(obj, path, val) {\n\t  var original = obj;\n\t  if (typeof path === 'string') {\n\t    path = parse(path);\n\t  }\n\t  if (!path || !isObject(obj)) {\n\t    return false;\n\t  }\n\t  var last, key;\n\t  for (var i = 0, l = path.length; i < l; i++) {\n\t    last = obj;\n\t    key = path[i];\n\t    if (key.charAt(0) === '*') {\n\t      key = parseExpression(key.slice(1)).get.call(original, original);\n\t    }\n\t    if (i < l - 1) {\n\t      obj = obj[key];\n\t      if (!isObject(obj)) {\n\t        obj = {};\n\t        if (false) {\n\t          warnNonExistent(path, last);\n\t        }\n\t        set(last, key, obj);\n\t      }\n\t    } else {\n\t      if (isArray(obj)) {\n\t        obj.$set(key, val);\n\t      } else if (key in obj) {\n\t        obj[key] = val;\n\t      } else {\n\t        if (false) {\n\t          warnNonExistent(path, obj);\n\t        }\n\t        set(obj, key, val);\n\t      }\n\t    }\n\t  }\n\t  return true;\n\t}\n\t\n\tvar path = Object.freeze({\n\t  parsePath: parsePath,\n\t  getPath: getPath,\n\t  setPath: setPath\n\t});\n\t\n\tvar expressionCache = new Cache(1000);\n\t\n\tvar allowedKeywords = 'Math,Date,this,true,false,null,undefined,Infinity,NaN,' + 'isNaN,isFinite,decodeURI,decodeURIComponent,encodeURI,' + 'encodeURIComponent,parseInt,parseFloat';\n\tvar allowedKeywordsRE = new RegExp('^(' + allowedKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\t\n\t// keywords that don't make sense inside expressions\n\tvar improperKeywords = 'break,case,class,catch,const,continue,debugger,default,' + 'delete,do,else,export,extends,finally,for,function,if,' + 'import,in,instanceof,let,return,super,switch,throw,try,' + 'var,while,with,yield,enum,await,implements,package,' + 'protected,static,interface,private,public';\n\tvar improperKeywordsRE = new RegExp('^(' + improperKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\t\n\tvar wsRE = /\\s/g;\n\tvar newlineRE = /\\n/g;\n\tvar saveRE = /[\\{,]\\s*[\\w\\$_]+\\s*:|('(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`)|new |typeof |void /g;\n\tvar restoreRE = /\"(\\d+)\"/g;\n\tvar pathTestRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$/;\n\tvar identRE = /[^\\w$\\.](?:[A-Za-z_$][\\w$]*)/g;\n\tvar booleanLiteralRE = /^(?:true|false)$/;\n\t\n\t/**\n\t * Save / Rewrite / Restore\n\t *\n\t * When rewriting paths found in an expression, it is\n\t * possible for the same letter sequences to be found in\n\t * strings and Object literal property keys. Therefore we\n\t * remove and store these parts in a temporary array, and\n\t * restore them after the path rewrite.\n\t */\n\t\n\tvar saved = [];\n\t\n\t/**\n\t * Save replacer\n\t *\n\t * The save regex can match two possible cases:\n\t * 1. An opening object literal\n\t * 2. A string\n\t * If matched as a plain string, we need to escape its\n\t * newlines, since the string needs to be preserved when\n\t * generating the function body.\n\t *\n\t * @param {String} str\n\t * @param {String} isString - str if matched as a string\n\t * @return {String} - placeholder with index\n\t */\n\t\n\tfunction save(str, isString) {\n\t  var i = saved.length;\n\t  saved[i] = isString ? str.replace(newlineRE, '\\\\n') : str;\n\t  return '\"' + i + '\"';\n\t}\n\t\n\t/**\n\t * Path rewrite replacer\n\t *\n\t * @param {String} raw\n\t * @return {String}\n\t */\n\t\n\tfunction rewrite(raw) {\n\t  var c = raw.charAt(0);\n\t  var path = raw.slice(1);\n\t  if (allowedKeywordsRE.test(path)) {\n\t    return raw;\n\t  } else {\n\t    path = path.indexOf('\"') > -1 ? path.replace(restoreRE, restore) : path;\n\t    return c + 'scope.' + path;\n\t  }\n\t}\n\t\n\t/**\n\t * Restore replacer\n\t *\n\t * @param {String} str\n\t * @param {String} i - matched save index\n\t * @return {String}\n\t */\n\t\n\tfunction restore(str, i) {\n\t  return saved[i];\n\t}\n\t\n\t/**\n\t * Rewrite an expression, prefixing all path accessors with\n\t * `scope.` and generate getter/setter functions.\n\t *\n\t * @param {String} exp\n\t * @return {Function}\n\t */\n\t\n\tfunction compileGetter(exp) {\n\t  if (improperKeywordsRE.test(exp)) {\n\t    (\"production\") !== 'production' && warn('Avoid using reserved keywords in expression: ' + exp);\n\t  }\n\t  // reset state\n\t  saved.length = 0;\n\t  // save strings and object literal keys\n\t  var body = exp.replace(saveRE, save).replace(wsRE, '');\n\t  // rewrite all paths\n\t  // pad 1 space here becaue the regex matches 1 extra char\n\t  body = (' ' + body).replace(identRE, rewrite).replace(restoreRE, restore);\n\t  return makeGetterFn(body);\n\t}\n\t\n\t/**\n\t * Build a getter function. Requires eval.\n\t *\n\t * We isolate the try/catch so it doesn't affect the\n\t * optimization of the parse function when it is not called.\n\t *\n\t * @param {String} body\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction makeGetterFn(body) {\n\t  try {\n\t    /* eslint-disable no-new-func */\n\t    return new Function('scope', 'return ' + body + ';');\n\t    /* eslint-enable no-new-func */\n\t  } catch (e) {\n\t    (\"production\") !== 'production' && warn('Invalid expression. ' + 'Generated function body: ' + body);\n\t  }\n\t}\n\t\n\t/**\n\t * Compile a setter function for the expression.\n\t *\n\t * @param {String} exp\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction compileSetter(exp) {\n\t  var path = parsePath(exp);\n\t  if (path) {\n\t    return function (scope, val) {\n\t      setPath(scope, path, val);\n\t    };\n\t  } else {\n\t    (\"production\") !== 'production' && warn('Invalid setter expression: ' + exp);\n\t  }\n\t}\n\t\n\t/**\n\t * Parse an expression into re-written getter/setters.\n\t *\n\t * @param {String} exp\n\t * @param {Boolean} needSet\n\t * @return {Function}\n\t */\n\t\n\tfunction parseExpression(exp, needSet) {\n\t  exp = exp.trim();\n\t  // try cache\n\t  var hit = expressionCache.get(exp);\n\t  if (hit) {\n\t    if (needSet && !hit.set) {\n\t      hit.set = compileSetter(hit.exp);\n\t    }\n\t    return hit;\n\t  }\n\t  var res = { exp: exp };\n\t  res.get = isSimplePath(exp) && exp.indexOf('[') < 0\n\t  // optimized super simple getter\n\t  ? makeGetterFn('scope.' + exp)\n\t  // dynamic getter\n\t  : compileGetter(exp);\n\t  if (needSet) {\n\t    res.set = compileSetter(exp);\n\t  }\n\t  expressionCache.put(exp, res);\n\t  return res;\n\t}\n\t\n\t/**\n\t * Check if an expression is a simple path.\n\t *\n\t * @param {String} exp\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isSimplePath(exp) {\n\t  return pathTestRE.test(exp) &&\n\t  // don't treat true/false as paths\n\t  !booleanLiteralRE.test(exp) &&\n\t  // Math constants e.g. Math.PI, Math.E etc.\n\t  exp.slice(0, 5) !== 'Math.';\n\t}\n\t\n\tvar expression = Object.freeze({\n\t  parseExpression: parseExpression,\n\t  isSimplePath: isSimplePath\n\t});\n\t\n\t// we have two separate queues: one for directive updates\n\t// and one for user watcher registered via $watch().\n\t// we want to guarantee directive updates to be called\n\t// before user watchers so that when user watchers are\n\t// triggered, the DOM would have already been in updated\n\t// state.\n\t\n\tvar queue = [];\n\tvar userQueue = [];\n\tvar has = {};\n\tvar circular = {};\n\tvar waiting = false;\n\t\n\t/**\n\t * Reset the batcher's state.\n\t */\n\t\n\tfunction resetBatcherState() {\n\t  queue.length = 0;\n\t  userQueue.length = 0;\n\t  has = {};\n\t  circular = {};\n\t  waiting = false;\n\t}\n\t\n\t/**\n\t * Flush both queues and run the watchers.\n\t */\n\t\n\tfunction flushBatcherQueue() {\n\t  var _again = true;\n\t\n\t  _function: while (_again) {\n\t    _again = false;\n\t\n\t    runBatcherQueue(queue);\n\t    runBatcherQueue(userQueue);\n\t    // user watchers triggered more watchers,\n\t    // keep flushing until it depletes\n\t    if (queue.length) {\n\t      _again = true;\n\t      continue _function;\n\t    }\n\t    // dev tool hook\n\t    /* istanbul ignore if */\n\t    if (devtools && config.devtools) {\n\t      devtools.emit('flush');\n\t    }\n\t    resetBatcherState();\n\t  }\n\t}\n\t\n\t/**\n\t * Run the watchers in a single queue.\n\t *\n\t * @param {Array} queue\n\t */\n\t\n\tfunction runBatcherQueue(queue) {\n\t  // do not cache length because more watchers might be pushed\n\t  // as we run existing watchers\n\t  for (var i = 0; i < queue.length; i++) {\n\t    var watcher = queue[i];\n\t    var id = watcher.id;\n\t    has[id] = null;\n\t    watcher.run();\n\t    // in dev build, check and stop circular updates.\n\t    if (false) {\n\t      circular[id] = (circular[id] || 0) + 1;\n\t      if (circular[id] > config._maxUpdateCount) {\n\t        warn('You may have an infinite update loop for watcher ' + 'with expression \"' + watcher.expression + '\"', watcher.vm);\n\t        break;\n\t      }\n\t    }\n\t  }\n\t  queue.length = 0;\n\t}\n\t\n\t/**\n\t * Push a watcher into the watcher queue.\n\t * Jobs with duplicate IDs will be skipped unless it's\n\t * pushed when the queue is being flushed.\n\t *\n\t * @param {Watcher} watcher\n\t *   properties:\n\t *   - {Number} id\n\t *   - {Function} run\n\t */\n\t\n\tfunction pushWatcher(watcher) {\n\t  var id = watcher.id;\n\t  if (has[id] == null) {\n\t    // push watcher into appropriate queue\n\t    var q = watcher.user ? userQueue : queue;\n\t    has[id] = q.length;\n\t    q.push(watcher);\n\t    // queue the flush\n\t    if (!waiting) {\n\t      waiting = true;\n\t      nextTick(flushBatcherQueue);\n\t    }\n\t  }\n\t}\n\t\n\tvar uid$2 = 0;\n\t\n\t/**\n\t * A watcher parses an expression, collects dependencies,\n\t * and fires callback when the expression value changes.\n\t * This is used for both the $watch() api and directives.\n\t *\n\t * @param {Vue} vm\n\t * @param {String|Function} expOrFn\n\t * @param {Function} cb\n\t * @param {Object} options\n\t *                 - {Array} filters\n\t *                 - {Boolean} twoWay\n\t *                 - {Boolean} deep\n\t *                 - {Boolean} user\n\t *                 - {Boolean} sync\n\t *                 - {Boolean} lazy\n\t *                 - {Function} [preProcess]\n\t *                 - {Function} [postProcess]\n\t * @constructor\n\t */\n\tfunction Watcher(vm, expOrFn, cb, options) {\n\t  // mix in options\n\t  if (options) {\n\t    extend(this, options);\n\t  }\n\t  var isFn = typeof expOrFn === 'function';\n\t  this.vm = vm;\n\t  vm._watchers.push(this);\n\t  this.expression = expOrFn;\n\t  this.cb = cb;\n\t  this.id = ++uid$2; // uid for batching\n\t  this.active = true;\n\t  this.dirty = this.lazy; // for lazy watchers\n\t  this.deps = [];\n\t  this.newDeps = [];\n\t  this.depIds = new _Set();\n\t  this.newDepIds = new _Set();\n\t  this.prevError = null; // for async error stacks\n\t  // parse expression for getter/setter\n\t  if (isFn) {\n\t    this.getter = expOrFn;\n\t    this.setter = undefined;\n\t  } else {\n\t    var res = parseExpression(expOrFn, this.twoWay);\n\t    this.getter = res.get;\n\t    this.setter = res.set;\n\t  }\n\t  this.value = this.lazy ? undefined : this.get();\n\t  // state for avoiding false triggers for deep and Array\n\t  // watchers during vm._digest()\n\t  this.queued = this.shallow = false;\n\t}\n\t\n\t/**\n\t * Evaluate the getter, and re-collect dependencies.\n\t */\n\t\n\tWatcher.prototype.get = function () {\n\t  this.beforeGet();\n\t  var scope = this.scope || this.vm;\n\t  var value;\n\t  try {\n\t    value = this.getter.call(scope, scope);\n\t  } catch (e) {\n\t    if (false) {\n\t      warn('Error when evaluating expression ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n\t    }\n\t  }\n\t  // \"touch\" every property so they are all tracked as\n\t  // dependencies for deep watching\n\t  if (this.deep) {\n\t    traverse(value);\n\t  }\n\t  if (this.preProcess) {\n\t    value = this.preProcess(value);\n\t  }\n\t  if (this.filters) {\n\t    value = scope._applyFilters(value, null, this.filters, false);\n\t  }\n\t  if (this.postProcess) {\n\t    value = this.postProcess(value);\n\t  }\n\t  this.afterGet();\n\t  return value;\n\t};\n\t\n\t/**\n\t * Set the corresponding value with the setter.\n\t *\n\t * @param {*} value\n\t */\n\t\n\tWatcher.prototype.set = function (value) {\n\t  var scope = this.scope || this.vm;\n\t  if (this.filters) {\n\t    value = scope._applyFilters(value, this.value, this.filters, true);\n\t  }\n\t  try {\n\t    this.setter.call(scope, scope, value);\n\t  } catch (e) {\n\t    if (false) {\n\t      warn('Error when evaluating setter ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n\t    }\n\t  }\n\t  // two-way sync for v-for alias\n\t  var forContext = scope.$forContext;\n\t  if (forContext && forContext.alias === this.expression) {\n\t    if (forContext.filters) {\n\t      (\"production\") !== 'production' && warn('It seems you are using two-way binding on ' + 'a v-for alias (' + this.expression + '), and the ' + 'v-for has filters. This will not work properly. ' + 'Either remove the filters or use an array of ' + 'objects and bind to object properties instead.', this.vm);\n\t      return;\n\t    }\n\t    forContext._withLock(function () {\n\t      if (scope.$key) {\n\t        // original is an object\n\t        forContext.rawValue[scope.$key] = value;\n\t      } else {\n\t        forContext.rawValue.$set(scope.$index, value);\n\t      }\n\t    });\n\t  }\n\t};\n\t\n\t/**\n\t * Prepare for dependency collection.\n\t */\n\t\n\tWatcher.prototype.beforeGet = function () {\n\t  Dep.target = this;\n\t};\n\t\n\t/**\n\t * Add a dependency to this directive.\n\t *\n\t * @param {Dep} dep\n\t */\n\t\n\tWatcher.prototype.addDep = function (dep) {\n\t  var id = dep.id;\n\t  if (!this.newDepIds.has(id)) {\n\t    this.newDepIds.add(id);\n\t    this.newDeps.push(dep);\n\t    if (!this.depIds.has(id)) {\n\t      dep.addSub(this);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Clean up for dependency collection.\n\t */\n\t\n\tWatcher.prototype.afterGet = function () {\n\t  Dep.target = null;\n\t  var i = this.deps.length;\n\t  while (i--) {\n\t    var dep = this.deps[i];\n\t    if (!this.newDepIds.has(dep.id)) {\n\t      dep.removeSub(this);\n\t    }\n\t  }\n\t  var tmp = this.depIds;\n\t  this.depIds = this.newDepIds;\n\t  this.newDepIds = tmp;\n\t  this.newDepIds.clear();\n\t  tmp = this.deps;\n\t  this.deps = this.newDeps;\n\t  this.newDeps = tmp;\n\t  this.newDeps.length = 0;\n\t};\n\t\n\t/**\n\t * Subscriber interface.\n\t * Will be called when a dependency changes.\n\t *\n\t * @param {Boolean} shallow\n\t */\n\t\n\tWatcher.prototype.update = function (shallow) {\n\t  if (this.lazy) {\n\t    this.dirty = true;\n\t  } else if (this.sync || !config.async) {\n\t    this.run();\n\t  } else {\n\t    // if queued, only overwrite shallow with non-shallow,\n\t    // but not the other way around.\n\t    this.shallow = this.queued ? shallow ? this.shallow : false : !!shallow;\n\t    this.queued = true;\n\t    // record before-push error stack in debug mode\n\t    /* istanbul ignore if */\n\t    if (false) {\n\t      this.prevError = new Error('[vue] async stack trace');\n\t    }\n\t    pushWatcher(this);\n\t  }\n\t};\n\t\n\t/**\n\t * Batcher job interface.\n\t * Will be called by the batcher.\n\t */\n\t\n\tWatcher.prototype.run = function () {\n\t  if (this.active) {\n\t    var value = this.get();\n\t    if (value !== this.value ||\n\t    // Deep watchers and watchers on Object/Arrays should fire even\n\t    // when the value is the same, because the value may\n\t    // have mutated; but only do so if this is a\n\t    // non-shallow update (caused by a vm digest).\n\t    (isObject(value) || this.deep) && !this.shallow) {\n\t      // set new value\n\t      var oldValue = this.value;\n\t      this.value = value;\n\t      // in debug + async mode, when a watcher callbacks\n\t      // throws, we also throw the saved before-push error\n\t      // so the full cross-tick stack trace is available.\n\t      var prevError = this.prevError;\n\t      /* istanbul ignore if */\n\t      if (false) {\n\t        this.prevError = null;\n\t        try {\n\t          this.cb.call(this.vm, value, oldValue);\n\t        } catch (e) {\n\t          nextTick(function () {\n\t            throw prevError;\n\t          }, 0);\n\t          throw e;\n\t        }\n\t      } else {\n\t        this.cb.call(this.vm, value, oldValue);\n\t      }\n\t    }\n\t    this.queued = this.shallow = false;\n\t  }\n\t};\n\t\n\t/**\n\t * Evaluate the value of the watcher.\n\t * This only gets called for lazy watchers.\n\t */\n\t\n\tWatcher.prototype.evaluate = function () {\n\t  // avoid overwriting another watcher that is being\n\t  // collected.\n\t  var current = Dep.target;\n\t  this.value = this.get();\n\t  this.dirty = false;\n\t  Dep.target = current;\n\t};\n\t\n\t/**\n\t * Depend on all deps collected by this watcher.\n\t */\n\t\n\tWatcher.prototype.depend = function () {\n\t  var i = this.deps.length;\n\t  while (i--) {\n\t    this.deps[i].depend();\n\t  }\n\t};\n\t\n\t/**\n\t * Remove self from all dependencies' subcriber list.\n\t */\n\t\n\tWatcher.prototype.teardown = function () {\n\t  if (this.active) {\n\t    // remove self from vm's watcher list\n\t    // this is a somewhat expensive operation so we skip it\n\t    // if the vm is being destroyed or is performing a v-for\n\t    // re-render (the watcher list is then filtered by v-for).\n\t    if (!this.vm._isBeingDestroyed && !this.vm._vForRemoving) {\n\t      this.vm._watchers.$remove(this);\n\t    }\n\t    var i = this.deps.length;\n\t    while (i--) {\n\t      this.deps[i].removeSub(this);\n\t    }\n\t    this.active = false;\n\t    this.vm = this.cb = this.value = null;\n\t  }\n\t};\n\t\n\t/**\n\t * Recrusively traverse an object to evoke all converted\n\t * getters, so that every nested property inside the object\n\t * is collected as a \"deep\" dependency.\n\t *\n\t * @param {*} val\n\t */\n\t\n\tvar seenObjects = new _Set();\n\tfunction traverse(val, seen) {\n\t  var i = undefined,\n\t      keys = undefined;\n\t  if (!seen) {\n\t    seen = seenObjects;\n\t    seen.clear();\n\t  }\n\t  var isA = isArray(val);\n\t  var isO = isObject(val);\n\t  if (isA || isO) {\n\t    if (val.__ob__) {\n\t      var depId = val.__ob__.dep.id;\n\t      if (seen.has(depId)) {\n\t        return;\n\t      } else {\n\t        seen.add(depId);\n\t      }\n\t    }\n\t    if (isA) {\n\t      i = val.length;\n\t      while (i--) traverse(val[i], seen);\n\t    } else if (isO) {\n\t      keys = Object.keys(val);\n\t      i = keys.length;\n\t      while (i--) traverse(val[keys[i]], seen);\n\t    }\n\t  }\n\t}\n\t\n\tvar text$1 = {\n\t\n\t  bind: function bind() {\n\t    this.attr = this.el.nodeType === 3 ? 'data' : 'textContent';\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el[this.attr] = _toString(value);\n\t  }\n\t};\n\t\n\tvar templateCache = new Cache(1000);\n\tvar idSelectorCache = new Cache(1000);\n\t\n\tvar map = {\n\t  efault: [0, '', ''],\n\t  legend: [1, '<fieldset>', '</fieldset>'],\n\t  tr: [2, '<table><tbody>', '</tbody></table>'],\n\t  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>']\n\t};\n\t\n\tmap.td = map.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\t\n\tmap.option = map.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\t\n\tmap.thead = map.tbody = map.colgroup = map.caption = map.tfoot = [1, '<table>', '</table>'];\n\t\n\tmap.g = map.defs = map.symbol = map.use = map.image = map.text = map.circle = map.ellipse = map.line = map.path = map.polygon = map.polyline = map.rect = [1, '<svg ' + 'xmlns=\"http://www.w3.org/2000/svg\" ' + 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' + 'xmlns:ev=\"http://www.w3.org/2001/xml-events\"' + 'version=\"1.1\">', '</svg>'];\n\t\n\t/**\n\t * Check if a node is a supported template node with a\n\t * DocumentFragment content.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isRealTemplate(node) {\n\t  return isTemplate(node) && isFragment(node.content);\n\t}\n\t\n\tvar tagRE$1 = /<([\\w:-]+)/;\n\tvar entityRE = /&#?\\w+?;/;\n\t\n\t/**\n\t * Convert a string template to a DocumentFragment.\n\t * Determines correct wrapping by tag types. Wrapping\n\t * strategy found in jQuery & component/domify.\n\t *\n\t * @param {String} templateString\n\t * @param {Boolean} raw\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction stringToFragment(templateString, raw) {\n\t  // try a cache hit first\n\t  var cacheKey = raw ? templateString : templateString.trim();\n\t  var hit = templateCache.get(cacheKey);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t\n\t  var frag = document.createDocumentFragment();\n\t  var tagMatch = templateString.match(tagRE$1);\n\t  var entityMatch = entityRE.test(templateString);\n\t\n\t  if (!tagMatch && !entityMatch) {\n\t    // text only, return a single text node.\n\t    frag.appendChild(document.createTextNode(templateString));\n\t  } else {\n\t    var tag = tagMatch && tagMatch[1];\n\t    var wrap = map[tag] || map.efault;\n\t    var depth = wrap[0];\n\t    var prefix = wrap[1];\n\t    var suffix = wrap[2];\n\t    var node = document.createElement('div');\n\t\n\t    node.innerHTML = prefix + templateString + suffix;\n\t    while (depth--) {\n\t      node = node.lastChild;\n\t    }\n\t\n\t    var child;\n\t    /* eslint-disable no-cond-assign */\n\t    while (child = node.firstChild) {\n\t      /* eslint-enable no-cond-assign */\n\t      frag.appendChild(child);\n\t    }\n\t  }\n\t  if (!raw) {\n\t    trimNode(frag);\n\t  }\n\t  templateCache.put(cacheKey, frag);\n\t  return frag;\n\t}\n\t\n\t/**\n\t * Convert a template node to a DocumentFragment.\n\t *\n\t * @param {Node} node\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction nodeToFragment(node) {\n\t  // if its a template tag and the browser supports it,\n\t  // its content is already a document fragment. However, iOS Safari has\n\t  // bug when using directly cloned template content with touch\n\t  // events and can cause crashes when the nodes are removed from DOM, so we\n\t  // have to treat template elements as string templates. (#2805)\n\t  /* istanbul ignore if */\n\t  if (isRealTemplate(node)) {\n\t    return stringToFragment(node.innerHTML);\n\t  }\n\t  // script template\n\t  if (node.tagName === 'SCRIPT') {\n\t    return stringToFragment(node.textContent);\n\t  }\n\t  // normal node, clone it to avoid mutating the original\n\t  var clonedNode = cloneNode(node);\n\t  var frag = document.createDocumentFragment();\n\t  var child;\n\t  /* eslint-disable no-cond-assign */\n\t  while (child = clonedNode.firstChild) {\n\t    /* eslint-enable no-cond-assign */\n\t    frag.appendChild(child);\n\t  }\n\t  trimNode(frag);\n\t  return frag;\n\t}\n\t\n\t// Test for the presence of the Safari template cloning bug\n\t// https://bugs.webkit.org/showug.cgi?id=137755\n\tvar hasBrokenTemplate = (function () {\n\t  /* istanbul ignore else */\n\t  if (inBrowser) {\n\t    var a = document.createElement('div');\n\t    a.innerHTML = '<template>1</template>';\n\t    return !a.cloneNode(true).firstChild.innerHTML;\n\t  } else {\n\t    return false;\n\t  }\n\t})();\n\t\n\t// Test for IE10/11 textarea placeholder clone bug\n\tvar hasTextareaCloneBug = (function () {\n\t  /* istanbul ignore else */\n\t  if (inBrowser) {\n\t    var t = document.createElement('textarea');\n\t    t.placeholder = 't';\n\t    return t.cloneNode(true).value === 't';\n\t  } else {\n\t    return false;\n\t  }\n\t})();\n\t\n\t/**\n\t * 1. Deal with Safari cloning nested <template> bug by\n\t *    manually cloning all template instances.\n\t * 2. Deal with IE10/11 textarea placeholder bug by setting\n\t *    the correct value after cloning.\n\t *\n\t * @param {Element|DocumentFragment} node\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction cloneNode(node) {\n\t  /* istanbul ignore if */\n\t  if (!node.querySelectorAll) {\n\t    return node.cloneNode();\n\t  }\n\t  var res = node.cloneNode(true);\n\t  var i, original, cloned;\n\t  /* istanbul ignore if */\n\t  if (hasBrokenTemplate) {\n\t    var tempClone = res;\n\t    if (isRealTemplate(node)) {\n\t      node = node.content;\n\t      tempClone = res.content;\n\t    }\n\t    original = node.querySelectorAll('template');\n\t    if (original.length) {\n\t      cloned = tempClone.querySelectorAll('template');\n\t      i = cloned.length;\n\t      while (i--) {\n\t        cloned[i].parentNode.replaceChild(cloneNode(original[i]), cloned[i]);\n\t      }\n\t    }\n\t  }\n\t  /* istanbul ignore if */\n\t  if (hasTextareaCloneBug) {\n\t    if (node.tagName === 'TEXTAREA') {\n\t      res.value = node.value;\n\t    } else {\n\t      original = node.querySelectorAll('textarea');\n\t      if (original.length) {\n\t        cloned = res.querySelectorAll('textarea');\n\t        i = cloned.length;\n\t        while (i--) {\n\t          cloned[i].value = original[i].value;\n\t        }\n\t      }\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Process the template option and normalizes it into a\n\t * a DocumentFragment that can be used as a partial or a\n\t * instance template.\n\t *\n\t * @param {*} template\n\t *        Possible values include:\n\t *        - DocumentFragment object\n\t *        - Node object of type Template\n\t *        - id selector: '#some-template-id'\n\t *        - template string: '<div><span>{{msg}}</span></div>'\n\t * @param {Boolean} shouldClone\n\t * @param {Boolean} raw\n\t *        inline HTML interpolation. Do not check for id\n\t *        selector and keep whitespace in the string.\n\t * @return {DocumentFragment|undefined}\n\t */\n\t\n\tfunction parseTemplate(template, shouldClone, raw) {\n\t  var node, frag;\n\t\n\t  // if the template is already a document fragment,\n\t  // do nothing\n\t  if (isFragment(template)) {\n\t    trimNode(template);\n\t    return shouldClone ? cloneNode(template) : template;\n\t  }\n\t\n\t  if (typeof template === 'string') {\n\t    // id selector\n\t    if (!raw && template.charAt(0) === '#') {\n\t      // id selector can be cached too\n\t      frag = idSelectorCache.get(template);\n\t      if (!frag) {\n\t        node = document.getElementById(template.slice(1));\n\t        if (node) {\n\t          frag = nodeToFragment(node);\n\t          // save selector to cache\n\t          idSelectorCache.put(template, frag);\n\t        }\n\t      }\n\t    } else {\n\t      // normal string template\n\t      frag = stringToFragment(template, raw);\n\t    }\n\t  } else if (template.nodeType) {\n\t    // a direct node\n\t    frag = nodeToFragment(template);\n\t  }\n\t\n\t  return frag && shouldClone ? cloneNode(frag) : frag;\n\t}\n\t\n\tvar template = Object.freeze({\n\t  cloneNode: cloneNode,\n\t  parseTemplate: parseTemplate\n\t});\n\t\n\tvar html = {\n\t\n\t  bind: function bind() {\n\t    // a comment node means this is a binding for\n\t    // {{{ inline unescaped html }}}\n\t    if (this.el.nodeType === 8) {\n\t      // hold nodes\n\t      this.nodes = [];\n\t      // replace the placeholder with proper anchor\n\t      this.anchor = createAnchor('v-html');\n\t      replace(this.el, this.anchor);\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    value = _toString(value);\n\t    if (this.nodes) {\n\t      this.swap(value);\n\t    } else {\n\t      this.el.innerHTML = value;\n\t    }\n\t  },\n\t\n\t  swap: function swap(value) {\n\t    // remove old nodes\n\t    var i = this.nodes.length;\n\t    while (i--) {\n\t      remove(this.nodes[i]);\n\t    }\n\t    // convert new value to a fragment\n\t    // do not attempt to retrieve from id selector\n\t    var frag = parseTemplate(value, true, true);\n\t    // save a reference to these nodes so we can remove later\n\t    this.nodes = toArray(frag.childNodes);\n\t    before(frag, this.anchor);\n\t  }\n\t};\n\t\n\t/**\n\t * Abstraction for a partially-compiled fragment.\n\t * Can optionally compile content with a child scope.\n\t *\n\t * @param {Function} linker\n\t * @param {Vue} vm\n\t * @param {DocumentFragment} frag\n\t * @param {Vue} [host]\n\t * @param {Object} [scope]\n\t * @param {Fragment} [parentFrag]\n\t */\n\tfunction Fragment(linker, vm, frag, host, scope, parentFrag) {\n\t  this.children = [];\n\t  this.childFrags = [];\n\t  this.vm = vm;\n\t  this.scope = scope;\n\t  this.inserted = false;\n\t  this.parentFrag = parentFrag;\n\t  if (parentFrag) {\n\t    parentFrag.childFrags.push(this);\n\t  }\n\t  this.unlink = linker(vm, frag, host, scope, this);\n\t  var single = this.single = frag.childNodes.length === 1 &&\n\t  // do not go single mode if the only node is an anchor\n\t  !frag.childNodes[0].__v_anchor;\n\t  if (single) {\n\t    this.node = frag.childNodes[0];\n\t    this.before = singleBefore;\n\t    this.remove = singleRemove;\n\t  } else {\n\t    this.node = createAnchor('fragment-start');\n\t    this.end = createAnchor('fragment-end');\n\t    this.frag = frag;\n\t    prepend(this.node, frag);\n\t    frag.appendChild(this.end);\n\t    this.before = multiBefore;\n\t    this.remove = multiRemove;\n\t  }\n\t  this.node.__v_frag = this;\n\t}\n\t\n\t/**\n\t * Call attach/detach for all components contained within\n\t * this fragment. Also do so recursively for all child\n\t * fragments.\n\t *\n\t * @param {Function} hook\n\t */\n\t\n\tFragment.prototype.callHook = function (hook) {\n\t  var i, l;\n\t  for (i = 0, l = this.childFrags.length; i < l; i++) {\n\t    this.childFrags[i].callHook(hook);\n\t  }\n\t  for (i = 0, l = this.children.length; i < l; i++) {\n\t    hook(this.children[i]);\n\t  }\n\t};\n\t\n\t/**\n\t * Insert fragment before target, single node version\n\t *\n\t * @param {Node} target\n\t * @param {Boolean} withTransition\n\t */\n\t\n\tfunction singleBefore(target, withTransition) {\n\t  this.inserted = true;\n\t  var method = withTransition !== false ? beforeWithTransition : before;\n\t  method(this.node, target, this.vm);\n\t  if (inDoc(this.node)) {\n\t    this.callHook(attach);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove fragment, single node version\n\t */\n\t\n\tfunction singleRemove() {\n\t  this.inserted = false;\n\t  var shouldCallRemove = inDoc(this.node);\n\t  var self = this;\n\t  this.beforeRemove();\n\t  removeWithTransition(this.node, this.vm, function () {\n\t    if (shouldCallRemove) {\n\t      self.callHook(detach);\n\t    }\n\t    self.destroy();\n\t  });\n\t}\n\t\n\t/**\n\t * Insert fragment before target, multi-nodes version\n\t *\n\t * @param {Node} target\n\t * @param {Boolean} withTransition\n\t */\n\t\n\tfunction multiBefore(target, withTransition) {\n\t  this.inserted = true;\n\t  var vm = this.vm;\n\t  var method = withTransition !== false ? beforeWithTransition : before;\n\t  mapNodeRange(this.node, this.end, function (node) {\n\t    method(node, target, vm);\n\t  });\n\t  if (inDoc(this.node)) {\n\t    this.callHook(attach);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove fragment, multi-nodes version\n\t */\n\t\n\tfunction multiRemove() {\n\t  this.inserted = false;\n\t  var self = this;\n\t  var shouldCallRemove = inDoc(this.node);\n\t  this.beforeRemove();\n\t  removeNodeRange(this.node, this.end, this.vm, this.frag, function () {\n\t    if (shouldCallRemove) {\n\t      self.callHook(detach);\n\t    }\n\t    self.destroy();\n\t  });\n\t}\n\t\n\t/**\n\t * Prepare the fragment for removal.\n\t */\n\t\n\tFragment.prototype.beforeRemove = function () {\n\t  var i, l;\n\t  for (i = 0, l = this.childFrags.length; i < l; i++) {\n\t    // call the same method recursively on child\n\t    // fragments, depth-first\n\t    this.childFrags[i].beforeRemove(false);\n\t  }\n\t  for (i = 0, l = this.children.length; i < l; i++) {\n\t    // Call destroy for all contained instances,\n\t    // with remove:false and defer:true.\n\t    // Defer is necessary because we need to\n\t    // keep the children to call detach hooks\n\t    // on them.\n\t    this.children[i].$destroy(false, true);\n\t  }\n\t  var dirs = this.unlink.dirs;\n\t  for (i = 0, l = dirs.length; i < l; i++) {\n\t    // disable the watchers on all the directives\n\t    // so that the rendered content stays the same\n\t    // during removal.\n\t    dirs[i]._watcher && dirs[i]._watcher.teardown();\n\t  }\n\t};\n\t\n\t/**\n\t * Destroy the fragment.\n\t */\n\t\n\tFragment.prototype.destroy = function () {\n\t  if (this.parentFrag) {\n\t    this.parentFrag.childFrags.$remove(this);\n\t  }\n\t  this.node.__v_frag = null;\n\t  this.unlink();\n\t};\n\t\n\t/**\n\t * Call attach hook for a Vue instance.\n\t *\n\t * @param {Vue} child\n\t */\n\t\n\tfunction attach(child) {\n\t  if (!child._isAttached && inDoc(child.$el)) {\n\t    child._callHook('attached');\n\t  }\n\t}\n\t\n\t/**\n\t * Call detach hook for a Vue instance.\n\t *\n\t * @param {Vue} child\n\t */\n\t\n\tfunction detach(child) {\n\t  if (child._isAttached && !inDoc(child.$el)) {\n\t    child._callHook('detached');\n\t  }\n\t}\n\t\n\tvar linkerCache = new Cache(5000);\n\t\n\t/**\n\t * A factory that can be used to create instances of a\n\t * fragment. Caches the compiled linker if possible.\n\t *\n\t * @param {Vue} vm\n\t * @param {Element|String} el\n\t */\n\tfunction FragmentFactory(vm, el) {\n\t  this.vm = vm;\n\t  var template;\n\t  var isString = typeof el === 'string';\n\t  if (isString || isTemplate(el) && !el.hasAttribute('v-if')) {\n\t    template = parseTemplate(el, true);\n\t  } else {\n\t    template = document.createDocumentFragment();\n\t    template.appendChild(el);\n\t  }\n\t  this.template = template;\n\t  // linker can be cached, but only for components\n\t  var linker;\n\t  var cid = vm.constructor.cid;\n\t  if (cid > 0) {\n\t    var cacheId = cid + (isString ? el : getOuterHTML(el));\n\t    linker = linkerCache.get(cacheId);\n\t    if (!linker) {\n\t      linker = compile(template, vm.$options, true);\n\t      linkerCache.put(cacheId, linker);\n\t    }\n\t  } else {\n\t    linker = compile(template, vm.$options, true);\n\t  }\n\t  this.linker = linker;\n\t}\n\t\n\t/**\n\t * Create a fragment instance with given host and scope.\n\t *\n\t * @param {Vue} host\n\t * @param {Object} scope\n\t * @param {Fragment} parentFrag\n\t */\n\t\n\tFragmentFactory.prototype.create = function (host, scope, parentFrag) {\n\t  var frag = cloneNode(this.template);\n\t  return new Fragment(this.linker, this.vm, frag, host, scope, parentFrag);\n\t};\n\t\n\tvar ON = 700;\n\tvar MODEL = 800;\n\tvar BIND = 850;\n\tvar TRANSITION = 1100;\n\tvar EL = 1500;\n\tvar COMPONENT = 1500;\n\tvar PARTIAL = 1750;\n\tvar IF = 2100;\n\tvar FOR = 2200;\n\tvar SLOT = 2300;\n\t\n\tvar uid$3 = 0;\n\t\n\tvar vFor = {\n\t\n\t  priority: FOR,\n\t  terminal: true,\n\t\n\t  params: ['track-by', 'stagger', 'enter-stagger', 'leave-stagger'],\n\t\n\t  bind: function bind() {\n\t    // support \"item in/of items\" syntax\n\t    var inMatch = this.expression.match(/(.*) (?:in|of) (.*)/);\n\t    if (inMatch) {\n\t      var itMatch = inMatch[1].match(/\\((.*),(.*)\\)/);\n\t      if (itMatch) {\n\t        this.iterator = itMatch[1].trim();\n\t        this.alias = itMatch[2].trim();\n\t      } else {\n\t        this.alias = inMatch[1].trim();\n\t      }\n\t      this.expression = inMatch[2];\n\t    }\n\t\n\t    if (!this.alias) {\n\t      (\"production\") !== 'production' && warn('Invalid v-for expression \"' + this.descriptor.raw + '\": ' + 'alias is required.', this.vm);\n\t      return;\n\t    }\n\t\n\t    // uid as a cache identifier\n\t    this.id = '__v-for__' + ++uid$3;\n\t\n\t    // check if this is an option list,\n\t    // so that we know if we need to update the <select>'s\n\t    // v-model when the option list has changed.\n\t    // because v-model has a lower priority than v-for,\n\t    // the v-model is not bound here yet, so we have to\n\t    // retrive it in the actual updateModel() function.\n\t    var tag = this.el.tagName;\n\t    this.isOption = (tag === 'OPTION' || tag === 'OPTGROUP') && this.el.parentNode.tagName === 'SELECT';\n\t\n\t    // setup anchor nodes\n\t    this.start = createAnchor('v-for-start');\n\t    this.end = createAnchor('v-for-end');\n\t    replace(this.el, this.end);\n\t    before(this.start, this.end);\n\t\n\t    // cache\n\t    this.cache = Object.create(null);\n\t\n\t    // fragment factory\n\t    this.factory = new FragmentFactory(this.vm, this.el);\n\t  },\n\t\n\t  update: function update(data) {\n\t    this.diff(data);\n\t    this.updateRef();\n\t    this.updateModel();\n\t  },\n\t\n\t  /**\n\t   * Diff, based on new data and old data, determine the\n\t   * minimum amount of DOM manipulations needed to make the\n\t   * DOM reflect the new data Array.\n\t   *\n\t   * The algorithm diffs the new data Array by storing a\n\t   * hidden reference to an owner vm instance on previously\n\t   * seen data. This allows us to achieve O(n) which is\n\t   * better than a levenshtein distance based algorithm,\n\t   * which is O(m * n).\n\t   *\n\t   * @param {Array} data\n\t   */\n\t\n\t  diff: function diff(data) {\n\t    // check if the Array was converted from an Object\n\t    var item = data[0];\n\t    var convertedFromObject = this.fromObject = isObject(item) && hasOwn(item, '$key') && hasOwn(item, '$value');\n\t\n\t    var trackByKey = this.params.trackBy;\n\t    var oldFrags = this.frags;\n\t    var frags = this.frags = new Array(data.length);\n\t    var alias = this.alias;\n\t    var iterator = this.iterator;\n\t    var start = this.start;\n\t    var end = this.end;\n\t    var inDocument = inDoc(start);\n\t    var init = !oldFrags;\n\t    var i, l, frag, key, value, primitive;\n\t\n\t    // First pass, go through the new Array and fill up\n\t    // the new frags array. If a piece of data has a cached\n\t    // instance for it, we reuse it. Otherwise build a new\n\t    // instance.\n\t    for (i = 0, l = data.length; i < l; i++) {\n\t      item = data[i];\n\t      key = convertedFromObject ? item.$key : null;\n\t      value = convertedFromObject ? item.$value : item;\n\t      primitive = !isObject(value);\n\t      frag = !init && this.getCachedFrag(value, i, key);\n\t      if (frag) {\n\t        // reusable fragment\n\t        frag.reused = true;\n\t        // update $index\n\t        frag.scope.$index = i;\n\t        // update $key\n\t        if (key) {\n\t          frag.scope.$key = key;\n\t        }\n\t        // update iterator\n\t        if (iterator) {\n\t          frag.scope[iterator] = key !== null ? key : i;\n\t        }\n\t        // update data for track-by, object repeat &\n\t        // primitive values.\n\t        if (trackByKey || convertedFromObject || primitive) {\n\t          withoutConversion(function () {\n\t            frag.scope[alias] = value;\n\t          });\n\t        }\n\t      } else {\n\t        // new isntance\n\t        frag = this.create(value, alias, i, key);\n\t        frag.fresh = !init;\n\t      }\n\t      frags[i] = frag;\n\t      if (init) {\n\t        frag.before(end);\n\t      }\n\t    }\n\t\n\t    // we're done for the initial render.\n\t    if (init) {\n\t      return;\n\t    }\n\t\n\t    // Second pass, go through the old fragments and\n\t    // destroy those who are not reused (and remove them\n\t    // from cache)\n\t    var removalIndex = 0;\n\t    var totalRemoved = oldFrags.length - frags.length;\n\t    // when removing a large number of fragments, watcher removal\n\t    // turns out to be a perf bottleneck, so we batch the watcher\n\t    // removals into a single filter call!\n\t    this.vm._vForRemoving = true;\n\t    for (i = 0, l = oldFrags.length; i < l; i++) {\n\t      frag = oldFrags[i];\n\t      if (!frag.reused) {\n\t        this.deleteCachedFrag(frag);\n\t        this.remove(frag, removalIndex++, totalRemoved, inDocument);\n\t      }\n\t    }\n\t    this.vm._vForRemoving = false;\n\t    if (removalIndex) {\n\t      this.vm._watchers = this.vm._watchers.filter(function (w) {\n\t        return w.active;\n\t      });\n\t    }\n\t\n\t    // Final pass, move/insert new fragments into the\n\t    // right place.\n\t    var targetPrev, prevEl, currentPrev;\n\t    var insertionIndex = 0;\n\t    for (i = 0, l = frags.length; i < l; i++) {\n\t      frag = frags[i];\n\t      // this is the frag that we should be after\n\t      targetPrev = frags[i - 1];\n\t      prevEl = targetPrev ? targetPrev.staggerCb ? targetPrev.staggerAnchor : targetPrev.end || targetPrev.node : start;\n\t      if (frag.reused && !frag.staggerCb) {\n\t        currentPrev = findPrevFrag(frag, start, this.id);\n\t        if (currentPrev !== targetPrev && (!currentPrev ||\n\t        // optimization for moving a single item.\n\t        // thanks to suggestions by @livoras in #1807\n\t        findPrevFrag(currentPrev, start, this.id) !== targetPrev)) {\n\t          this.move(frag, prevEl);\n\t        }\n\t      } else {\n\t        // new instance, or still in stagger.\n\t        // insert with updated stagger index.\n\t        this.insert(frag, insertionIndex++, prevEl, inDocument);\n\t      }\n\t      frag.reused = frag.fresh = false;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Create a new fragment instance.\n\t   *\n\t   * @param {*} value\n\t   * @param {String} alias\n\t   * @param {Number} index\n\t   * @param {String} [key]\n\t   * @return {Fragment}\n\t   */\n\t\n\t  create: function create(value, alias, index, key) {\n\t    var host = this._host;\n\t    // create iteration scope\n\t    var parentScope = this._scope || this.vm;\n\t    var scope = Object.create(parentScope);\n\t    // ref holder for the scope\n\t    scope.$refs = Object.create(parentScope.$refs);\n\t    scope.$els = Object.create(parentScope.$els);\n\t    // make sure point $parent to parent scope\n\t    scope.$parent = parentScope;\n\t    // for two-way binding on alias\n\t    scope.$forContext = this;\n\t    // define scope properties\n\t    // important: define the scope alias without forced conversion\n\t    // so that frozen data structures remain non-reactive.\n\t    withoutConversion(function () {\n\t      defineReactive(scope, alias, value);\n\t    });\n\t    defineReactive(scope, '$index', index);\n\t    if (key) {\n\t      defineReactive(scope, '$key', key);\n\t    } else if (scope.$key) {\n\t      // avoid accidental fallback\n\t      def(scope, '$key', null);\n\t    }\n\t    if (this.iterator) {\n\t      defineReactive(scope, this.iterator, key !== null ? key : index);\n\t    }\n\t    var frag = this.factory.create(host, scope, this._frag);\n\t    frag.forId = this.id;\n\t    this.cacheFrag(value, frag, index, key);\n\t    return frag;\n\t  },\n\t\n\t  /**\n\t   * Update the v-ref on owner vm.\n\t   */\n\t\n\t  updateRef: function updateRef() {\n\t    var ref = this.descriptor.ref;\n\t    if (!ref) return;\n\t    var hash = (this._scope || this.vm).$refs;\n\t    var refs;\n\t    if (!this.fromObject) {\n\t      refs = this.frags.map(findVmFromFrag);\n\t    } else {\n\t      refs = {};\n\t      this.frags.forEach(function (frag) {\n\t        refs[frag.scope.$key] = findVmFromFrag(frag);\n\t      });\n\t    }\n\t    hash[ref] = refs;\n\t  },\n\t\n\t  /**\n\t   * For option lists, update the containing v-model on\n\t   * parent <select>.\n\t   */\n\t\n\t  updateModel: function updateModel() {\n\t    if (this.isOption) {\n\t      var parent = this.start.parentNode;\n\t      var model = parent && parent.__v_model;\n\t      if (model) {\n\t        model.forceUpdate();\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Insert a fragment. Handles staggering.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Node} prevEl\n\t   * @param {Boolean} inDocument\n\t   */\n\t\n\t  insert: function insert(frag, index, prevEl, inDocument) {\n\t    if (frag.staggerCb) {\n\t      frag.staggerCb.cancel();\n\t      frag.staggerCb = null;\n\t    }\n\t    var staggerAmount = this.getStagger(frag, index, null, 'enter');\n\t    if (inDocument && staggerAmount) {\n\t      // create an anchor and insert it synchronously,\n\t      // so that we can resolve the correct order without\n\t      // worrying about some elements not inserted yet\n\t      var anchor = frag.staggerAnchor;\n\t      if (!anchor) {\n\t        anchor = frag.staggerAnchor = createAnchor('stagger-anchor');\n\t        anchor.__v_frag = frag;\n\t      }\n\t      after(anchor, prevEl);\n\t      var op = frag.staggerCb = cancellable(function () {\n\t        frag.staggerCb = null;\n\t        frag.before(anchor);\n\t        remove(anchor);\n\t      });\n\t      setTimeout(op, staggerAmount);\n\t    } else {\n\t      var target = prevEl.nextSibling;\n\t      /* istanbul ignore if */\n\t      if (!target) {\n\t        // reset end anchor position in case the position was messed up\n\t        // by an external drag-n-drop library.\n\t        after(this.end, prevEl);\n\t        target = this.end;\n\t      }\n\t      frag.before(target);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Remove a fragment. Handles staggering.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Number} total\n\t   * @param {Boolean} inDocument\n\t   */\n\t\n\t  remove: function remove(frag, index, total, inDocument) {\n\t    if (frag.staggerCb) {\n\t      frag.staggerCb.cancel();\n\t      frag.staggerCb = null;\n\t      // it's not possible for the same frag to be removed\n\t      // twice, so if we have a pending stagger callback,\n\t      // it means this frag is queued for enter but removed\n\t      // before its transition started. Since it is already\n\t      // destroyed, we can just leave it in detached state.\n\t      return;\n\t    }\n\t    var staggerAmount = this.getStagger(frag, index, total, 'leave');\n\t    if (inDocument && staggerAmount) {\n\t      var op = frag.staggerCb = cancellable(function () {\n\t        frag.staggerCb = null;\n\t        frag.remove();\n\t      });\n\t      setTimeout(op, staggerAmount);\n\t    } else {\n\t      frag.remove();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Move a fragment to a new position.\n\t   * Force no transition.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Node} prevEl\n\t   */\n\t\n\t  move: function move(frag, prevEl) {\n\t    // fix a common issue with Sortable:\n\t    // if prevEl doesn't have nextSibling, this means it's\n\t    // been dragged after the end anchor. Just re-position\n\t    // the end anchor to the end of the container.\n\t    /* istanbul ignore if */\n\t    if (!prevEl.nextSibling) {\n\t      this.end.parentNode.appendChild(this.end);\n\t    }\n\t    frag.before(prevEl.nextSibling, false);\n\t  },\n\t\n\t  /**\n\t   * Cache a fragment using track-by or the object key.\n\t   *\n\t   * @param {*} value\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {String} [key]\n\t   */\n\t\n\t  cacheFrag: function cacheFrag(value, frag, index, key) {\n\t    var trackByKey = this.params.trackBy;\n\t    var cache = this.cache;\n\t    var primitive = !isObject(value);\n\t    var id;\n\t    if (key || trackByKey || primitive) {\n\t      id = getTrackByKey(index, key, value, trackByKey);\n\t      if (!cache[id]) {\n\t        cache[id] = frag;\n\t      } else if (trackByKey !== '$index') {\n\t        (\"production\") !== 'production' && this.warnDuplicate(value);\n\t      }\n\t    } else {\n\t      id = this.id;\n\t      if (hasOwn(value, id)) {\n\t        if (value[id] === null) {\n\t          value[id] = frag;\n\t        } else {\n\t          (\"production\") !== 'production' && this.warnDuplicate(value);\n\t        }\n\t      } else if (Object.isExtensible(value)) {\n\t        def(value, id, frag);\n\t      } else if (false) {\n\t        warn('Frozen v-for objects cannot be automatically tracked, make sure to ' + 'provide a track-by key.');\n\t      }\n\t    }\n\t    frag.raw = value;\n\t  },\n\t\n\t  /**\n\t   * Get a cached fragment from the value/index/key\n\t   *\n\t   * @param {*} value\n\t   * @param {Number} index\n\t   * @param {String} key\n\t   * @return {Fragment}\n\t   */\n\t\n\t  getCachedFrag: function getCachedFrag(value, index, key) {\n\t    var trackByKey = this.params.trackBy;\n\t    var primitive = !isObject(value);\n\t    var frag;\n\t    if (key || trackByKey || primitive) {\n\t      var id = getTrackByKey(index, key, value, trackByKey);\n\t      frag = this.cache[id];\n\t    } else {\n\t      frag = value[this.id];\n\t    }\n\t    if (frag && (frag.reused || frag.fresh)) {\n\t      (\"production\") !== 'production' && this.warnDuplicate(value);\n\t    }\n\t    return frag;\n\t  },\n\t\n\t  /**\n\t   * Delete a fragment from cache.\n\t   *\n\t   * @param {Fragment} frag\n\t   */\n\t\n\t  deleteCachedFrag: function deleteCachedFrag(frag) {\n\t    var value = frag.raw;\n\t    var trackByKey = this.params.trackBy;\n\t    var scope = frag.scope;\n\t    var index = scope.$index;\n\t    // fix #948: avoid accidentally fall through to\n\t    // a parent repeater which happens to have $key.\n\t    var key = hasOwn(scope, '$key') && scope.$key;\n\t    var primitive = !isObject(value);\n\t    if (trackByKey || key || primitive) {\n\t      var id = getTrackByKey(index, key, value, trackByKey);\n\t      this.cache[id] = null;\n\t    } else {\n\t      value[this.id] = null;\n\t      frag.raw = null;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Get the stagger amount for an insertion/removal.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Number} total\n\t   * @param {String} type\n\t   */\n\t\n\t  getStagger: function getStagger(frag, index, total, type) {\n\t    type = type + 'Stagger';\n\t    var trans = frag.node.__v_trans;\n\t    var hooks = trans && trans.hooks;\n\t    var hook = hooks && (hooks[type] || hooks.stagger);\n\t    return hook ? hook.call(frag, index, total) : index * parseInt(this.params[type] || this.params.stagger, 10);\n\t  },\n\t\n\t  /**\n\t   * Pre-process the value before piping it through the\n\t   * filters. This is passed to and called by the watcher.\n\t   */\n\t\n\t  _preProcess: function _preProcess(value) {\n\t    // regardless of type, store the un-filtered raw value.\n\t    this.rawValue = value;\n\t    return value;\n\t  },\n\t\n\t  /**\n\t   * Post-process the value after it has been piped through\n\t   * the filters. This is passed to and called by the watcher.\n\t   *\n\t   * It is necessary for this to be called during the\n\t   * wathcer's dependency collection phase because we want\n\t   * the v-for to update when the source Object is mutated.\n\t   */\n\t\n\t  _postProcess: function _postProcess(value) {\n\t    if (isArray(value)) {\n\t      return value;\n\t    } else if (isPlainObject(value)) {\n\t      // convert plain object to array.\n\t      var keys = Object.keys(value);\n\t      var i = keys.length;\n\t      var res = new Array(i);\n\t      var key;\n\t      while (i--) {\n\t        key = keys[i];\n\t        res[i] = {\n\t          $key: key,\n\t          $value: value[key]\n\t        };\n\t      }\n\t      return res;\n\t    } else {\n\t      if (typeof value === 'number' && !isNaN(value)) {\n\t        value = range(value);\n\t      }\n\t      return value || [];\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.descriptor.ref) {\n\t      (this._scope || this.vm).$refs[this.descriptor.ref] = null;\n\t    }\n\t    if (this.frags) {\n\t      var i = this.frags.length;\n\t      var frag;\n\t      while (i--) {\n\t        frag = this.frags[i];\n\t        this.deleteCachedFrag(frag);\n\t        frag.destroy();\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Helper to find the previous element that is a fragment\n\t * anchor. This is necessary because a destroyed frag's\n\t * element could still be lingering in the DOM before its\n\t * leaving transition finishes, but its inserted flag\n\t * should have been set to false so we can skip them.\n\t *\n\t * If this is a block repeat, we want to make sure we only\n\t * return frag that is bound to this v-for. (see #929)\n\t *\n\t * @param {Fragment} frag\n\t * @param {Comment|Text} anchor\n\t * @param {String} id\n\t * @return {Fragment}\n\t */\n\t\n\tfunction findPrevFrag(frag, anchor, id) {\n\t  var el = frag.node.previousSibling;\n\t  /* istanbul ignore if */\n\t  if (!el) return;\n\t  frag = el.__v_frag;\n\t  while ((!frag || frag.forId !== id || !frag.inserted) && el !== anchor) {\n\t    el = el.previousSibling;\n\t    /* istanbul ignore if */\n\t    if (!el) return;\n\t    frag = el.__v_frag;\n\t  }\n\t  return frag;\n\t}\n\t\n\t/**\n\t * Find a vm from a fragment.\n\t *\n\t * @param {Fragment} frag\n\t * @return {Vue|undefined}\n\t */\n\t\n\tfunction findVmFromFrag(frag) {\n\t  var node = frag.node;\n\t  // handle multi-node frag\n\t  if (frag.end) {\n\t    while (!node.__vue__ && node !== frag.end && node.nextSibling) {\n\t      node = node.nextSibling;\n\t    }\n\t  }\n\t  return node.__vue__;\n\t}\n\t\n\t/**\n\t * Create a range array from given number.\n\t *\n\t * @param {Number} n\n\t * @return {Array}\n\t */\n\t\n\tfunction range(n) {\n\t  var i = -1;\n\t  var ret = new Array(Math.floor(n));\n\t  while (++i < n) {\n\t    ret[i] = i;\n\t  }\n\t  return ret;\n\t}\n\t\n\t/**\n\t * Get the track by key for an item.\n\t *\n\t * @param {Number} index\n\t * @param {String} key\n\t * @param {*} value\n\t * @param {String} [trackByKey]\n\t */\n\t\n\tfunction getTrackByKey(index, key, value, trackByKey) {\n\t  return trackByKey ? trackByKey === '$index' ? index : trackByKey.charAt(0).match(/\\w/) ? getPath(value, trackByKey) : value[trackByKey] : key || value;\n\t}\n\t\n\tif (false) {\n\t  vFor.warnDuplicate = function (value) {\n\t    warn('Duplicate value found in v-for=\"' + this.descriptor.raw + '\": ' + JSON.stringify(value) + '. Use track-by=\"$index\" if ' + 'you are expecting duplicate values.', this.vm);\n\t  };\n\t}\n\t\n\tvar vIf = {\n\t\n\t  priority: IF,\n\t  terminal: true,\n\t\n\t  bind: function bind() {\n\t    var el = this.el;\n\t    if (!el.__vue__) {\n\t      // check else block\n\t      var next = el.nextElementSibling;\n\t      if (next && getAttr(next, 'v-else') !== null) {\n\t        remove(next);\n\t        this.elseEl = next;\n\t      }\n\t      // check main block\n\t      this.anchor = createAnchor('v-if');\n\t      replace(el, this.anchor);\n\t    } else {\n\t      (\"production\") !== 'production' && warn('v-if=\"' + this.expression + '\" cannot be ' + 'used on an instance root element.', this.vm);\n\t      this.invalid = true;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    if (this.invalid) return;\n\t    if (value) {\n\t      if (!this.frag) {\n\t        this.insert();\n\t      }\n\t    } else {\n\t      this.remove();\n\t    }\n\t  },\n\t\n\t  insert: function insert() {\n\t    if (this.elseFrag) {\n\t      this.elseFrag.remove();\n\t      this.elseFrag = null;\n\t    }\n\t    // lazy init factory\n\t    if (!this.factory) {\n\t      this.factory = new FragmentFactory(this.vm, this.el);\n\t    }\n\t    this.frag = this.factory.create(this._host, this._scope, this._frag);\n\t    this.frag.before(this.anchor);\n\t  },\n\t\n\t  remove: function remove() {\n\t    if (this.frag) {\n\t      this.frag.remove();\n\t      this.frag = null;\n\t    }\n\t    if (this.elseEl && !this.elseFrag) {\n\t      if (!this.elseFactory) {\n\t        this.elseFactory = new FragmentFactory(this.elseEl._context || this.vm, this.elseEl);\n\t      }\n\t      this.elseFrag = this.elseFactory.create(this._host, this._scope, this._frag);\n\t      this.elseFrag.before(this.anchor);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.frag) {\n\t      this.frag.destroy();\n\t    }\n\t    if (this.elseFrag) {\n\t      this.elseFrag.destroy();\n\t    }\n\t  }\n\t};\n\t\n\tvar show = {\n\t\n\t  bind: function bind() {\n\t    // check else block\n\t    var next = this.el.nextElementSibling;\n\t    if (next && getAttr(next, 'v-else') !== null) {\n\t      this.elseEl = next;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.apply(this.el, value);\n\t    if (this.elseEl) {\n\t      this.apply(this.elseEl, !value);\n\t    }\n\t  },\n\t\n\t  apply: function apply(el, value) {\n\t    if (inDoc(el)) {\n\t      applyTransition(el, value ? 1 : -1, toggle, this.vm);\n\t    } else {\n\t      toggle();\n\t    }\n\t    function toggle() {\n\t      el.style.display = value ? '' : 'none';\n\t    }\n\t  }\n\t};\n\t\n\tvar text$2 = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t    var isRange = el.type === 'range';\n\t    var lazy = this.params.lazy;\n\t    var number = this.params.number;\n\t    var debounce = this.params.debounce;\n\t\n\t    // handle composition events.\n\t    //   http://blog.evanyou.me/2014/01/03/composition-event/\n\t    // skip this for Android because it handles composition\n\t    // events quite differently. Android doesn't trigger\n\t    // composition events for language input methods e.g.\n\t    // Chinese, but instead triggers them for spelling\n\t    // suggestions... (see Discussion/#162)\n\t    var composing = false;\n\t    if (!isAndroid && !isRange) {\n\t      this.on('compositionstart', function () {\n\t        composing = true;\n\t      });\n\t      this.on('compositionend', function () {\n\t        composing = false;\n\t        // in IE11 the \"compositionend\" event fires AFTER\n\t        // the \"input\" event, so the input handler is blocked\n\t        // at the end... have to call it here.\n\t        //\n\t        // #1327: in lazy mode this is unecessary.\n\t        if (!lazy) {\n\t          self.listener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // prevent messing with the input when user is typing,\n\t    // and force update on blur.\n\t    this.focused = false;\n\t    if (!isRange && !lazy) {\n\t      this.on('focus', function () {\n\t        self.focused = true;\n\t      });\n\t      this.on('blur', function () {\n\t        self.focused = false;\n\t        // do not sync value after fragment removal (#2017)\n\t        if (!self._frag || self._frag.inserted) {\n\t          self.rawListener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // Now attach the main listener\n\t    this.listener = this.rawListener = function () {\n\t      if (composing || !self._bound) {\n\t        return;\n\t      }\n\t      var val = number || isRange ? toNumber(el.value) : el.value;\n\t      self.set(val);\n\t      // force update on next tick to avoid lock & same value\n\t      // also only update when user is not typing\n\t      nextTick(function () {\n\t        if (self._bound && !self.focused) {\n\t          self.update(self._watcher.value);\n\t        }\n\t      });\n\t    };\n\t\n\t    // apply debounce\n\t    if (debounce) {\n\t      this.listener = _debounce(this.listener, debounce);\n\t    }\n\t\n\t    // Support jQuery events, since jQuery.trigger() doesn't\n\t    // trigger native events in some cases and some plugins\n\t    // rely on $.trigger()\n\t    //\n\t    // We want to make sure if a listener is attached using\n\t    // jQuery, it is also removed with jQuery, that's why\n\t    // we do the check for each directive instance and\n\t    // store that check result on itself. This also allows\n\t    // easier test coverage control by unsetting the global\n\t    // jQuery variable in tests.\n\t    this.hasjQuery = typeof jQuery === 'function';\n\t    if (this.hasjQuery) {\n\t      var method = jQuery.fn.on ? 'on' : 'bind';\n\t      jQuery(el)[method]('change', this.rawListener);\n\t      if (!lazy) {\n\t        jQuery(el)[method]('input', this.listener);\n\t      }\n\t    } else {\n\t      this.on('change', this.rawListener);\n\t      if (!lazy) {\n\t        this.on('input', this.listener);\n\t      }\n\t    }\n\t\n\t    // IE9 doesn't fire input event on backspace/del/cut\n\t    if (!lazy && isIE9) {\n\t      this.on('cut', function () {\n\t        nextTick(self.listener);\n\t      });\n\t      this.on('keyup', function (e) {\n\t        if (e.keyCode === 46 || e.keyCode === 8) {\n\t          self.listener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // set initial value if present\n\t    if (el.hasAttribute('value') || el.tagName === 'TEXTAREA' && el.value.trim()) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el.value = _toString(value);\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    var el = this.el;\n\t    if (this.hasjQuery) {\n\t      var method = jQuery.fn.off ? 'off' : 'unbind';\n\t      jQuery(el)[method]('change', this.listener);\n\t      jQuery(el)[method]('input', this.listener);\n\t    }\n\t  }\n\t};\n\t\n\tvar radio = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    this.getValue = function () {\n\t      // value overwrite via v-bind:value\n\t      if (el.hasOwnProperty('_value')) {\n\t        return el._value;\n\t      }\n\t      var val = el.value;\n\t      if (self.params.number) {\n\t        val = toNumber(val);\n\t      }\n\t      return val;\n\t    };\n\t\n\t    this.listener = function () {\n\t      self.set(self.getValue());\n\t    };\n\t    this.on('change', this.listener);\n\t\n\t    if (el.hasAttribute('checked')) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el.checked = looseEqual(value, this.getValue());\n\t  }\n\t};\n\t\n\tvar select = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    // method to force update DOM using latest value.\n\t    this.forceUpdate = function () {\n\t      if (self._watcher) {\n\t        self.update(self._watcher.get());\n\t      }\n\t    };\n\t\n\t    // check if this is a multiple select\n\t    var multiple = this.multiple = el.hasAttribute('multiple');\n\t\n\t    // attach listener\n\t    this.listener = function () {\n\t      var value = getValue(el, multiple);\n\t      value = self.params.number ? isArray(value) ? value.map(toNumber) : toNumber(value) : value;\n\t      self.set(value);\n\t    };\n\t    this.on('change', this.listener);\n\t\n\t    // if has initial value, set afterBind\n\t    var initValue = getValue(el, multiple, true);\n\t    if (multiple && initValue.length || !multiple && initValue !== null) {\n\t      this.afterBind = this.listener;\n\t    }\n\t\n\t    // All major browsers except Firefox resets\n\t    // selectedIndex with value -1 to 0 when the element\n\t    // is appended to a new parent, therefore we have to\n\t    // force a DOM update whenever that happens...\n\t    this.vm.$on('hook:attached', this.forceUpdate);\n\t  },\n\t\n\t  update: function update(value) {\n\t    var el = this.el;\n\t    el.selectedIndex = -1;\n\t    var multi = this.multiple && isArray(value);\n\t    var options = el.options;\n\t    var i = options.length;\n\t    var op, val;\n\t    while (i--) {\n\t      op = options[i];\n\t      val = op.hasOwnProperty('_value') ? op._value : op.value;\n\t      /* eslint-disable eqeqeq */\n\t      op.selected = multi ? indexOf$1(value, val) > -1 : looseEqual(value, val);\n\t      /* eslint-enable eqeqeq */\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    /* istanbul ignore next */\n\t    this.vm.$off('hook:attached', this.forceUpdate);\n\t  }\n\t};\n\t\n\t/**\n\t * Get select value\n\t *\n\t * @param {SelectElement} el\n\t * @param {Boolean} multi\n\t * @param {Boolean} init\n\t * @return {Array|*}\n\t */\n\t\n\tfunction getValue(el, multi, init) {\n\t  var res = multi ? [] : null;\n\t  var op, val, selected;\n\t  for (var i = 0, l = el.options.length; i < l; i++) {\n\t    op = el.options[i];\n\t    selected = init ? op.hasAttribute('selected') : op.selected;\n\t    if (selected) {\n\t      val = op.hasOwnProperty('_value') ? op._value : op.value;\n\t      if (multi) {\n\t        res.push(val);\n\t      } else {\n\t        return val;\n\t      }\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Native Array.indexOf uses strict equal, but in this\n\t * case we need to match string/numbers with custom equal.\n\t *\n\t * @param {Array} arr\n\t * @param {*} val\n\t */\n\t\n\tfunction indexOf$1(arr, val) {\n\t  var i = arr.length;\n\t  while (i--) {\n\t    if (looseEqual(arr[i], val)) {\n\t      return i;\n\t    }\n\t  }\n\t  return -1;\n\t}\n\t\n\tvar checkbox = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    this.getValue = function () {\n\t      return el.hasOwnProperty('_value') ? el._value : self.params.number ? toNumber(el.value) : el.value;\n\t    };\n\t\n\t    function getBooleanValue() {\n\t      var val = el.checked;\n\t      if (val && el.hasOwnProperty('_trueValue')) {\n\t        return el._trueValue;\n\t      }\n\t      if (!val && el.hasOwnProperty('_falseValue')) {\n\t        return el._falseValue;\n\t      }\n\t      return val;\n\t    }\n\t\n\t    this.listener = function () {\n\t      var model = self._watcher.value;\n\t      if (isArray(model)) {\n\t        var val = self.getValue();\n\t        if (el.checked) {\n\t          if (indexOf(model, val) < 0) {\n\t            model.push(val);\n\t          }\n\t        } else {\n\t          model.$remove(val);\n\t        }\n\t      } else {\n\t        self.set(getBooleanValue());\n\t      }\n\t    };\n\t\n\t    this.on('change', this.listener);\n\t    if (el.hasAttribute('checked')) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    var el = this.el;\n\t    if (isArray(value)) {\n\t      el.checked = indexOf(value, this.getValue()) > -1;\n\t    } else {\n\t      if (el.hasOwnProperty('_trueValue')) {\n\t        el.checked = looseEqual(value, el._trueValue);\n\t      } else {\n\t        el.checked = !!value;\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\tvar handlers = {\n\t  text: text$2,\n\t  radio: radio,\n\t  select: select,\n\t  checkbox: checkbox\n\t};\n\t\n\tvar model = {\n\t\n\t  priority: MODEL,\n\t  twoWay: true,\n\t  handlers: handlers,\n\t  params: ['lazy', 'number', 'debounce'],\n\t\n\t  /**\n\t   * Possible elements:\n\t   *   <select>\n\t   *   <textarea>\n\t   *   <input type=\"*\">\n\t   *     - text\n\t   *     - checkbox\n\t   *     - radio\n\t   *     - number\n\t   */\n\t\n\t  bind: function bind() {\n\t    // friendly warning...\n\t    this.checkFilters();\n\t    if (this.hasRead && !this.hasWrite) {\n\t      (\"production\") !== 'production' && warn('It seems you are using a read-only filter with ' + 'v-model=\"' + this.descriptor.raw + '\". ' + 'You might want to use a two-way filter to ensure correct behavior.', this.vm);\n\t    }\n\t    var el = this.el;\n\t    var tag = el.tagName;\n\t    var handler;\n\t    if (tag === 'INPUT') {\n\t      handler = handlers[el.type] || handlers.text;\n\t    } else if (tag === 'SELECT') {\n\t      handler = handlers.select;\n\t    } else if (tag === 'TEXTAREA') {\n\t      handler = handlers.text;\n\t    } else {\n\t      (\"production\") !== 'production' && warn('v-model does not support element type: ' + tag, this.vm);\n\t      return;\n\t    }\n\t    el.__v_model = this;\n\t    handler.bind.call(this);\n\t    this.update = handler.update;\n\t    this._unbind = handler.unbind;\n\t  },\n\t\n\t  /**\n\t   * Check read/write filter stats.\n\t   */\n\t\n\t  checkFilters: function checkFilters() {\n\t    var filters = this.filters;\n\t    if (!filters) return;\n\t    var i = filters.length;\n\t    while (i--) {\n\t      var filter = resolveAsset(this.vm.$options, 'filters', filters[i].name);\n\t      if (typeof filter === 'function' || filter.read) {\n\t        this.hasRead = true;\n\t      }\n\t      if (filter.write) {\n\t        this.hasWrite = true;\n\t      }\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.el.__v_model = null;\n\t    this._unbind && this._unbind();\n\t  }\n\t};\n\t\n\t// keyCode aliases\n\tvar keyCodes = {\n\t  esc: 27,\n\t  tab: 9,\n\t  enter: 13,\n\t  space: 32,\n\t  'delete': [8, 46],\n\t  up: 38,\n\t  left: 37,\n\t  right: 39,\n\t  down: 40\n\t};\n\t\n\tfunction keyFilter(handler, keys) {\n\t  var codes = keys.map(function (key) {\n\t    var charCode = key.charCodeAt(0);\n\t    if (charCode > 47 && charCode < 58) {\n\t      return parseInt(key, 10);\n\t    }\n\t    if (key.length === 1) {\n\t      charCode = key.toUpperCase().charCodeAt(0);\n\t      if (charCode > 64 && charCode < 91) {\n\t        return charCode;\n\t      }\n\t    }\n\t    return keyCodes[key];\n\t  });\n\t  codes = [].concat.apply([], codes);\n\t  return function keyHandler(e) {\n\t    if (codes.indexOf(e.keyCode) > -1) {\n\t      return handler.call(this, e);\n\t    }\n\t  };\n\t}\n\t\n\tfunction stopFilter(handler) {\n\t  return function stopHandler(e) {\n\t    e.stopPropagation();\n\t    return handler.call(this, e);\n\t  };\n\t}\n\t\n\tfunction preventFilter(handler) {\n\t  return function preventHandler(e) {\n\t    e.preventDefault();\n\t    return handler.call(this, e);\n\t  };\n\t}\n\t\n\tfunction selfFilter(handler) {\n\t  return function selfHandler(e) {\n\t    if (e.target === e.currentTarget) {\n\t      return handler.call(this, e);\n\t    }\n\t  };\n\t}\n\t\n\tvar on$1 = {\n\t\n\t  priority: ON,\n\t  acceptStatement: true,\n\t  keyCodes: keyCodes,\n\t\n\t  bind: function bind() {\n\t    // deal with iframes\n\t    if (this.el.tagName === 'IFRAME' && this.arg !== 'load') {\n\t      var self = this;\n\t      this.iframeBind = function () {\n\t        on(self.el.contentWindow, self.arg, self.handler, self.modifiers.capture);\n\t      };\n\t      this.on('load', this.iframeBind);\n\t    }\n\t  },\n\t\n\t  update: function update(handler) {\n\t    // stub a noop for v-on with no value,\n\t    // e.g. @mousedown.prevent\n\t    if (!this.descriptor.raw) {\n\t      handler = function () {};\n\t    }\n\t\n\t    if (typeof handler !== 'function') {\n\t      (\"production\") !== 'production' && warn('v-on:' + this.arg + '=\"' + this.expression + '\" expects a function value, ' + 'got ' + handler, this.vm);\n\t      return;\n\t    }\n\t\n\t    // apply modifiers\n\t    if (this.modifiers.stop) {\n\t      handler = stopFilter(handler);\n\t    }\n\t    if (this.modifiers.prevent) {\n\t      handler = preventFilter(handler);\n\t    }\n\t    if (this.modifiers.self) {\n\t      handler = selfFilter(handler);\n\t    }\n\t    // key filter\n\t    var keys = Object.keys(this.modifiers).filter(function (key) {\n\t      return key !== 'stop' && key !== 'prevent' && key !== 'self' && key !== 'capture';\n\t    });\n\t    if (keys.length) {\n\t      handler = keyFilter(handler, keys);\n\t    }\n\t\n\t    this.reset();\n\t    this.handler = handler;\n\t\n\t    if (this.iframeBind) {\n\t      this.iframeBind();\n\t    } else {\n\t      on(this.el, this.arg, this.handler, this.modifiers.capture);\n\t    }\n\t  },\n\t\n\t  reset: function reset() {\n\t    var el = this.iframeBind ? this.el.contentWindow : this.el;\n\t    if (this.handler) {\n\t      off(el, this.arg, this.handler);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.reset();\n\t  }\n\t};\n\t\n\tvar prefixes = ['-webkit-', '-moz-', '-ms-'];\n\tvar camelPrefixes = ['Webkit', 'Moz', 'ms'];\n\tvar importantRE = /!important;?$/;\n\tvar propCache = Object.create(null);\n\t\n\tvar testEl = null;\n\t\n\tvar style = {\n\t\n\t  deep: true,\n\t\n\t  update: function update(value) {\n\t    if (typeof value === 'string') {\n\t      this.el.style.cssText = value;\n\t    } else if (isArray(value)) {\n\t      this.handleObject(value.reduce(extend, {}));\n\t    } else {\n\t      this.handleObject(value || {});\n\t    }\n\t  },\n\t\n\t  handleObject: function handleObject(value) {\n\t    // cache object styles so that only changed props\n\t    // are actually updated.\n\t    var cache = this.cache || (this.cache = {});\n\t    var name, val;\n\t    for (name in cache) {\n\t      if (!(name in value)) {\n\t        this.handleSingle(name, null);\n\t        delete cache[name];\n\t      }\n\t    }\n\t    for (name in value) {\n\t      val = value[name];\n\t      if (val !== cache[name]) {\n\t        cache[name] = val;\n\t        this.handleSingle(name, val);\n\t      }\n\t    }\n\t  },\n\t\n\t  handleSingle: function handleSingle(prop, value) {\n\t    prop = normalize(prop);\n\t    if (!prop) return; // unsupported prop\n\t    // cast possible numbers/booleans into strings\n\t    if (value != null) value += '';\n\t    if (value) {\n\t      var isImportant = importantRE.test(value) ? 'important' : '';\n\t      if (isImportant) {\n\t        /* istanbul ignore if */\n\t        if (false) {\n\t          warn('It\\'s probably a bad idea to use !important with inline rules. ' + 'This feature will be deprecated in a future version of Vue.');\n\t        }\n\t        value = value.replace(importantRE, '').trim();\n\t        this.el.style.setProperty(prop.kebab, value, isImportant);\n\t      } else {\n\t        this.el.style[prop.camel] = value;\n\t      }\n\t    } else {\n\t      this.el.style[prop.camel] = '';\n\t    }\n\t  }\n\t\n\t};\n\t\n\t/**\n\t * Normalize a CSS property name.\n\t * - cache result\n\t * - auto prefix\n\t * - camelCase -> dash-case\n\t *\n\t * @param {String} prop\n\t * @return {String}\n\t */\n\t\n\tfunction normalize(prop) {\n\t  if (propCache[prop]) {\n\t    return propCache[prop];\n\t  }\n\t  var res = prefix(prop);\n\t  propCache[prop] = propCache[res] = res;\n\t  return res;\n\t}\n\t\n\t/**\n\t * Auto detect the appropriate prefix for a CSS property.\n\t * https://gist.github.com/paulirish/523692\n\t *\n\t * @param {String} prop\n\t * @return {String}\n\t */\n\t\n\tfunction prefix(prop) {\n\t  prop = hyphenate(prop);\n\t  var camel = camelize(prop);\n\t  var upper = camel.charAt(0).toUpperCase() + camel.slice(1);\n\t  if (!testEl) {\n\t    testEl = document.createElement('div');\n\t  }\n\t  var i = prefixes.length;\n\t  var prefixed;\n\t  if (camel !== 'filter' && camel in testEl.style) {\n\t    return {\n\t      kebab: prop,\n\t      camel: camel\n\t    };\n\t  }\n\t  while (i--) {\n\t    prefixed = camelPrefixes[i] + upper;\n\t    if (prefixed in testEl.style) {\n\t      return {\n\t        kebab: prefixes[i] + prop,\n\t        camel: prefixed\n\t      };\n\t    }\n\t  }\n\t}\n\t\n\t// xlink\n\tvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\tvar xlinkRE = /^xlink:/;\n\t\n\t// check for attributes that prohibit interpolations\n\tvar disallowedInterpAttrRE = /^v-|^:|^@|^(?:is|transition|transition-mode|debounce|track-by|stagger|enter-stagger|leave-stagger)$/;\n\t// these attributes should also set their corresponding properties\n\t// because they only affect the initial state of the element\n\tvar attrWithPropsRE = /^(?:value|checked|selected|muted)$/;\n\t// these attributes expect enumrated values of \"true\" or \"false\"\n\t// but are not boolean attributes\n\tvar enumeratedAttrRE = /^(?:draggable|contenteditable|spellcheck)$/;\n\t\n\t// these attributes should set a hidden property for\n\t// binding v-model to object values\n\tvar modelProps = {\n\t  value: '_value',\n\t  'true-value': '_trueValue',\n\t  'false-value': '_falseValue'\n\t};\n\t\n\tvar bind$1 = {\n\t\n\t  priority: BIND,\n\t\n\t  bind: function bind() {\n\t    var attr = this.arg;\n\t    var tag = this.el.tagName;\n\t    // should be deep watch on object mode\n\t    if (!attr) {\n\t      this.deep = true;\n\t    }\n\t    // handle interpolation bindings\n\t    var descriptor = this.descriptor;\n\t    var tokens = descriptor.interp;\n\t    if (tokens) {\n\t      // handle interpolations with one-time tokens\n\t      if (descriptor.hasOneTime) {\n\t        this.expression = tokensToExp(tokens, this._scope || this.vm);\n\t      }\n\t\n\t      // only allow binding on native attributes\n\t      if (disallowedInterpAttrRE.test(attr) || attr === 'name' && (tag === 'PARTIAL' || tag === 'SLOT')) {\n\t        (\"production\") !== 'production' && warn(attr + '=\"' + descriptor.raw + '\": ' + 'attribute interpolation is not allowed in Vue.js ' + 'directives and special attributes.', this.vm);\n\t        this.el.removeAttribute(attr);\n\t        this.invalid = true;\n\t      }\n\t\n\t      /* istanbul ignore if */\n\t      if (false) {\n\t        var raw = attr + '=\"' + descriptor.raw + '\": ';\n\t        // warn src\n\t        if (attr === 'src') {\n\t          warn(raw + 'interpolation in \"src\" attribute will cause ' + 'a 404 request. Use v-bind:src instead.', this.vm);\n\t        }\n\t\n\t        // warn style\n\t        if (attr === 'style') {\n\t          warn(raw + 'interpolation in \"style\" attribute will cause ' + 'the attribute to be discarded in Internet Explorer. ' + 'Use v-bind:style instead.', this.vm);\n\t        }\n\t      }\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    if (this.invalid) {\n\t      return;\n\t    }\n\t    var attr = this.arg;\n\t    if (this.arg) {\n\t      this.handleSingle(attr, value);\n\t    } else {\n\t      this.handleObject(value || {});\n\t    }\n\t  },\n\t\n\t  // share object handler with v-bind:class\n\t  handleObject: style.handleObject,\n\t\n\t  handleSingle: function handleSingle(attr, value) {\n\t    var el = this.el;\n\t    var interp = this.descriptor.interp;\n\t    if (this.modifiers.camel) {\n\t      attr = camelize(attr);\n\t    }\n\t    if (!interp && attrWithPropsRE.test(attr) && attr in el) {\n\t      var attrValue = attr === 'value' ? value == null // IE9 will set input.value to \"null\" for null...\n\t      ? '' : value : value;\n\t\n\t      if (el[attr] !== attrValue) {\n\t        el[attr] = attrValue;\n\t      }\n\t    }\n\t    // set model props\n\t    var modelProp = modelProps[attr];\n\t    if (!interp && modelProp) {\n\t      el[modelProp] = value;\n\t      // update v-model if present\n\t      var model = el.__v_model;\n\t      if (model) {\n\t        model.listener();\n\t      }\n\t    }\n\t    // do not set value attribute for textarea\n\t    if (attr === 'value' && el.tagName === 'TEXTAREA') {\n\t      el.removeAttribute(attr);\n\t      return;\n\t    }\n\t    // update attribute\n\t    if (enumeratedAttrRE.test(attr)) {\n\t      el.setAttribute(attr, value ? 'true' : 'false');\n\t    } else if (value != null && value !== false) {\n\t      if (attr === 'class') {\n\t        // handle edge case #1960:\n\t        // class interpolation should not overwrite Vue transition class\n\t        if (el.__v_trans) {\n\t          value += ' ' + el.__v_trans.id + '-transition';\n\t        }\n\t        setClass(el, value);\n\t      } else if (xlinkRE.test(attr)) {\n\t        el.setAttributeNS(xlinkNS, attr, value === true ? '' : value);\n\t      } else {\n\t        el.setAttribute(attr, value === true ? '' : value);\n\t      }\n\t    } else {\n\t      el.removeAttribute(attr);\n\t    }\n\t  }\n\t};\n\t\n\tvar el = {\n\t\n\t  priority: EL,\n\t\n\t  bind: function bind() {\n\t    /* istanbul ignore if */\n\t    if (!this.arg) {\n\t      return;\n\t    }\n\t    var id = this.id = camelize(this.arg);\n\t    var refs = (this._scope || this.vm).$els;\n\t    if (hasOwn(refs, id)) {\n\t      refs[id] = this.el;\n\t    } else {\n\t      defineReactive(refs, id, this.el);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    var refs = (this._scope || this.vm).$els;\n\t    if (refs[this.id] === this.el) {\n\t      refs[this.id] = null;\n\t    }\n\t  }\n\t};\n\t\n\tvar ref = {\n\t  bind: function bind() {\n\t    (\"production\") !== 'production' && warn('v-ref:' + this.arg + ' must be used on a child ' + 'component. Found on <' + this.el.tagName.toLowerCase() + '>.', this.vm);\n\t  }\n\t};\n\t\n\tvar cloak = {\n\t  bind: function bind() {\n\t    var el = this.el;\n\t    this.vm.$once('pre-hook:compiled', function () {\n\t      el.removeAttribute('v-cloak');\n\t    });\n\t  }\n\t};\n\t\n\t// must export plain object\n\tvar directives = {\n\t  text: text$1,\n\t  html: html,\n\t  'for': vFor,\n\t  'if': vIf,\n\t  show: show,\n\t  model: model,\n\t  on: on$1,\n\t  bind: bind$1,\n\t  el: el,\n\t  ref: ref,\n\t  cloak: cloak\n\t};\n\t\n\tvar vClass = {\n\t\n\t  deep: true,\n\t\n\t  update: function update(value) {\n\t    if (!value) {\n\t      this.cleanup();\n\t    } else if (typeof value === 'string') {\n\t      this.setClass(value.trim().split(/\\s+/));\n\t    } else {\n\t      this.setClass(normalize$1(value));\n\t    }\n\t  },\n\t\n\t  setClass: function setClass(value) {\n\t    this.cleanup(value);\n\t    for (var i = 0, l = value.length; i < l; i++) {\n\t      var val = value[i];\n\t      if (val) {\n\t        apply(this.el, val, addClass);\n\t      }\n\t    }\n\t    this.prevKeys = value;\n\t  },\n\t\n\t  cleanup: function cleanup(value) {\n\t    var prevKeys = this.prevKeys;\n\t    if (!prevKeys) return;\n\t    var i = prevKeys.length;\n\t    while (i--) {\n\t      var key = prevKeys[i];\n\t      if (!value || value.indexOf(key) < 0) {\n\t        apply(this.el, key, removeClass);\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Normalize objects and arrays (potentially containing objects)\n\t * into array of strings.\n\t *\n\t * @param {Object|Array<String|Object>} value\n\t * @return {Array<String>}\n\t */\n\t\n\tfunction normalize$1(value) {\n\t  var res = [];\n\t  if (isArray(value)) {\n\t    for (var i = 0, l = value.length; i < l; i++) {\n\t      var _key = value[i];\n\t      if (_key) {\n\t        if (typeof _key === 'string') {\n\t          res.push(_key);\n\t        } else {\n\t          for (var k in _key) {\n\t            if (_key[k]) res.push(k);\n\t          }\n\t        }\n\t      }\n\t    }\n\t  } else if (isObject(value)) {\n\t    for (var key in value) {\n\t      if (value[key]) res.push(key);\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Add or remove a class/classes on an element\n\t *\n\t * @param {Element} el\n\t * @param {String} key The class name. This may or may not\n\t *                     contain a space character, in such a\n\t *                     case we'll deal with multiple class\n\t *                     names at once.\n\t * @param {Function} fn\n\t */\n\t\n\tfunction apply(el, key, fn) {\n\t  key = key.trim();\n\t  if (key.indexOf(' ') === -1) {\n\t    fn(el, key);\n\t    return;\n\t  }\n\t  // The key contains one or more space characters.\n\t  // Since a class name doesn't accept such characters, we\n\t  // treat it as multiple classes.\n\t  var keys = key.split(/\\s+/);\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    fn(el, keys[i]);\n\t  }\n\t}\n\t\n\tvar component = {\n\t\n\t  priority: COMPONENT,\n\t\n\t  params: ['keep-alive', 'transition-mode', 'inline-template'],\n\t\n\t  /**\n\t   * Setup. Two possible usages:\n\t   *\n\t   * - static:\n\t   *   <comp> or <div v-component=\"comp\">\n\t   *\n\t   * - dynamic:\n\t   *   <component :is=\"view\">\n\t   */\n\t\n\t  bind: function bind() {\n\t    if (!this.el.__vue__) {\n\t      // keep-alive cache\n\t      this.keepAlive = this.params.keepAlive;\n\t      if (this.keepAlive) {\n\t        this.cache = {};\n\t      }\n\t      // check inline-template\n\t      if (this.params.inlineTemplate) {\n\t        // extract inline template as a DocumentFragment\n\t        this.inlineTemplate = extractContent(this.el, true);\n\t      }\n\t      // component resolution related state\n\t      this.pendingComponentCb = this.Component = null;\n\t      // transition related state\n\t      this.pendingRemovals = 0;\n\t      this.pendingRemovalCb = null;\n\t      // create a ref anchor\n\t      this.anchor = createAnchor('v-component');\n\t      replace(this.el, this.anchor);\n\t      // remove is attribute.\n\t      // this is removed during compilation, but because compilation is\n\t      // cached, when the component is used elsewhere this attribute\n\t      // will remain at link time.\n\t      this.el.removeAttribute('is');\n\t      this.el.removeAttribute(':is');\n\t      // remove ref, same as above\n\t      if (this.descriptor.ref) {\n\t        this.el.removeAttribute('v-ref:' + hyphenate(this.descriptor.ref));\n\t      }\n\t      // if static, build right now.\n\t      if (this.literal) {\n\t        this.setComponent(this.expression);\n\t      }\n\t    } else {\n\t      (\"production\") !== 'production' && warn('cannot mount component \"' + this.expression + '\" ' + 'on already mounted element: ' + this.el);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Public update, called by the watcher in the dynamic\n\t   * literal scenario, e.g. <component :is=\"view\">\n\t   */\n\t\n\t  update: function update(value) {\n\t    if (!this.literal) {\n\t      this.setComponent(value);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Switch dynamic components. May resolve the component\n\t   * asynchronously, and perform transition based on\n\t   * specified transition mode. Accepts a few additional\n\t   * arguments specifically for vue-router.\n\t   *\n\t   * The callback is called when the full transition is\n\t   * finished.\n\t   *\n\t   * @param {String} value\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  setComponent: function setComponent(value, cb) {\n\t    this.invalidatePending();\n\t    if (!value) {\n\t      // just remove current\n\t      this.unbuild(true);\n\t      this.remove(this.childVM, cb);\n\t      this.childVM = null;\n\t    } else {\n\t      var self = this;\n\t      this.resolveComponent(value, function () {\n\t        self.mountComponent(cb);\n\t      });\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Resolve the component constructor to use when creating\n\t   * the child vm.\n\t   *\n\t   * @param {String|Function} value\n\t   * @param {Function} cb\n\t   */\n\t\n\t  resolveComponent: function resolveComponent(value, cb) {\n\t    var self = this;\n\t    this.pendingComponentCb = cancellable(function (Component) {\n\t      self.ComponentName = Component.options.name || (typeof value === 'string' ? value : null);\n\t      self.Component = Component;\n\t      cb();\n\t    });\n\t    this.vm._resolveComponent(value, this.pendingComponentCb);\n\t  },\n\t\n\t  /**\n\t   * Create a new instance using the current constructor and\n\t   * replace the existing instance. This method doesn't care\n\t   * whether the new component and the old one are actually\n\t   * the same.\n\t   *\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  mountComponent: function mountComponent(cb) {\n\t    // actual mount\n\t    this.unbuild(true);\n\t    var self = this;\n\t    var activateHooks = this.Component.options.activate;\n\t    var cached = this.getCached();\n\t    var newComponent = this.build();\n\t    if (activateHooks && !cached) {\n\t      this.waitingFor = newComponent;\n\t      callActivateHooks(activateHooks, newComponent, function () {\n\t        if (self.waitingFor !== newComponent) {\n\t          return;\n\t        }\n\t        self.waitingFor = null;\n\t        self.transition(newComponent, cb);\n\t      });\n\t    } else {\n\t      // update ref for kept-alive component\n\t      if (cached) {\n\t        newComponent._updateRef();\n\t      }\n\t      this.transition(newComponent, cb);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * When the component changes or unbinds before an async\n\t   * constructor is resolved, we need to invalidate its\n\t   * pending callback.\n\t   */\n\t\n\t  invalidatePending: function invalidatePending() {\n\t    if (this.pendingComponentCb) {\n\t      this.pendingComponentCb.cancel();\n\t      this.pendingComponentCb = null;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Instantiate/insert a new child vm.\n\t   * If keep alive and has cached instance, insert that\n\t   * instance; otherwise build a new one and cache it.\n\t   *\n\t   * @param {Object} [extraOptions]\n\t   * @return {Vue} - the created instance\n\t   */\n\t\n\t  build: function build(extraOptions) {\n\t    var cached = this.getCached();\n\t    if (cached) {\n\t      return cached;\n\t    }\n\t    if (this.Component) {\n\t      // default options\n\t      var options = {\n\t        name: this.ComponentName,\n\t        el: cloneNode(this.el),\n\t        template: this.inlineTemplate,\n\t        // make sure to add the child with correct parent\n\t        // if this is a transcluded component, its parent\n\t        // should be the transclusion host.\n\t        parent: this._host || this.vm,\n\t        // if no inline-template, then the compiled\n\t        // linker can be cached for better performance.\n\t        _linkerCachable: !this.inlineTemplate,\n\t        _ref: this.descriptor.ref,\n\t        _asComponent: true,\n\t        _isRouterView: this._isRouterView,\n\t        // if this is a transcluded component, context\n\t        // will be the common parent vm of this instance\n\t        // and its host.\n\t        _context: this.vm,\n\t        // if this is inside an inline v-for, the scope\n\t        // will be the intermediate scope created for this\n\t        // repeat fragment. this is used for linking props\n\t        // and container directives.\n\t        _scope: this._scope,\n\t        // pass in the owner fragment of this component.\n\t        // this is necessary so that the fragment can keep\n\t        // track of its contained components in order to\n\t        // call attach/detach hooks for them.\n\t        _frag: this._frag\n\t      };\n\t      // extra options\n\t      // in 1.0.0 this is used by vue-router only\n\t      /* istanbul ignore if */\n\t      if (extraOptions) {\n\t        extend(options, extraOptions);\n\t      }\n\t      var child = new this.Component(options);\n\t      if (this.keepAlive) {\n\t        this.cache[this.Component.cid] = child;\n\t      }\n\t      /* istanbul ignore if */\n\t      if (false) {\n\t        warn('Transitions will not work on a fragment instance. ' + 'Template: ' + child.$options.template, child);\n\t      }\n\t      return child;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Try to get a cached instance of the current component.\n\t   *\n\t   * @return {Vue|undefined}\n\t   */\n\t\n\t  getCached: function getCached() {\n\t    return this.keepAlive && this.cache[this.Component.cid];\n\t  },\n\t\n\t  /**\n\t   * Teardown the current child, but defers cleanup so\n\t   * that we can separate the destroy and removal steps.\n\t   *\n\t   * @param {Boolean} defer\n\t   */\n\t\n\t  unbuild: function unbuild(defer) {\n\t    if (this.waitingFor) {\n\t      if (!this.keepAlive) {\n\t        this.waitingFor.$destroy();\n\t      }\n\t      this.waitingFor = null;\n\t    }\n\t    var child = this.childVM;\n\t    if (!child || this.keepAlive) {\n\t      if (child) {\n\t        // remove ref\n\t        child._inactive = true;\n\t        child._updateRef(true);\n\t      }\n\t      return;\n\t    }\n\t    // the sole purpose of `deferCleanup` is so that we can\n\t    // \"deactivate\" the vm right now and perform DOM removal\n\t    // later.\n\t    child.$destroy(false, defer);\n\t  },\n\t\n\t  /**\n\t   * Remove current destroyed child and manually do\n\t   * the cleanup after removal.\n\t   *\n\t   * @param {Function} cb\n\t   */\n\t\n\t  remove: function remove(child, cb) {\n\t    var keepAlive = this.keepAlive;\n\t    if (child) {\n\t      // we may have a component switch when a previous\n\t      // component is still being transitioned out.\n\t      // we want to trigger only one lastest insertion cb\n\t      // when the existing transition finishes. (#1119)\n\t      this.pendingRemovals++;\n\t      this.pendingRemovalCb = cb;\n\t      var self = this;\n\t      child.$remove(function () {\n\t        self.pendingRemovals--;\n\t        if (!keepAlive) child._cleanup();\n\t        if (!self.pendingRemovals && self.pendingRemovalCb) {\n\t          self.pendingRemovalCb();\n\t          self.pendingRemovalCb = null;\n\t        }\n\t      });\n\t    } else if (cb) {\n\t      cb();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Actually swap the components, depending on the\n\t   * transition mode. Defaults to simultaneous.\n\t   *\n\t   * @param {Vue} target\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  transition: function transition(target, cb) {\n\t    var self = this;\n\t    var current = this.childVM;\n\t    // for devtool inspection\n\t    if (current) current._inactive = true;\n\t    target._inactive = false;\n\t    this.childVM = target;\n\t    switch (self.params.transitionMode) {\n\t      case 'in-out':\n\t        target.$before(self.anchor, function () {\n\t          self.remove(current, cb);\n\t        });\n\t        break;\n\t      case 'out-in':\n\t        self.remove(current, function () {\n\t          target.$before(self.anchor, cb);\n\t        });\n\t        break;\n\t      default:\n\t        self.remove(current);\n\t        target.$before(self.anchor, cb);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Unbind.\n\t   */\n\t\n\t  unbind: function unbind() {\n\t    this.invalidatePending();\n\t    // Do not defer cleanup when unbinding\n\t    this.unbuild();\n\t    // destroy all keep-alive cached instances\n\t    if (this.cache) {\n\t      for (var key in this.cache) {\n\t        this.cache[key].$destroy();\n\t      }\n\t      this.cache = null;\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Call activate hooks in order (asynchronous)\n\t *\n\t * @param {Array} hooks\n\t * @param {Vue} vm\n\t * @param {Function} cb\n\t */\n\t\n\tfunction callActivateHooks(hooks, vm, cb) {\n\t  var total = hooks.length;\n\t  var called = 0;\n\t  hooks[0].call(vm, next);\n\t  function next() {\n\t    if (++called >= total) {\n\t      cb();\n\t    } else {\n\t      hooks[called].call(vm, next);\n\t    }\n\t  }\n\t}\n\t\n\tvar propBindingModes = config._propBindingModes;\n\tvar empty = {};\n\t\n\t// regexes\n\tvar identRE$1 = /^[$_a-zA-Z]+[\\w$]*$/;\n\tvar settablePathRE = /^[A-Za-z_$][\\w$]*(\\.[A-Za-z_$][\\w$]*|\\[[^\\[\\]]+\\])*$/;\n\t\n\t/**\n\t * Compile props on a root element and return\n\t * a props link function.\n\t *\n\t * @param {Element|DocumentFragment} el\n\t * @param {Array} propOptions\n\t * @param {Vue} vm\n\t * @return {Function} propsLinkFn\n\t */\n\t\n\tfunction compileProps(el, propOptions, vm) {\n\t  var props = [];\n\t  var names = Object.keys(propOptions);\n\t  var i = names.length;\n\t  var options, name, attr, value, path, parsed, prop;\n\t  while (i--) {\n\t    name = names[i];\n\t    options = propOptions[name] || empty;\n\t\n\t    if (false) {\n\t      warn('Do not use $data as prop.', vm);\n\t      continue;\n\t    }\n\t\n\t    // props could contain dashes, which will be\n\t    // interpreted as minus calculations by the parser\n\t    // so we need to camelize the path here\n\t    path = camelize(name);\n\t    if (!identRE$1.test(path)) {\n\t      (\"production\") !== 'production' && warn('Invalid prop key: \"' + name + '\". Prop keys ' + 'must be valid identifiers.', vm);\n\t      continue;\n\t    }\n\t\n\t    prop = {\n\t      name: name,\n\t      path: path,\n\t      options: options,\n\t      mode: propBindingModes.ONE_WAY,\n\t      raw: null\n\t    };\n\t\n\t    attr = hyphenate(name);\n\t    // first check dynamic version\n\t    if ((value = getBindAttr(el, attr)) === null) {\n\t      if ((value = getBindAttr(el, attr + '.sync')) !== null) {\n\t        prop.mode = propBindingModes.TWO_WAY;\n\t      } else if ((value = getBindAttr(el, attr + '.once')) !== null) {\n\t        prop.mode = propBindingModes.ONE_TIME;\n\t      }\n\t    }\n\t    if (value !== null) {\n\t      // has dynamic binding!\n\t      prop.raw = value;\n\t      parsed = parseDirective(value);\n\t      value = parsed.expression;\n\t      prop.filters = parsed.filters;\n\t      // check binding type\n\t      if (isLiteral(value) && !parsed.filters) {\n\t        // for expressions containing literal numbers and\n\t        // booleans, there's no need to setup a prop binding,\n\t        // so we can optimize them as a one-time set.\n\t        prop.optimizedLiteral = true;\n\t      } else {\n\t        prop.dynamic = true;\n\t        // check non-settable path for two-way bindings\n\t        if (false) {\n\t          prop.mode = propBindingModes.ONE_WAY;\n\t          warn('Cannot bind two-way prop with non-settable ' + 'parent path: ' + value, vm);\n\t        }\n\t      }\n\t      prop.parentPath = value;\n\t\n\t      // warn required two-way\n\t      if (false) {\n\t        warn('Prop \"' + name + '\" expects a two-way binding type.', vm);\n\t      }\n\t    } else if ((value = getAttr(el, attr)) !== null) {\n\t      // has literal binding!\n\t      prop.raw = value;\n\t    } else if (false) {\n\t      // check possible camelCase prop usage\n\t      var lowerCaseName = path.toLowerCase();\n\t      value = /[A-Z\\-]/.test(name) && (el.getAttribute(lowerCaseName) || el.getAttribute(':' + lowerCaseName) || el.getAttribute('v-bind:' + lowerCaseName) || el.getAttribute(':' + lowerCaseName + '.once') || el.getAttribute('v-bind:' + lowerCaseName + '.once') || el.getAttribute(':' + lowerCaseName + '.sync') || el.getAttribute('v-bind:' + lowerCaseName + '.sync'));\n\t      if (value) {\n\t        warn('Possible usage error for prop `' + lowerCaseName + '` - ' + 'did you mean `' + attr + '`? HTML is case-insensitive, remember to use ' + 'kebab-case for props in templates.', vm);\n\t      } else if (options.required) {\n\t        // warn missing required\n\t        warn('Missing required prop: ' + name, vm);\n\t      }\n\t    }\n\t    // push prop\n\t    props.push(prop);\n\t  }\n\t  return makePropsLinkFn(props);\n\t}\n\t\n\t/**\n\t * Build a function that applies props to a vm.\n\t *\n\t * @param {Array} props\n\t * @return {Function} propsLinkFn\n\t */\n\t\n\tfunction makePropsLinkFn(props) {\n\t  return function propsLinkFn(vm, scope) {\n\t    // store resolved props info\n\t    vm._props = {};\n\t    var inlineProps = vm.$options.propsData;\n\t    var i = props.length;\n\t    var prop, path, options, value, raw;\n\t    while (i--) {\n\t      prop = props[i];\n\t      raw = prop.raw;\n\t      path = prop.path;\n\t      options = prop.options;\n\t      vm._props[path] = prop;\n\t      if (inlineProps && hasOwn(inlineProps, path)) {\n\t        initProp(vm, prop, inlineProps[path]);\n\t      }if (raw === null) {\n\t        // initialize absent prop\n\t        initProp(vm, prop, undefined);\n\t      } else if (prop.dynamic) {\n\t        // dynamic prop\n\t        if (prop.mode === propBindingModes.ONE_TIME) {\n\t          // one time binding\n\t          value = (scope || vm._context || vm).$get(prop.parentPath);\n\t          initProp(vm, prop, value);\n\t        } else {\n\t          if (vm._context) {\n\t            // dynamic binding\n\t            vm._bindDir({\n\t              name: 'prop',\n\t              def: propDef,\n\t              prop: prop\n\t            }, null, null, scope); // el, host, scope\n\t          } else {\n\t              // root instance\n\t              initProp(vm, prop, vm.$get(prop.parentPath));\n\t            }\n\t        }\n\t      } else if (prop.optimizedLiteral) {\n\t        // optimized literal, cast it and just set once\n\t        var stripped = stripQuotes(raw);\n\t        value = stripped === raw ? toBoolean(toNumber(raw)) : stripped;\n\t        initProp(vm, prop, value);\n\t      } else {\n\t        // string literal, but we need to cater for\n\t        // Boolean props with no value, or with same\n\t        // literal value (e.g. disabled=\"disabled\")\n\t        // see https://github.com/vuejs/vue-loader/issues/182\n\t        value = options.type === Boolean && (raw === '' || raw === hyphenate(prop.name)) ? true : raw;\n\t        initProp(vm, prop, value);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Process a prop with a rawValue, applying necessary coersions,\n\t * default values & assertions and call the given callback with\n\t * processed value.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @param {*} rawValue\n\t * @param {Function} fn\n\t */\n\t\n\tfunction processPropValue(vm, prop, rawValue, fn) {\n\t  var isSimple = prop.dynamic && isSimplePath(prop.parentPath);\n\t  var value = rawValue;\n\t  if (value === undefined) {\n\t    value = getPropDefaultValue(vm, prop);\n\t  }\n\t  value = coerceProp(prop, value);\n\t  var coerced = value !== rawValue;\n\t  if (!assertProp(prop, value, vm)) {\n\t    value = undefined;\n\t  }\n\t  if (isSimple && !coerced) {\n\t    withoutConversion(function () {\n\t      fn(value);\n\t    });\n\t  } else {\n\t    fn(value);\n\t  }\n\t}\n\t\n\t/**\n\t * Set a prop's initial value on a vm and its data object.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @param {*} value\n\t */\n\t\n\tfunction initProp(vm, prop, value) {\n\t  processPropValue(vm, prop, value, function (value) {\n\t    defineReactive(vm, prop.path, value);\n\t  });\n\t}\n\t\n\t/**\n\t * Update a prop's value on a vm.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @param {*} value\n\t */\n\t\n\tfunction updateProp(vm, prop, value) {\n\t  processPropValue(vm, prop, value, function (value) {\n\t    vm[prop.path] = value;\n\t  });\n\t}\n\t\n\t/**\n\t * Get the default value of a prop.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @return {*}\n\t */\n\t\n\tfunction getPropDefaultValue(vm, prop) {\n\t  // no default, return undefined\n\t  var options = prop.options;\n\t  if (!hasOwn(options, 'default')) {\n\t    // absent boolean value defaults to false\n\t    return options.type === Boolean ? false : undefined;\n\t  }\n\t  var def = options['default'];\n\t  // warn against non-factory defaults for Object & Array\n\t  if (isObject(def)) {\n\t    (\"production\") !== 'production' && warn('Invalid default value for prop \"' + prop.name + '\": ' + 'Props with type Object/Array must use a factory function ' + 'to return the default value.', vm);\n\t  }\n\t  // call factory function for non-Function types\n\t  return typeof def === 'function' && options.type !== Function ? def.call(vm) : def;\n\t}\n\t\n\t/**\n\t * Assert whether a prop is valid.\n\t *\n\t * @param {Object} prop\n\t * @param {*} value\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction assertProp(prop, value, vm) {\n\t  if (!prop.options.required && ( // non-required\n\t  prop.raw === null || // abscent\n\t  value == null) // null or undefined\n\t  ) {\n\t      return true;\n\t    }\n\t  var options = prop.options;\n\t  var type = options.type;\n\t  var valid = !type;\n\t  var expectedTypes = [];\n\t  if (type) {\n\t    if (!isArray(type)) {\n\t      type = [type];\n\t    }\n\t    for (var i = 0; i < type.length && !valid; i++) {\n\t      var assertedType = assertType(value, type[i]);\n\t      expectedTypes.push(assertedType.expectedType);\n\t      valid = assertedType.valid;\n\t    }\n\t  }\n\t  if (!valid) {\n\t    if (false) {\n\t      warn('Invalid prop: type check failed for prop \"' + prop.name + '\".' + ' Expected ' + expectedTypes.map(formatType).join(', ') + ', got ' + formatValue(value) + '.', vm);\n\t    }\n\t    return false;\n\t  }\n\t  var validator = options.validator;\n\t  if (validator) {\n\t    if (!validator(value)) {\n\t      (\"production\") !== 'production' && warn('Invalid prop: custom validator check failed for prop \"' + prop.name + '\".', vm);\n\t      return false;\n\t    }\n\t  }\n\t  return true;\n\t}\n\t\n\t/**\n\t * Force parsing value with coerce option.\n\t *\n\t * @param {*} value\n\t * @param {Object} options\n\t * @return {*}\n\t */\n\t\n\tfunction coerceProp(prop, value) {\n\t  var coerce = prop.options.coerce;\n\t  if (!coerce) {\n\t    return value;\n\t  }\n\t  // coerce is a function\n\t  return coerce(value);\n\t}\n\t\n\t/**\n\t * Assert the type of a value\n\t *\n\t * @param {*} value\n\t * @param {Function} type\n\t * @return {Object}\n\t */\n\t\n\tfunction assertType(value, type) {\n\t  var valid;\n\t  var expectedType;\n\t  if (type === String) {\n\t    expectedType = 'string';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Number) {\n\t    expectedType = 'number';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Boolean) {\n\t    expectedType = 'boolean';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Function) {\n\t    expectedType = 'function';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Object) {\n\t    expectedType = 'object';\n\t    valid = isPlainObject(value);\n\t  } else if (type === Array) {\n\t    expectedType = 'array';\n\t    valid = isArray(value);\n\t  } else {\n\t    valid = value instanceof type;\n\t  }\n\t  return {\n\t    valid: valid,\n\t    expectedType: expectedType\n\t  };\n\t}\n\t\n\t/**\n\t * Format type for output\n\t *\n\t * @param {String} type\n\t * @return {String}\n\t */\n\t\n\tfunction formatType(type) {\n\t  return type ? type.charAt(0).toUpperCase() + type.slice(1) : 'custom type';\n\t}\n\t\n\t/**\n\t * Format value\n\t *\n\t * @param {*} value\n\t * @return {String}\n\t */\n\t\n\tfunction formatValue(val) {\n\t  return Object.prototype.toString.call(val).slice(8, -1);\n\t}\n\t\n\tvar bindingModes = config._propBindingModes;\n\t\n\tvar propDef = {\n\t\n\t  bind: function bind() {\n\t    var child = this.vm;\n\t    var parent = child._context;\n\t    // passed in from compiler directly\n\t    var prop = this.descriptor.prop;\n\t    var childKey = prop.path;\n\t    var parentKey = prop.parentPath;\n\t    var twoWay = prop.mode === bindingModes.TWO_WAY;\n\t\n\t    var parentWatcher = this.parentWatcher = new Watcher(parent, parentKey, function (val) {\n\t      updateProp(child, prop, val);\n\t    }, {\n\t      twoWay: twoWay,\n\t      filters: prop.filters,\n\t      // important: props need to be observed on the\n\t      // v-for scope if present\n\t      scope: this._scope\n\t    });\n\t\n\t    // set the child initial value.\n\t    initProp(child, prop, parentWatcher.value);\n\t\n\t    // setup two-way binding\n\t    if (twoWay) {\n\t      // important: defer the child watcher creation until\n\t      // the created hook (after data observation)\n\t      var self = this;\n\t      child.$once('pre-hook:created', function () {\n\t        self.childWatcher = new Watcher(child, childKey, function (val) {\n\t          parentWatcher.set(val);\n\t        }, {\n\t          // ensure sync upward before parent sync down.\n\t          // this is necessary in cases e.g. the child\n\t          // mutates a prop array, then replaces it. (#1683)\n\t          sync: true\n\t        });\n\t      });\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.parentWatcher.teardown();\n\t    if (this.childWatcher) {\n\t      this.childWatcher.teardown();\n\t    }\n\t  }\n\t};\n\t\n\tvar queue$1 = [];\n\tvar queued = false;\n\t\n\t/**\n\t * Push a job into the queue.\n\t *\n\t * @param {Function} job\n\t */\n\t\n\tfunction pushJob(job) {\n\t  queue$1.push(job);\n\t  if (!queued) {\n\t    queued = true;\n\t    nextTick(flush);\n\t  }\n\t}\n\t\n\t/**\n\t * Flush the queue, and do one forced reflow before\n\t * triggering transitions.\n\t */\n\t\n\tfunction flush() {\n\t  // Force layout\n\t  var f = document.documentElement.offsetHeight;\n\t  for (var i = 0; i < queue$1.length; i++) {\n\t    queue$1[i]();\n\t  }\n\t  queue$1 = [];\n\t  queued = false;\n\t  // dummy return, so js linters don't complain about\n\t  // unused variable f\n\t  return f;\n\t}\n\t\n\tvar TYPE_TRANSITION = 'transition';\n\tvar TYPE_ANIMATION = 'animation';\n\tvar transDurationProp = transitionProp + 'Duration';\n\tvar animDurationProp = animationProp + 'Duration';\n\t\n\t/**\n\t * If a just-entered element is applied the\n\t * leave class while its enter transition hasn't started yet,\n\t * and the transitioned property has the same value for both\n\t * enter/leave, then the leave transition will be skipped and\n\t * the transitionend event never fires. This function ensures\n\t * its callback to be called after a transition has started\n\t * by waiting for double raf.\n\t *\n\t * It falls back to setTimeout on devices that support CSS\n\t * transitions but not raf (e.g. Android 4.2 browser) - since\n\t * these environments are usually slow, we are giving it a\n\t * relatively large timeout.\n\t */\n\t\n\tvar raf = inBrowser && window.requestAnimationFrame;\n\tvar waitForTransitionStart = raf\n\t/* istanbul ignore next */\n\t? function (fn) {\n\t  raf(function () {\n\t    raf(fn);\n\t  });\n\t} : function (fn) {\n\t  setTimeout(fn, 50);\n\t};\n\t\n\t/**\n\t * A Transition object that encapsulates the state and logic\n\t * of the transition.\n\t *\n\t * @param {Element} el\n\t * @param {String} id\n\t * @param {Object} hooks\n\t * @param {Vue} vm\n\t */\n\tfunction Transition(el, id, hooks, vm) {\n\t  this.id = id;\n\t  this.el = el;\n\t  this.enterClass = hooks && hooks.enterClass || id + '-enter';\n\t  this.leaveClass = hooks && hooks.leaveClass || id + '-leave';\n\t  this.hooks = hooks;\n\t  this.vm = vm;\n\t  // async state\n\t  this.pendingCssEvent = this.pendingCssCb = this.cancel = this.pendingJsCb = this.op = this.cb = null;\n\t  this.justEntered = false;\n\t  this.entered = this.left = false;\n\t  this.typeCache = {};\n\t  // check css transition type\n\t  this.type = hooks && hooks.type;\n\t  /* istanbul ignore if */\n\t  if (false) {\n\t    if (this.type && this.type !== TYPE_TRANSITION && this.type !== TYPE_ANIMATION) {\n\t      warn('invalid CSS transition type for transition=\"' + this.id + '\": ' + this.type, vm);\n\t    }\n\t  }\n\t  // bind\n\t  var self = this;['enterNextTick', 'enterDone', 'leaveNextTick', 'leaveDone'].forEach(function (m) {\n\t    self[m] = bind(self[m], self);\n\t  });\n\t}\n\t\n\tvar p$1 = Transition.prototype;\n\t\n\t/**\n\t * Start an entering transition.\n\t *\n\t * 1. enter transition triggered\n\t * 2. call beforeEnter hook\n\t * 3. add enter class\n\t * 4. insert/show element\n\t * 5. call enter hook (with possible explicit js callback)\n\t * 6. reflow\n\t * 7. based on transition type:\n\t *    - transition:\n\t *        remove class now, wait for transitionend,\n\t *        then done if there's no explicit js callback.\n\t *    - animation:\n\t *        wait for animationend, remove class,\n\t *        then done if there's no explicit js callback.\n\t *    - no css transition:\n\t *        done now if there's no explicit js callback.\n\t * 8. wait for either done or js callback, then call\n\t *    afterEnter hook.\n\t *\n\t * @param {Function} op - insert/show the element\n\t * @param {Function} [cb]\n\t */\n\t\n\tp$1.enter = function (op, cb) {\n\t  this.cancelPending();\n\t  this.callHook('beforeEnter');\n\t  this.cb = cb;\n\t  addClass(this.el, this.enterClass);\n\t  op();\n\t  this.entered = false;\n\t  this.callHookWithCb('enter');\n\t  if (this.entered) {\n\t    return; // user called done synchronously.\n\t  }\n\t  this.cancel = this.hooks && this.hooks.enterCancelled;\n\t  pushJob(this.enterNextTick);\n\t};\n\t\n\t/**\n\t * The \"nextTick\" phase of an entering transition, which is\n\t * to be pushed into a queue and executed after a reflow so\n\t * that removing the class can trigger a CSS transition.\n\t */\n\t\n\tp$1.enterNextTick = function () {\n\t  var _this = this;\n\t\n\t  // prevent transition skipping\n\t  this.justEntered = true;\n\t  waitForTransitionStart(function () {\n\t    _this.justEntered = false;\n\t  });\n\t  var enterDone = this.enterDone;\n\t  var type = this.getCssTransitionType(this.enterClass);\n\t  if (!this.pendingJsCb) {\n\t    if (type === TYPE_TRANSITION) {\n\t      // trigger transition by removing enter class now\n\t      removeClass(this.el, this.enterClass);\n\t      this.setupCssCb(transitionEndEvent, enterDone);\n\t    } else if (type === TYPE_ANIMATION) {\n\t      this.setupCssCb(animationEndEvent, enterDone);\n\t    } else {\n\t      enterDone();\n\t    }\n\t  } else if (type === TYPE_TRANSITION) {\n\t    removeClass(this.el, this.enterClass);\n\t  }\n\t};\n\t\n\t/**\n\t * The \"cleanup\" phase of an entering transition.\n\t */\n\t\n\tp$1.enterDone = function () {\n\t  this.entered = true;\n\t  this.cancel = this.pendingJsCb = null;\n\t  removeClass(this.el, this.enterClass);\n\t  this.callHook('afterEnter');\n\t  if (this.cb) this.cb();\n\t};\n\t\n\t/**\n\t * Start a leaving transition.\n\t *\n\t * 1. leave transition triggered.\n\t * 2. call beforeLeave hook\n\t * 3. add leave class (trigger css transition)\n\t * 4. call leave hook (with possible explicit js callback)\n\t * 5. reflow if no explicit js callback is provided\n\t * 6. based on transition type:\n\t *    - transition or animation:\n\t *        wait for end event, remove class, then done if\n\t *        there's no explicit js callback.\n\t *    - no css transition:\n\t *        done if there's no explicit js callback.\n\t * 7. wait for either done or js callback, then call\n\t *    afterLeave hook.\n\t *\n\t * @param {Function} op - remove/hide the element\n\t * @param {Function} [cb]\n\t */\n\t\n\tp$1.leave = function (op, cb) {\n\t  this.cancelPending();\n\t  this.callHook('beforeLeave');\n\t  this.op = op;\n\t  this.cb = cb;\n\t  addClass(this.el, this.leaveClass);\n\t  this.left = false;\n\t  this.callHookWithCb('leave');\n\t  if (this.left) {\n\t    return; // user called done synchronously.\n\t  }\n\t  this.cancel = this.hooks && this.hooks.leaveCancelled;\n\t  // only need to handle leaveDone if\n\t  // 1. the transition is already done (synchronously called\n\t  //    by the user, which causes this.op set to null)\n\t  // 2. there's no explicit js callback\n\t  if (this.op && !this.pendingJsCb) {\n\t    // if a CSS transition leaves immediately after enter,\n\t    // the transitionend event never fires. therefore we\n\t    // detect such cases and end the leave immediately.\n\t    if (this.justEntered) {\n\t      this.leaveDone();\n\t    } else {\n\t      pushJob(this.leaveNextTick);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * The \"nextTick\" phase of a leaving transition.\n\t */\n\t\n\tp$1.leaveNextTick = function () {\n\t  var type = this.getCssTransitionType(this.leaveClass);\n\t  if (type) {\n\t    var event = type === TYPE_TRANSITION ? transitionEndEvent : animationEndEvent;\n\t    this.setupCssCb(event, this.leaveDone);\n\t  } else {\n\t    this.leaveDone();\n\t  }\n\t};\n\t\n\t/**\n\t * The \"cleanup\" phase of a leaving transition.\n\t */\n\t\n\tp$1.leaveDone = function () {\n\t  this.left = true;\n\t  this.cancel = this.pendingJsCb = null;\n\t  this.op();\n\t  removeClass(this.el, this.leaveClass);\n\t  this.callHook('afterLeave');\n\t  if (this.cb) this.cb();\n\t  this.op = null;\n\t};\n\t\n\t/**\n\t * Cancel any pending callbacks from a previously running\n\t * but not finished transition.\n\t */\n\t\n\tp$1.cancelPending = function () {\n\t  this.op = this.cb = null;\n\t  var hasPending = false;\n\t  if (this.pendingCssCb) {\n\t    hasPending = true;\n\t    off(this.el, this.pendingCssEvent, this.pendingCssCb);\n\t    this.pendingCssEvent = this.pendingCssCb = null;\n\t  }\n\t  if (this.pendingJsCb) {\n\t    hasPending = true;\n\t    this.pendingJsCb.cancel();\n\t    this.pendingJsCb = null;\n\t  }\n\t  if (hasPending) {\n\t    removeClass(this.el, this.enterClass);\n\t    removeClass(this.el, this.leaveClass);\n\t  }\n\t  if (this.cancel) {\n\t    this.cancel.call(this.vm, this.el);\n\t    this.cancel = null;\n\t  }\n\t};\n\t\n\t/**\n\t * Call a user-provided synchronous hook function.\n\t *\n\t * @param {String} type\n\t */\n\t\n\tp$1.callHook = function (type) {\n\t  if (this.hooks && this.hooks[type]) {\n\t    this.hooks[type].call(this.vm, this.el);\n\t  }\n\t};\n\t\n\t/**\n\t * Call a user-provided, potentially-async hook function.\n\t * We check for the length of arguments to see if the hook\n\t * expects a `done` callback. If true, the transition's end\n\t * will be determined by when the user calls that callback;\n\t * otherwise, the end is determined by the CSS transition or\n\t * animation.\n\t *\n\t * @param {String} type\n\t */\n\t\n\tp$1.callHookWithCb = function (type) {\n\t  var hook = this.hooks && this.hooks[type];\n\t  if (hook) {\n\t    if (hook.length > 1) {\n\t      this.pendingJsCb = cancellable(this[type + 'Done']);\n\t    }\n\t    hook.call(this.vm, this.el, this.pendingJsCb);\n\t  }\n\t};\n\t\n\t/**\n\t * Get an element's transition type based on the\n\t * calculated styles.\n\t *\n\t * @param {String} className\n\t * @return {Number}\n\t */\n\t\n\tp$1.getCssTransitionType = function (className) {\n\t  /* istanbul ignore if */\n\t  if (!transitionEndEvent ||\n\t  // skip CSS transitions if page is not visible -\n\t  // this solves the issue of transitionend events not\n\t  // firing until the page is visible again.\n\t  // pageVisibility API is supported in IE10+, same as\n\t  // CSS transitions.\n\t  document.hidden ||\n\t  // explicit js-only transition\n\t  this.hooks && this.hooks.css === false ||\n\t  // element is hidden\n\t  isHidden(this.el)) {\n\t    return;\n\t  }\n\t  var type = this.type || this.typeCache[className];\n\t  if (type) return type;\n\t  var inlineStyles = this.el.style;\n\t  var computedStyles = window.getComputedStyle(this.el);\n\t  var transDuration = inlineStyles[transDurationProp] || computedStyles[transDurationProp];\n\t  if (transDuration && transDuration !== '0s') {\n\t    type = TYPE_TRANSITION;\n\t  } else {\n\t    var animDuration = inlineStyles[animDurationProp] || computedStyles[animDurationProp];\n\t    if (animDuration && animDuration !== '0s') {\n\t      type = TYPE_ANIMATION;\n\t    }\n\t  }\n\t  if (type) {\n\t    this.typeCache[className] = type;\n\t  }\n\t  return type;\n\t};\n\t\n\t/**\n\t * Setup a CSS transitionend/animationend callback.\n\t *\n\t * @param {String} event\n\t * @param {Function} cb\n\t */\n\t\n\tp$1.setupCssCb = function (event, cb) {\n\t  this.pendingCssEvent = event;\n\t  var self = this;\n\t  var el = this.el;\n\t  var onEnd = this.pendingCssCb = function (e) {\n\t    if (e.target === el) {\n\t      off(el, event, onEnd);\n\t      self.pendingCssEvent = self.pendingCssCb = null;\n\t      if (!self.pendingJsCb && cb) {\n\t        cb();\n\t      }\n\t    }\n\t  };\n\t  on(el, event, onEnd);\n\t};\n\t\n\t/**\n\t * Check if an element is hidden - in that case we can just\n\t * skip the transition alltogether.\n\t *\n\t * @param {Element} el\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isHidden(el) {\n\t  if (/svg$/.test(el.namespaceURI)) {\n\t    // SVG elements do not have offset(Width|Height)\n\t    // so we need to check the client rect\n\t    var rect = el.getBoundingClientRect();\n\t    return !(rect.width || rect.height);\n\t  } else {\n\t    return !(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n\t  }\n\t}\n\t\n\tvar transition$1 = {\n\t\n\t  priority: TRANSITION,\n\t\n\t  update: function update(id, oldId) {\n\t    var el = this.el;\n\t    // resolve on owner vm\n\t    var hooks = resolveAsset(this.vm.$options, 'transitions', id);\n\t    id = id || 'v';\n\t    el.__v_trans = new Transition(el, id, hooks, this.vm);\n\t    if (oldId) {\n\t      removeClass(el, oldId + '-transition');\n\t    }\n\t    addClass(el, id + '-transition');\n\t  }\n\t};\n\t\n\tvar internalDirectives = {\n\t  style: style,\n\t  'class': vClass,\n\t  component: component,\n\t  prop: propDef,\n\t  transition: transition$1\n\t};\n\t\n\t// special binding prefixes\n\tvar bindRE = /^v-bind:|^:/;\n\tvar onRE = /^v-on:|^@/;\n\tvar dirAttrRE = /^v-([^:]+)(?:$|:(.*)$)/;\n\tvar modifierRE = /\\.[^\\.]+/g;\n\tvar transitionRE = /^(v-bind:|:)?transition$/;\n\t\n\t// default directive priority\n\tvar DEFAULT_PRIORITY = 1000;\n\tvar DEFAULT_TERMINAL_PRIORITY = 2000;\n\t\n\t/**\n\t * Compile a template and return a reusable composite link\n\t * function, which recursively contains more link functions\n\t * inside. This top level compile function would normally\n\t * be called on instance root nodes, but can also be used\n\t * for partial compilation if the partial argument is true.\n\t *\n\t * The returned composite link function, when called, will\n\t * return an unlink function that tearsdown all directives\n\t * created during the linking phase.\n\t *\n\t * @param {Element|DocumentFragment} el\n\t * @param {Object} options\n\t * @param {Boolean} partial\n\t * @return {Function}\n\t */\n\t\n\tfunction compile(el, options, partial) {\n\t  // link function for the node itself.\n\t  var nodeLinkFn = partial || !options._asComponent ? compileNode(el, options) : null;\n\t  // link function for the childNodes\n\t  var childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && !isScript(el) && el.hasChildNodes() ? compileNodeList(el.childNodes, options) : null;\n\t\n\t  /**\n\t   * A composite linker function to be called on a already\n\t   * compiled piece of DOM, which instantiates all directive\n\t   * instances.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element|DocumentFragment} el\n\t   * @param {Vue} [host] - host vm of transcluded content\n\t   * @param {Object} [scope] - v-for scope\n\t   * @param {Fragment} [frag] - link context fragment\n\t   * @return {Function|undefined}\n\t   */\n\t\n\t  return function compositeLinkFn(vm, el, host, scope, frag) {\n\t    // cache childNodes before linking parent, fix #657\n\t    var childNodes = toArray(el.childNodes);\n\t    // link\n\t    var dirs = linkAndCapture(function compositeLinkCapturer() {\n\t      if (nodeLinkFn) nodeLinkFn(vm, el, host, scope, frag);\n\t      if (childLinkFn) childLinkFn(vm, childNodes, host, scope, frag);\n\t    }, vm);\n\t    return makeUnlinkFn(vm, dirs);\n\t  };\n\t}\n\t\n\t/**\n\t * Apply a linker to a vm/element pair and capture the\n\t * directives created during the process.\n\t *\n\t * @param {Function} linker\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction linkAndCapture(linker, vm) {\n\t  /* istanbul ignore if */\n\t  if (true) {\n\t    // reset directives before every capture in production\n\t    // mode, so that when unlinking we don't need to splice\n\t    // them out (which turns out to be a perf hit).\n\t    // they are kept in development mode because they are\n\t    // useful for Vue's own tests.\n\t    vm._directives = [];\n\t  }\n\t  var originalDirCount = vm._directives.length;\n\t  linker();\n\t  var dirs = vm._directives.slice(originalDirCount);\n\t  dirs.sort(directiveComparator);\n\t  for (var i = 0, l = dirs.length; i < l; i++) {\n\t    dirs[i]._bind();\n\t  }\n\t  return dirs;\n\t}\n\t\n\t/**\n\t * Directive priority sort comparator\n\t *\n\t * @param {Object} a\n\t * @param {Object} b\n\t */\n\t\n\tfunction directiveComparator(a, b) {\n\t  a = a.descriptor.def.priority || DEFAULT_PRIORITY;\n\t  b = b.descriptor.def.priority || DEFAULT_PRIORITY;\n\t  return a > b ? -1 : a === b ? 0 : 1;\n\t}\n\t\n\t/**\n\t * Linker functions return an unlink function that\n\t * tearsdown all directives instances generated during\n\t * the process.\n\t *\n\t * We create unlink functions with only the necessary\n\t * information to avoid retaining additional closures.\n\t *\n\t * @param {Vue} vm\n\t * @param {Array} dirs\n\t * @param {Vue} [context]\n\t * @param {Array} [contextDirs]\n\t * @return {Function}\n\t */\n\t\n\tfunction makeUnlinkFn(vm, dirs, context, contextDirs) {\n\t  function unlink(destroying) {\n\t    teardownDirs(vm, dirs, destroying);\n\t    if (context && contextDirs) {\n\t      teardownDirs(context, contextDirs);\n\t    }\n\t  }\n\t  // expose linked directives\n\t  unlink.dirs = dirs;\n\t  return unlink;\n\t}\n\t\n\t/**\n\t * Teardown partial linked directives.\n\t *\n\t * @param {Vue} vm\n\t * @param {Array} dirs\n\t * @param {Boolean} destroying\n\t */\n\t\n\tfunction teardownDirs(vm, dirs, destroying) {\n\t  var i = dirs.length;\n\t  while (i--) {\n\t    dirs[i]._teardown();\n\t    if (false) {\n\t      vm._directives.$remove(dirs[i]);\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Compile link props on an instance.\n\t *\n\t * @param {Vue} vm\n\t * @param {Element} el\n\t * @param {Object} props\n\t * @param {Object} [scope]\n\t * @return {Function}\n\t */\n\t\n\tfunction compileAndLinkProps(vm, el, props, scope) {\n\t  var propsLinkFn = compileProps(el, props, vm);\n\t  var propDirs = linkAndCapture(function () {\n\t    propsLinkFn(vm, scope);\n\t  }, vm);\n\t  return makeUnlinkFn(vm, propDirs);\n\t}\n\t\n\t/**\n\t * Compile the root element of an instance.\n\t *\n\t * 1. attrs on context container (context scope)\n\t * 2. attrs on the component template root node, if\n\t *    replace:true (child scope)\n\t *\n\t * If this is a fragment instance, we only need to compile 1.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @param {Object} contextOptions\n\t * @return {Function}\n\t */\n\t\n\tfunction compileRoot(el, options, contextOptions) {\n\t  var containerAttrs = options._containerAttrs;\n\t  var replacerAttrs = options._replacerAttrs;\n\t  var contextLinkFn, replacerLinkFn;\n\t\n\t  // only need to compile other attributes for\n\t  // non-fragment instances\n\t  if (el.nodeType !== 11) {\n\t    // for components, container and replacer need to be\n\t    // compiled separately and linked in different scopes.\n\t    if (options._asComponent) {\n\t      // 2. container attributes\n\t      if (containerAttrs && contextOptions) {\n\t        contextLinkFn = compileDirectives(containerAttrs, contextOptions);\n\t      }\n\t      if (replacerAttrs) {\n\t        // 3. replacer attributes\n\t        replacerLinkFn = compileDirectives(replacerAttrs, options);\n\t      }\n\t    } else {\n\t      // non-component, just compile as a normal element.\n\t      replacerLinkFn = compileDirectives(el.attributes, options);\n\t    }\n\t  } else if (false) {\n\t    // warn container directives for fragment instances\n\t    var names = containerAttrs.filter(function (attr) {\n\t      // allow vue-loader/vueify scoped css attributes\n\t      return attr.name.indexOf('_v-') < 0 &&\n\t      // allow event listeners\n\t      !onRE.test(attr.name) &&\n\t      // allow slots\n\t      attr.name !== 'slot';\n\t    }).map(function (attr) {\n\t      return '\"' + attr.name + '\"';\n\t    });\n\t    if (names.length) {\n\t      var plural = names.length > 1;\n\t      warn('Attribute' + (plural ? 's ' : ' ') + names.join(', ') + (plural ? ' are' : ' is') + ' ignored on component ' + '<' + options.el.tagName.toLowerCase() + '> because ' + 'the component is a fragment instance: ' + 'http://vuejs.org/guide/components.html#Fragment-Instance');\n\t    }\n\t  }\n\t\n\t  options._containerAttrs = options._replacerAttrs = null;\n\t  return function rootLinkFn(vm, el, scope) {\n\t    // link context scope dirs\n\t    var context = vm._context;\n\t    var contextDirs;\n\t    if (context && contextLinkFn) {\n\t      contextDirs = linkAndCapture(function () {\n\t        contextLinkFn(context, el, null, scope);\n\t      }, context);\n\t    }\n\t\n\t    // link self\n\t    var selfDirs = linkAndCapture(function () {\n\t      if (replacerLinkFn) replacerLinkFn(vm, el);\n\t    }, vm);\n\t\n\t    // return the unlink function that tearsdown context\n\t    // container directives.\n\t    return makeUnlinkFn(vm, selfDirs, context, contextDirs);\n\t  };\n\t}\n\t\n\t/**\n\t * Compile a node and return a nodeLinkFn based on the\n\t * node type.\n\t *\n\t * @param {Node} node\n\t * @param {Object} options\n\t * @return {Function|null}\n\t */\n\t\n\tfunction compileNode(node, options) {\n\t  var type = node.nodeType;\n\t  if (type === 1 && !isScript(node)) {\n\t    return compileElement(node, options);\n\t  } else if (type === 3 && node.data.trim()) {\n\t    return compileTextNode(node, options);\n\t  } else {\n\t    return null;\n\t  }\n\t}\n\t\n\t/**\n\t * Compile an element and return a nodeLinkFn.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Function|null}\n\t */\n\t\n\tfunction compileElement(el, options) {\n\t  // preprocess textareas.\n\t  // textarea treats its text content as the initial value.\n\t  // just bind it as an attr directive for value.\n\t  if (el.tagName === 'TEXTAREA') {\n\t    var tokens = parseText(el.value);\n\t    if (tokens) {\n\t      el.setAttribute(':value', tokensToExp(tokens));\n\t      el.value = '';\n\t    }\n\t  }\n\t  var linkFn;\n\t  var hasAttrs = el.hasAttributes();\n\t  var attrs = hasAttrs && toArray(el.attributes);\n\t  // check terminal directives (for & if)\n\t  if (hasAttrs) {\n\t    linkFn = checkTerminalDirectives(el, attrs, options);\n\t  }\n\t  // check element directives\n\t  if (!linkFn) {\n\t    linkFn = checkElementDirectives(el, options);\n\t  }\n\t  // check component\n\t  if (!linkFn) {\n\t    linkFn = checkComponent(el, options);\n\t  }\n\t  // normal directives\n\t  if (!linkFn && hasAttrs) {\n\t    linkFn = compileDirectives(attrs, options);\n\t  }\n\t  return linkFn;\n\t}\n\t\n\t/**\n\t * Compile a textNode and return a nodeLinkFn.\n\t *\n\t * @param {TextNode} node\n\t * @param {Object} options\n\t * @return {Function|null} textNodeLinkFn\n\t */\n\t\n\tfunction compileTextNode(node, options) {\n\t  // skip marked text nodes\n\t  if (node._skip) {\n\t    return removeText;\n\t  }\n\t\n\t  var tokens = parseText(node.wholeText);\n\t  if (!tokens) {\n\t    return null;\n\t  }\n\t\n\t  // mark adjacent text nodes as skipped,\n\t  // because we are using node.wholeText to compile\n\t  // all adjacent text nodes together. This fixes\n\t  // issues in IE where sometimes it splits up a single\n\t  // text node into multiple ones.\n\t  var next = node.nextSibling;\n\t  while (next && next.nodeType === 3) {\n\t    next._skip = true;\n\t    next = next.nextSibling;\n\t  }\n\t\n\t  var frag = document.createDocumentFragment();\n\t  var el, token;\n\t  for (var i = 0, l = tokens.length; i < l; i++) {\n\t    token = tokens[i];\n\t    el = token.tag ? processTextToken(token, options) : document.createTextNode(token.value);\n\t    frag.appendChild(el);\n\t  }\n\t  return makeTextNodeLinkFn(tokens, frag, options);\n\t}\n\t\n\t/**\n\t * Linker for an skipped text node.\n\t *\n\t * @param {Vue} vm\n\t * @param {Text} node\n\t */\n\t\n\tfunction removeText(vm, node) {\n\t  remove(node);\n\t}\n\t\n\t/**\n\t * Process a single text token.\n\t *\n\t * @param {Object} token\n\t * @param {Object} options\n\t * @return {Node}\n\t */\n\t\n\tfunction processTextToken(token, options) {\n\t  var el;\n\t  if (token.oneTime) {\n\t    el = document.createTextNode(token.value);\n\t  } else {\n\t    if (token.html) {\n\t      el = document.createComment('v-html');\n\t      setTokenType('html');\n\t    } else {\n\t      // IE will clean up empty textNodes during\n\t      // frag.cloneNode(true), so we have to give it\n\t      // something here...\n\t      el = document.createTextNode(' ');\n\t      setTokenType('text');\n\t    }\n\t  }\n\t  function setTokenType(type) {\n\t    if (token.descriptor) return;\n\t    var parsed = parseDirective(token.value);\n\t    token.descriptor = {\n\t      name: type,\n\t      def: directives[type],\n\t      expression: parsed.expression,\n\t      filters: parsed.filters\n\t    };\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Build a function that processes a textNode.\n\t *\n\t * @param {Array<Object>} tokens\n\t * @param {DocumentFragment} frag\n\t */\n\t\n\tfunction makeTextNodeLinkFn(tokens, frag) {\n\t  return function textNodeLinkFn(vm, el, host, scope) {\n\t    var fragClone = frag.cloneNode(true);\n\t    var childNodes = toArray(fragClone.childNodes);\n\t    var token, value, node;\n\t    for (var i = 0, l = tokens.length; i < l; i++) {\n\t      token = tokens[i];\n\t      value = token.value;\n\t      if (token.tag) {\n\t        node = childNodes[i];\n\t        if (token.oneTime) {\n\t          value = (scope || vm).$eval(value);\n\t          if (token.html) {\n\t            replace(node, parseTemplate(value, true));\n\t          } else {\n\t            node.data = value;\n\t          }\n\t        } else {\n\t          vm._bindDir(token.descriptor, node, host, scope);\n\t        }\n\t      }\n\t    }\n\t    replace(el, fragClone);\n\t  };\n\t}\n\t\n\t/**\n\t * Compile a node list and return a childLinkFn.\n\t *\n\t * @param {NodeList} nodeList\n\t * @param {Object} options\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction compileNodeList(nodeList, options) {\n\t  var linkFns = [];\n\t  var nodeLinkFn, childLinkFn, node;\n\t  for (var i = 0, l = nodeList.length; i < l; i++) {\n\t    node = nodeList[i];\n\t    nodeLinkFn = compileNode(node, options);\n\t    childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && node.tagName !== 'SCRIPT' && node.hasChildNodes() ? compileNodeList(node.childNodes, options) : null;\n\t    linkFns.push(nodeLinkFn, childLinkFn);\n\t  }\n\t  return linkFns.length ? makeChildLinkFn(linkFns) : null;\n\t}\n\t\n\t/**\n\t * Make a child link function for a node's childNodes.\n\t *\n\t * @param {Array<Function>} linkFns\n\t * @return {Function} childLinkFn\n\t */\n\t\n\tfunction makeChildLinkFn(linkFns) {\n\t  return function childLinkFn(vm, nodes, host, scope, frag) {\n\t    var node, nodeLinkFn, childrenLinkFn;\n\t    for (var i = 0, n = 0, l = linkFns.length; i < l; n++) {\n\t      node = nodes[n];\n\t      nodeLinkFn = linkFns[i++];\n\t      childrenLinkFn = linkFns[i++];\n\t      // cache childNodes before linking parent, fix #657\n\t      var childNodes = toArray(node.childNodes);\n\t      if (nodeLinkFn) {\n\t        nodeLinkFn(vm, node, host, scope, frag);\n\t      }\n\t      if (childrenLinkFn) {\n\t        childrenLinkFn(vm, childNodes, host, scope, frag);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check for element directives (custom elements that should\n\t * be resovled as terminal directives).\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t */\n\t\n\tfunction checkElementDirectives(el, options) {\n\t  var tag = el.tagName.toLowerCase();\n\t  if (commonTagRE.test(tag)) {\n\t    return;\n\t  }\n\t  var def = resolveAsset(options, 'elementDirectives', tag);\n\t  if (def) {\n\t    return makeTerminalNodeLinkFn(el, tag, '', options, def);\n\t  }\n\t}\n\t\n\t/**\n\t * Check if an element is a component. If yes, return\n\t * a component link function.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction checkComponent(el, options) {\n\t  var component = checkComponentAttr(el, options);\n\t  if (component) {\n\t    var ref = findRef(el);\n\t    var descriptor = {\n\t      name: 'component',\n\t      ref: ref,\n\t      expression: component.id,\n\t      def: internalDirectives.component,\n\t      modifiers: {\n\t        literal: !component.dynamic\n\t      }\n\t    };\n\t    var componentLinkFn = function componentLinkFn(vm, el, host, scope, frag) {\n\t      if (ref) {\n\t        defineReactive((scope || vm).$refs, ref, null);\n\t      }\n\t      vm._bindDir(descriptor, el, host, scope, frag);\n\t    };\n\t    componentLinkFn.terminal = true;\n\t    return componentLinkFn;\n\t  }\n\t}\n\t\n\t/**\n\t * Check an element for terminal directives in fixed order.\n\t * If it finds one, return a terminal link function.\n\t *\n\t * @param {Element} el\n\t * @param {Array} attrs\n\t * @param {Object} options\n\t * @return {Function} terminalLinkFn\n\t */\n\t\n\tfunction checkTerminalDirectives(el, attrs, options) {\n\t  // skip v-pre\n\t  if (getAttr(el, 'v-pre') !== null) {\n\t    return skip;\n\t  }\n\t  // skip v-else block, but only if following v-if\n\t  if (el.hasAttribute('v-else')) {\n\t    var prev = el.previousElementSibling;\n\t    if (prev && prev.hasAttribute('v-if')) {\n\t      return skip;\n\t    }\n\t  }\n\t\n\t  var attr, name, value, modifiers, matched, dirName, rawName, arg, def, termDef;\n\t  for (var i = 0, j = attrs.length; i < j; i++) {\n\t    attr = attrs[i];\n\t    name = attr.name.replace(modifierRE, '');\n\t    if (matched = name.match(dirAttrRE)) {\n\t      def = resolveAsset(options, 'directives', matched[1]);\n\t      if (def && def.terminal) {\n\t        if (!termDef || (def.priority || DEFAULT_TERMINAL_PRIORITY) > termDef.priority) {\n\t          termDef = def;\n\t          rawName = attr.name;\n\t          modifiers = parseModifiers(attr.name);\n\t          value = attr.value;\n\t          dirName = matched[1];\n\t          arg = matched[2];\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  if (termDef) {\n\t    return makeTerminalNodeLinkFn(el, dirName, value, options, termDef, rawName, arg, modifiers);\n\t  }\n\t}\n\t\n\tfunction skip() {}\n\tskip.terminal = true;\n\t\n\t/**\n\t * Build a node link function for a terminal directive.\n\t * A terminal link function terminates the current\n\t * compilation recursion and handles compilation of the\n\t * subtree in the directive.\n\t *\n\t * @param {Element} el\n\t * @param {String} dirName\n\t * @param {String} value\n\t * @param {Object} options\n\t * @param {Object} def\n\t * @param {String} [rawName]\n\t * @param {String} [arg]\n\t * @param {Object} [modifiers]\n\t * @return {Function} terminalLinkFn\n\t */\n\t\n\tfunction makeTerminalNodeLinkFn(el, dirName, value, options, def, rawName, arg, modifiers) {\n\t  var parsed = parseDirective(value);\n\t  var descriptor = {\n\t    name: dirName,\n\t    arg: arg,\n\t    expression: parsed.expression,\n\t    filters: parsed.filters,\n\t    raw: value,\n\t    attr: rawName,\n\t    modifiers: modifiers,\n\t    def: def\n\t  };\n\t  // check ref for v-for and router-view\n\t  if (dirName === 'for' || dirName === 'router-view') {\n\t    descriptor.ref = findRef(el);\n\t  }\n\t  var fn = function terminalNodeLinkFn(vm, el, host, scope, frag) {\n\t    if (descriptor.ref) {\n\t      defineReactive((scope || vm).$refs, descriptor.ref, null);\n\t    }\n\t    vm._bindDir(descriptor, el, host, scope, frag);\n\t  };\n\t  fn.terminal = true;\n\t  return fn;\n\t}\n\t\n\t/**\n\t * Compile the directives on an element and return a linker.\n\t *\n\t * @param {Array|NamedNodeMap} attrs\n\t * @param {Object} options\n\t * @return {Function}\n\t */\n\t\n\tfunction compileDirectives(attrs, options) {\n\t  var i = attrs.length;\n\t  var dirs = [];\n\t  var attr, name, value, rawName, rawValue, dirName, arg, modifiers, dirDef, tokens, matched;\n\t  while (i--) {\n\t    attr = attrs[i];\n\t    name = rawName = attr.name;\n\t    value = rawValue = attr.value;\n\t    tokens = parseText(value);\n\t    // reset arg\n\t    arg = null;\n\t    // check modifiers\n\t    modifiers = parseModifiers(name);\n\t    name = name.replace(modifierRE, '');\n\t\n\t    // attribute interpolations\n\t    if (tokens) {\n\t      value = tokensToExp(tokens);\n\t      arg = name;\n\t      pushDir('bind', directives.bind, tokens);\n\t      // warn against mixing mustaches with v-bind\n\t      if (false) {\n\t        if (name === 'class' && Array.prototype.some.call(attrs, function (attr) {\n\t          return attr.name === ':class' || attr.name === 'v-bind:class';\n\t        })) {\n\t          warn('class=\"' + rawValue + '\": Do not mix mustache interpolation ' + 'and v-bind for \"class\" on the same element. Use one or the other.', options);\n\t        }\n\t      }\n\t    } else\n\t\n\t      // special attribute: transition\n\t      if (transitionRE.test(name)) {\n\t        modifiers.literal = !bindRE.test(name);\n\t        pushDir('transition', internalDirectives.transition);\n\t      } else\n\t\n\t        // event handlers\n\t        if (onRE.test(name)) {\n\t          arg = name.replace(onRE, '');\n\t          pushDir('on', directives.on);\n\t        } else\n\t\n\t          // attribute bindings\n\t          if (bindRE.test(name)) {\n\t            dirName = name.replace(bindRE, '');\n\t            if (dirName === 'style' || dirName === 'class') {\n\t              pushDir(dirName, internalDirectives[dirName]);\n\t            } else {\n\t              arg = dirName;\n\t              pushDir('bind', directives.bind);\n\t            }\n\t          } else\n\t\n\t            // normal directives\n\t            if (matched = name.match(dirAttrRE)) {\n\t              dirName = matched[1];\n\t              arg = matched[2];\n\t\n\t              // skip v-else (when used with v-show)\n\t              if (dirName === 'else') {\n\t                continue;\n\t              }\n\t\n\t              dirDef = resolveAsset(options, 'directives', dirName, true);\n\t              if (dirDef) {\n\t                pushDir(dirName, dirDef);\n\t              }\n\t            }\n\t  }\n\t\n\t  /**\n\t   * Push a directive.\n\t   *\n\t   * @param {String} dirName\n\t   * @param {Object|Function} def\n\t   * @param {Array} [interpTokens]\n\t   */\n\t\n\t  function pushDir(dirName, def, interpTokens) {\n\t    var hasOneTimeToken = interpTokens && hasOneTime(interpTokens);\n\t    var parsed = !hasOneTimeToken && parseDirective(value);\n\t    dirs.push({\n\t      name: dirName,\n\t      attr: rawName,\n\t      raw: rawValue,\n\t      def: def,\n\t      arg: arg,\n\t      modifiers: modifiers,\n\t      // conversion from interpolation strings with one-time token\n\t      // to expression is differed until directive bind time so that we\n\t      // have access to the actual vm context for one-time bindings.\n\t      expression: parsed && parsed.expression,\n\t      filters: parsed && parsed.filters,\n\t      interp: interpTokens,\n\t      hasOneTime: hasOneTimeToken\n\t    });\n\t  }\n\t\n\t  if (dirs.length) {\n\t    return makeNodeLinkFn(dirs);\n\t  }\n\t}\n\t\n\t/**\n\t * Parse modifiers from directive attribute name.\n\t *\n\t * @param {String} name\n\t * @return {Object}\n\t */\n\t\n\tfunction parseModifiers(name) {\n\t  var res = Object.create(null);\n\t  var match = name.match(modifierRE);\n\t  if (match) {\n\t    var i = match.length;\n\t    while (i--) {\n\t      res[match[i].slice(1)] = true;\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Build a link function for all directives on a single node.\n\t *\n\t * @param {Array} directives\n\t * @return {Function} directivesLinkFn\n\t */\n\t\n\tfunction makeNodeLinkFn(directives) {\n\t  return function nodeLinkFn(vm, el, host, scope, frag) {\n\t    // reverse apply because it's sorted low to high\n\t    var i = directives.length;\n\t    while (i--) {\n\t      vm._bindDir(directives[i], el, host, scope, frag);\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check if an interpolation string contains one-time tokens.\n\t *\n\t * @param {Array} tokens\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasOneTime(tokens) {\n\t  var i = tokens.length;\n\t  while (i--) {\n\t    if (tokens[i].oneTime) return true;\n\t  }\n\t}\n\t\n\tfunction isScript(el) {\n\t  return el.tagName === 'SCRIPT' && (!el.hasAttribute('type') || el.getAttribute('type') === 'text/javascript');\n\t}\n\t\n\tvar specialCharRE = /[^\\w\\-:\\.]/;\n\t\n\t/**\n\t * Process an element or a DocumentFragment based on a\n\t * instance option object. This allows us to transclude\n\t * a template node/fragment before the instance is created,\n\t * so the processed fragment can then be cloned and reused\n\t * in v-for.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction transclude(el, options) {\n\t  // extract container attributes to pass them down\n\t  // to compiler, because they need to be compiled in\n\t  // parent scope. we are mutating the options object here\n\t  // assuming the same object will be used for compile\n\t  // right after this.\n\t  if (options) {\n\t    options._containerAttrs = extractAttrs(el);\n\t  }\n\t  // for template tags, what we want is its content as\n\t  // a documentFragment (for fragment instances)\n\t  if (isTemplate(el)) {\n\t    el = parseTemplate(el);\n\t  }\n\t  if (options) {\n\t    if (options._asComponent && !options.template) {\n\t      options.template = '<slot></slot>';\n\t    }\n\t    if (options.template) {\n\t      options._content = extractContent(el);\n\t      el = transcludeTemplate(el, options);\n\t    }\n\t  }\n\t  if (isFragment(el)) {\n\t    // anchors for fragment instance\n\t    // passing in `persist: true` to avoid them being\n\t    // discarded by IE during template cloning\n\t    prepend(createAnchor('v-start', true), el);\n\t    el.appendChild(createAnchor('v-end', true));\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Process the template option.\n\t * If the replace option is true this will swap the $el.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction transcludeTemplate(el, options) {\n\t  var template = options.template;\n\t  var frag = parseTemplate(template, true);\n\t  if (frag) {\n\t    var replacer = frag.firstChild;\n\t    var tag = replacer.tagName && replacer.tagName.toLowerCase();\n\t    if (options.replace) {\n\t      /* istanbul ignore if */\n\t      if (el === document.body) {\n\t        (\"production\") !== 'production' && warn('You are mounting an instance with a template to ' + '<body>. This will replace <body> entirely. You ' + 'should probably use `replace: false` here.');\n\t      }\n\t      // there are many cases where the instance must\n\t      // become a fragment instance: basically anything that\n\t      // can create more than 1 root nodes.\n\t      if (\n\t      // multi-children template\n\t      frag.childNodes.length > 1 ||\n\t      // non-element template\n\t      replacer.nodeType !== 1 ||\n\t      // single nested component\n\t      tag === 'component' || resolveAsset(options, 'components', tag) || hasBindAttr(replacer, 'is') ||\n\t      // element directive\n\t      resolveAsset(options, 'elementDirectives', tag) ||\n\t      // for block\n\t      replacer.hasAttribute('v-for') ||\n\t      // if block\n\t      replacer.hasAttribute('v-if')) {\n\t        return frag;\n\t      } else {\n\t        options._replacerAttrs = extractAttrs(replacer);\n\t        mergeAttrs(el, replacer);\n\t        return replacer;\n\t      }\n\t    } else {\n\t      el.appendChild(frag);\n\t      return el;\n\t    }\n\t  } else {\n\t    (\"production\") !== 'production' && warn('Invalid template option: ' + template);\n\t  }\n\t}\n\t\n\t/**\n\t * Helper to extract a component container's attributes\n\t * into a plain object array.\n\t *\n\t * @param {Element} el\n\t * @return {Array}\n\t */\n\t\n\tfunction extractAttrs(el) {\n\t  if (el.nodeType === 1 && el.hasAttributes()) {\n\t    return toArray(el.attributes);\n\t  }\n\t}\n\t\n\t/**\n\t * Merge the attributes of two elements, and make sure\n\t * the class names are merged properly.\n\t *\n\t * @param {Element} from\n\t * @param {Element} to\n\t */\n\t\n\tfunction mergeAttrs(from, to) {\n\t  var attrs = from.attributes;\n\t  var i = attrs.length;\n\t  var name, value;\n\t  while (i--) {\n\t    name = attrs[i].name;\n\t    value = attrs[i].value;\n\t    if (!to.hasAttribute(name) && !specialCharRE.test(name)) {\n\t      to.setAttribute(name, value);\n\t    } else if (name === 'class' && !parseText(value) && (value = value.trim())) {\n\t      value.split(/\\s+/).forEach(function (cls) {\n\t        addClass(to, cls);\n\t      });\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Scan and determine slot content distribution.\n\t * We do this during transclusion instead at compile time so that\n\t * the distribution is decoupled from the compilation order of\n\t * the slots.\n\t *\n\t * @param {Element|DocumentFragment} template\n\t * @param {Element} content\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction resolveSlots(vm, content) {\n\t  if (!content) {\n\t    return;\n\t  }\n\t  var contents = vm._slotContents = Object.create(null);\n\t  var el, name;\n\t  for (var i = 0, l = content.children.length; i < l; i++) {\n\t    el = content.children[i];\n\t    /* eslint-disable no-cond-assign */\n\t    if (name = el.getAttribute('slot')) {\n\t      (contents[name] || (contents[name] = [])).push(el);\n\t    }\n\t    /* eslint-enable no-cond-assign */\n\t    if (false) {\n\t      warn('The \"slot\" attribute must be static.', vm.$parent);\n\t    }\n\t  }\n\t  for (name in contents) {\n\t    contents[name] = extractFragment(contents[name], content);\n\t  }\n\t  if (content.hasChildNodes()) {\n\t    var nodes = content.childNodes;\n\t    if (nodes.length === 1 && nodes[0].nodeType === 3 && !nodes[0].data.trim()) {\n\t      return;\n\t    }\n\t    contents['default'] = extractFragment(content.childNodes, content);\n\t  }\n\t}\n\t\n\t/**\n\t * Extract qualified content nodes from a node list.\n\t *\n\t * @param {NodeList} nodes\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction extractFragment(nodes, parent) {\n\t  var frag = document.createDocumentFragment();\n\t  nodes = toArray(nodes);\n\t  for (var i = 0, l = nodes.length; i < l; i++) {\n\t    var node = nodes[i];\n\t    if (isTemplate(node) && !node.hasAttribute('v-if') && !node.hasAttribute('v-for')) {\n\t      parent.removeChild(node);\n\t      node = parseTemplate(node, true);\n\t    }\n\t    frag.appendChild(node);\n\t  }\n\t  return frag;\n\t}\n\t\n\t\n\t\n\tvar compiler = Object.freeze({\n\t\tcompile: compile,\n\t\tcompileAndLinkProps: compileAndLinkProps,\n\t\tcompileRoot: compileRoot,\n\t\ttransclude: transclude,\n\t\tresolveSlots: resolveSlots\n\t});\n\t\n\tfunction stateMixin (Vue) {\n\t  /**\n\t   * Accessor for `$data` property, since setting $data\n\t   * requires observing the new object and updating\n\t   * proxied properties.\n\t   */\n\t\n\t  Object.defineProperty(Vue.prototype, '$data', {\n\t    get: function get() {\n\t      return this._data;\n\t    },\n\t    set: function set(newData) {\n\t      if (newData !== this._data) {\n\t        this._setData(newData);\n\t      }\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Setup the scope of an instance, which contains:\n\t   * - observed data\n\t   * - computed properties\n\t   * - user methods\n\t   * - meta properties\n\t   */\n\t\n\t  Vue.prototype._initState = function () {\n\t    this._initProps();\n\t    this._initMeta();\n\t    this._initMethods();\n\t    this._initData();\n\t    this._initComputed();\n\t  };\n\t\n\t  /**\n\t   * Initialize props.\n\t   */\n\t\n\t  Vue.prototype._initProps = function () {\n\t    var options = this.$options;\n\t    var el = options.el;\n\t    var props = options.props;\n\t    if (props && !el) {\n\t      (\"production\") !== 'production' && warn('Props will not be compiled if no `el` option is ' + 'provided at instantiation.', this);\n\t    }\n\t    // make sure to convert string selectors into element now\n\t    el = options.el = query(el);\n\t    this._propsUnlinkFn = el && el.nodeType === 1 && props\n\t    // props must be linked in proper scope if inside v-for\n\t    ? compileAndLinkProps(this, el, props, this._scope) : null;\n\t  };\n\t\n\t  /**\n\t   * Initialize the data.\n\t   */\n\t\n\t  Vue.prototype._initData = function () {\n\t    var dataFn = this.$options.data;\n\t    var data = this._data = dataFn ? dataFn() : {};\n\t    if (!isPlainObject(data)) {\n\t      data = {};\n\t      (\"production\") !== 'production' && warn('data functions should return an object.', this);\n\t    }\n\t    var props = this._props;\n\t    // proxy data on instance\n\t    var keys = Object.keys(data);\n\t    var i, key;\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      // there are two scenarios where we can proxy a data key:\n\t      // 1. it's not already defined as a prop\n\t      // 2. it's provided via a instantiation option AND there are no\n\t      //    template prop present\n\t      if (!props || !hasOwn(props, key)) {\n\t        this._proxy(key);\n\t      } else if (false) {\n\t        warn('Data field \"' + key + '\" is already defined ' + 'as a prop. To provide default value for a prop, use the \"default\" ' + 'prop option; if you want to pass prop values to an instantiation ' + 'call, use the \"propsData\" option.', this);\n\t      }\n\t    }\n\t    // observe data\n\t    observe(data, this);\n\t  };\n\t\n\t  /**\n\t   * Swap the instance's $data. Called in $data's setter.\n\t   *\n\t   * @param {Object} newData\n\t   */\n\t\n\t  Vue.prototype._setData = function (newData) {\n\t    newData = newData || {};\n\t    var oldData = this._data;\n\t    this._data = newData;\n\t    var keys, key, i;\n\t    // unproxy keys not present in new data\n\t    keys = Object.keys(oldData);\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      if (!(key in newData)) {\n\t        this._unproxy(key);\n\t      }\n\t    }\n\t    // proxy keys not already proxied,\n\t    // and trigger change for changed values\n\t    keys = Object.keys(newData);\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      if (!hasOwn(this, key)) {\n\t        // new property\n\t        this._proxy(key);\n\t      }\n\t    }\n\t    oldData.__ob__.removeVm(this);\n\t    observe(newData, this);\n\t    this._digest();\n\t  };\n\t\n\t  /**\n\t   * Proxy a property, so that\n\t   * vm.prop === vm._data.prop\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype._proxy = function (key) {\n\t    if (!isReserved(key)) {\n\t      // need to store ref to self here\n\t      // because these getter/setters might\n\t      // be called by child scopes via\n\t      // prototype inheritance.\n\t      var self = this;\n\t      Object.defineProperty(self, key, {\n\t        configurable: true,\n\t        enumerable: true,\n\t        get: function proxyGetter() {\n\t          return self._data[key];\n\t        },\n\t        set: function proxySetter(val) {\n\t          self._data[key] = val;\n\t        }\n\t      });\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Unproxy a property.\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype._unproxy = function (key) {\n\t    if (!isReserved(key)) {\n\t      delete this[key];\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Force update on every watcher in scope.\n\t   */\n\t\n\t  Vue.prototype._digest = function () {\n\t    for (var i = 0, l = this._watchers.length; i < l; i++) {\n\t      this._watchers[i].update(true); // shallow updates\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Setup computed properties. They are essentially\n\t   * special getter/setters\n\t   */\n\t\n\t  function noop() {}\n\t  Vue.prototype._initComputed = function () {\n\t    var computed = this.$options.computed;\n\t    if (computed) {\n\t      for (var key in computed) {\n\t        var userDef = computed[key];\n\t        var def = {\n\t          enumerable: true,\n\t          configurable: true\n\t        };\n\t        if (typeof userDef === 'function') {\n\t          def.get = makeComputedGetter(userDef, this);\n\t          def.set = noop;\n\t        } else {\n\t          def.get = userDef.get ? userDef.cache !== false ? makeComputedGetter(userDef.get, this) : bind(userDef.get, this) : noop;\n\t          def.set = userDef.set ? bind(userDef.set, this) : noop;\n\t        }\n\t        Object.defineProperty(this, key, def);\n\t      }\n\t    }\n\t  };\n\t\n\t  function makeComputedGetter(getter, owner) {\n\t    var watcher = new Watcher(owner, getter, null, {\n\t      lazy: true\n\t    });\n\t    return function computedGetter() {\n\t      if (watcher.dirty) {\n\t        watcher.evaluate();\n\t      }\n\t      if (Dep.target) {\n\t        watcher.depend();\n\t      }\n\t      return watcher.value;\n\t    };\n\t  }\n\t\n\t  /**\n\t   * Setup instance methods. Methods must be bound to the\n\t   * instance since they might be passed down as a prop to\n\t   * child components.\n\t   */\n\t\n\t  Vue.prototype._initMethods = function () {\n\t    var methods = this.$options.methods;\n\t    if (methods) {\n\t      for (var key in methods) {\n\t        this[key] = bind(methods[key], this);\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Initialize meta information like $index, $key & $value.\n\t   */\n\t\n\t  Vue.prototype._initMeta = function () {\n\t    var metas = this.$options._meta;\n\t    if (metas) {\n\t      for (var key in metas) {\n\t        defineReactive(this, key, metas[key]);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\tvar eventRE = /^v-on:|^@/;\n\t\n\tfunction eventsMixin (Vue) {\n\t  /**\n\t   * Setup the instance's option events & watchers.\n\t   * If the value is a string, we pull it from the\n\t   * instance's methods by name.\n\t   */\n\t\n\t  Vue.prototype._initEvents = function () {\n\t    var options = this.$options;\n\t    if (options._asComponent) {\n\t      registerComponentEvents(this, options.el);\n\t    }\n\t    registerCallbacks(this, '$on', options.events);\n\t    registerCallbacks(this, '$watch', options.watch);\n\t  };\n\t\n\t  /**\n\t   * Register v-on events on a child component\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element} el\n\t   */\n\t\n\t  function registerComponentEvents(vm, el) {\n\t    var attrs = el.attributes;\n\t    var name, value, handler;\n\t    for (var i = 0, l = attrs.length; i < l; i++) {\n\t      name = attrs[i].name;\n\t      if (eventRE.test(name)) {\n\t        name = name.replace(eventRE, '');\n\t        // force the expression into a statement so that\n\t        // it always dynamically resolves the method to call (#2670)\n\t        // kinda ugly hack, but does the job.\n\t        value = attrs[i].value;\n\t        if (isSimplePath(value)) {\n\t          value += '.apply(this, $arguments)';\n\t        }\n\t        handler = (vm._scope || vm._context).$eval(value, true);\n\t        handler._fromParent = true;\n\t        vm.$on(name.replace(eventRE), handler);\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Register callbacks for option events and watchers.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} action\n\t   * @param {Object} hash\n\t   */\n\t\n\t  function registerCallbacks(vm, action, hash) {\n\t    if (!hash) return;\n\t    var handlers, key, i, j;\n\t    for (key in hash) {\n\t      handlers = hash[key];\n\t      if (isArray(handlers)) {\n\t        for (i = 0, j = handlers.length; i < j; i++) {\n\t          register(vm, action, key, handlers[i]);\n\t        }\n\t      } else {\n\t        register(vm, action, key, handlers);\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Helper to register an event/watch callback.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} action\n\t   * @param {String} key\n\t   * @param {Function|String|Object} handler\n\t   * @param {Object} [options]\n\t   */\n\t\n\t  function register(vm, action, key, handler, options) {\n\t    var type = typeof handler;\n\t    if (type === 'function') {\n\t      vm[action](key, handler, options);\n\t    } else if (type === 'string') {\n\t      var methods = vm.$options.methods;\n\t      var method = methods && methods[handler];\n\t      if (method) {\n\t        vm[action](key, method, options);\n\t      } else {\n\t        (\"production\") !== 'production' && warn('Unknown method: \"' + handler + '\" when ' + 'registering callback for ' + action + ': \"' + key + '\".', vm);\n\t      }\n\t    } else if (handler && type === 'object') {\n\t      register(vm, action, key, handler.handler, handler);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Setup recursive attached/detached calls\n\t   */\n\t\n\t  Vue.prototype._initDOMHooks = function () {\n\t    this.$on('hook:attached', onAttached);\n\t    this.$on('hook:detached', onDetached);\n\t  };\n\t\n\t  /**\n\t   * Callback to recursively call attached hook on children\n\t   */\n\t\n\t  function onAttached() {\n\t    if (!this._isAttached) {\n\t      this._isAttached = true;\n\t      this.$children.forEach(callAttach);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Iterator to call attached hook\n\t   *\n\t   * @param {Vue} child\n\t   */\n\t\n\t  function callAttach(child) {\n\t    if (!child._isAttached && inDoc(child.$el)) {\n\t      child._callHook('attached');\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Callback to recursively call detached hook on children\n\t   */\n\t\n\t  function onDetached() {\n\t    if (this._isAttached) {\n\t      this._isAttached = false;\n\t      this.$children.forEach(callDetach);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Iterator to call detached hook\n\t   *\n\t   * @param {Vue} child\n\t   */\n\t\n\t  function callDetach(child) {\n\t    if (child._isAttached && !inDoc(child.$el)) {\n\t      child._callHook('detached');\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Trigger all handlers for a hook\n\t   *\n\t   * @param {String} hook\n\t   */\n\t\n\t  Vue.prototype._callHook = function (hook) {\n\t    this.$emit('pre-hook:' + hook);\n\t    var handlers = this.$options[hook];\n\t    if (handlers) {\n\t      for (var i = 0, j = handlers.length; i < j; i++) {\n\t        handlers[i].call(this);\n\t      }\n\t    }\n\t    this.$emit('hook:' + hook);\n\t  };\n\t}\n\t\n\tfunction noop() {}\n\t\n\t/**\n\t * A directive links a DOM element with a piece of data,\n\t * which is the result of evaluating an expression.\n\t * It registers a watcher with the expression and calls\n\t * the DOM update function when a change is triggered.\n\t *\n\t * @param {Object} descriptor\n\t *                 - {String} name\n\t *                 - {Object} def\n\t *                 - {String} expression\n\t *                 - {Array<Object>} [filters]\n\t *                 - {Object} [modifiers]\n\t *                 - {Boolean} literal\n\t *                 - {String} attr\n\t *                 - {String} arg\n\t *                 - {String} raw\n\t *                 - {String} [ref]\n\t *                 - {Array<Object>} [interp]\n\t *                 - {Boolean} [hasOneTime]\n\t * @param {Vue} vm\n\t * @param {Node} el\n\t * @param {Vue} [host] - transclusion host component\n\t * @param {Object} [scope] - v-for scope\n\t * @param {Fragment} [frag] - owner fragment\n\t * @constructor\n\t */\n\tfunction Directive(descriptor, vm, el, host, scope, frag) {\n\t  this.vm = vm;\n\t  this.el = el;\n\t  // copy descriptor properties\n\t  this.descriptor = descriptor;\n\t  this.name = descriptor.name;\n\t  this.expression = descriptor.expression;\n\t  this.arg = descriptor.arg;\n\t  this.modifiers = descriptor.modifiers;\n\t  this.filters = descriptor.filters;\n\t  this.literal = this.modifiers && this.modifiers.literal;\n\t  // private\n\t  this._locked = false;\n\t  this._bound = false;\n\t  this._listeners = null;\n\t  // link context\n\t  this._host = host;\n\t  this._scope = scope;\n\t  this._frag = frag;\n\t  // store directives on node in dev mode\n\t  if (false) {\n\t    this.el._vue_directives = this.el._vue_directives || [];\n\t    this.el._vue_directives.push(this);\n\t  }\n\t}\n\t\n\t/**\n\t * Initialize the directive, mixin definition properties,\n\t * setup the watcher, call definition bind() and update()\n\t * if present.\n\t */\n\t\n\tDirective.prototype._bind = function () {\n\t  var name = this.name;\n\t  var descriptor = this.descriptor;\n\t\n\t  // remove attribute\n\t  if ((name !== 'cloak' || this.vm._isCompiled) && this.el && this.el.removeAttribute) {\n\t    var attr = descriptor.attr || 'v-' + name;\n\t    this.el.removeAttribute(attr);\n\t  }\n\t\n\t  // copy def properties\n\t  var def = descriptor.def;\n\t  if (typeof def === 'function') {\n\t    this.update = def;\n\t  } else {\n\t    extend(this, def);\n\t  }\n\t\n\t  // setup directive params\n\t  this._setupParams();\n\t\n\t  // initial bind\n\t  if (this.bind) {\n\t    this.bind();\n\t  }\n\t  this._bound = true;\n\t\n\t  if (this.literal) {\n\t    this.update && this.update(descriptor.raw);\n\t  } else if ((this.expression || this.modifiers) && (this.update || this.twoWay) && !this._checkStatement()) {\n\t    // wrapped updater for context\n\t    var dir = this;\n\t    if (this.update) {\n\t      this._update = function (val, oldVal) {\n\t        if (!dir._locked) {\n\t          dir.update(val, oldVal);\n\t        }\n\t      };\n\t    } else {\n\t      this._update = noop;\n\t    }\n\t    var preProcess = this._preProcess ? bind(this._preProcess, this) : null;\n\t    var postProcess = this._postProcess ? bind(this._postProcess, this) : null;\n\t    var watcher = this._watcher = new Watcher(this.vm, this.expression, this._update, // callback\n\t    {\n\t      filters: this.filters,\n\t      twoWay: this.twoWay,\n\t      deep: this.deep,\n\t      preProcess: preProcess,\n\t      postProcess: postProcess,\n\t      scope: this._scope\n\t    });\n\t    // v-model with inital inline value need to sync back to\n\t    // model instead of update to DOM on init. They would\n\t    // set the afterBind hook to indicate that.\n\t    if (this.afterBind) {\n\t      this.afterBind();\n\t    } else if (this.update) {\n\t      this.update(watcher.value);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Setup all param attributes, e.g. track-by,\n\t * transition-mode, etc...\n\t */\n\t\n\tDirective.prototype._setupParams = function () {\n\t  if (!this.params) {\n\t    return;\n\t  }\n\t  var params = this.params;\n\t  // swap the params array with a fresh object.\n\t  this.params = Object.create(null);\n\t  var i = params.length;\n\t  var key, val, mappedKey;\n\t  while (i--) {\n\t    key = hyphenate(params[i]);\n\t    mappedKey = camelize(key);\n\t    val = getBindAttr(this.el, key);\n\t    if (val != null) {\n\t      // dynamic\n\t      this._setupParamWatcher(mappedKey, val);\n\t    } else {\n\t      // static\n\t      val = getAttr(this.el, key);\n\t      if (val != null) {\n\t        this.params[mappedKey] = val === '' ? true : val;\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Setup a watcher for a dynamic param.\n\t *\n\t * @param {String} key\n\t * @param {String} expression\n\t */\n\t\n\tDirective.prototype._setupParamWatcher = function (key, expression) {\n\t  var self = this;\n\t  var called = false;\n\t  var unwatch = (this._scope || this.vm).$watch(expression, function (val, oldVal) {\n\t    self.params[key] = val;\n\t    // since we are in immediate mode,\n\t    // only call the param change callbacks if this is not the first update.\n\t    if (called) {\n\t      var cb = self.paramWatchers && self.paramWatchers[key];\n\t      if (cb) {\n\t        cb.call(self, val, oldVal);\n\t      }\n\t    } else {\n\t      called = true;\n\t    }\n\t  }, {\n\t    immediate: true,\n\t    user: false\n\t  });(this._paramUnwatchFns || (this._paramUnwatchFns = [])).push(unwatch);\n\t};\n\t\n\t/**\n\t * Check if the directive is a function caller\n\t * and if the expression is a callable one. If both true,\n\t * we wrap up the expression and use it as the event\n\t * handler.\n\t *\n\t * e.g. on-click=\"a++\"\n\t *\n\t * @return {Boolean}\n\t */\n\t\n\tDirective.prototype._checkStatement = function () {\n\t  var expression = this.expression;\n\t  if (expression && this.acceptStatement && !isSimplePath(expression)) {\n\t    var fn = parseExpression(expression).get;\n\t    var scope = this._scope || this.vm;\n\t    var handler = function handler(e) {\n\t      scope.$event = e;\n\t      fn.call(scope, scope);\n\t      scope.$event = null;\n\t    };\n\t    if (this.filters) {\n\t      handler = scope._applyFilters(handler, null, this.filters);\n\t    }\n\t    this.update(handler);\n\t    return true;\n\t  }\n\t};\n\t\n\t/**\n\t * Set the corresponding value with the setter.\n\t * This should only be used in two-way directives\n\t * e.g. v-model.\n\t *\n\t * @param {*} value\n\t * @public\n\t */\n\t\n\tDirective.prototype.set = function (value) {\n\t  /* istanbul ignore else */\n\t  if (this.twoWay) {\n\t    this._withLock(function () {\n\t      this._watcher.set(value);\n\t    });\n\t  } else if (false) {\n\t    warn('Directive.set() can only be used inside twoWay' + 'directives.');\n\t  }\n\t};\n\t\n\t/**\n\t * Execute a function while preventing that function from\n\t * triggering updates on this directive instance.\n\t *\n\t * @param {Function} fn\n\t */\n\t\n\tDirective.prototype._withLock = function (fn) {\n\t  var self = this;\n\t  self._locked = true;\n\t  fn.call(self);\n\t  nextTick(function () {\n\t    self._locked = false;\n\t  });\n\t};\n\t\n\t/**\n\t * Convenience method that attaches a DOM event listener\n\t * to the directive element and autometically tears it down\n\t * during unbind.\n\t *\n\t * @param {String} event\n\t * @param {Function} handler\n\t * @param {Boolean} [useCapture]\n\t */\n\t\n\tDirective.prototype.on = function (event, handler, useCapture) {\n\t  on(this.el, event, handler, useCapture);(this._listeners || (this._listeners = [])).push([event, handler]);\n\t};\n\t\n\t/**\n\t * Teardown the watcher and call unbind.\n\t */\n\t\n\tDirective.prototype._teardown = function () {\n\t  if (this._bound) {\n\t    this._bound = false;\n\t    if (this.unbind) {\n\t      this.unbind();\n\t    }\n\t    if (this._watcher) {\n\t      this._watcher.teardown();\n\t    }\n\t    var listeners = this._listeners;\n\t    var i;\n\t    if (listeners) {\n\t      i = listeners.length;\n\t      while (i--) {\n\t        off(this.el, listeners[i][0], listeners[i][1]);\n\t      }\n\t    }\n\t    var unwatchFns = this._paramUnwatchFns;\n\t    if (unwatchFns) {\n\t      i = unwatchFns.length;\n\t      while (i--) {\n\t        unwatchFns[i]();\n\t      }\n\t    }\n\t    if (false) {\n\t      this.el._vue_directives.$remove(this);\n\t    }\n\t    this.vm = this.el = this._watcher = this._listeners = null;\n\t  }\n\t};\n\t\n\tfunction lifecycleMixin (Vue) {\n\t  /**\n\t   * Update v-ref for component.\n\t   *\n\t   * @param {Boolean} remove\n\t   */\n\t\n\t  Vue.prototype._updateRef = function (remove) {\n\t    var ref = this.$options._ref;\n\t    if (ref) {\n\t      var refs = (this._scope || this._context).$refs;\n\t      if (remove) {\n\t        if (refs[ref] === this) {\n\t          refs[ref] = null;\n\t        }\n\t      } else {\n\t        refs[ref] = this;\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Transclude, compile and link element.\n\t   *\n\t   * If a pre-compiled linker is available, that means the\n\t   * passed in element will be pre-transcluded and compiled\n\t   * as well - all we need to do is to call the linker.\n\t   *\n\t   * Otherwise we need to call transclude/compile/link here.\n\t   *\n\t   * @param {Element} el\n\t   */\n\t\n\t  Vue.prototype._compile = function (el) {\n\t    var options = this.$options;\n\t\n\t    // transclude and init element\n\t    // transclude can potentially replace original\n\t    // so we need to keep reference; this step also injects\n\t    // the template and caches the original attributes\n\t    // on the container node and replacer node.\n\t    var original = el;\n\t    el = transclude(el, options);\n\t    this._initElement(el);\n\t\n\t    // handle v-pre on root node (#2026)\n\t    if (el.nodeType === 1 && getAttr(el, 'v-pre') !== null) {\n\t      return;\n\t    }\n\t\n\t    // root is always compiled per-instance, because\n\t    // container attrs and props can be different every time.\n\t    var contextOptions = this._context && this._context.$options;\n\t    var rootLinker = compileRoot(el, options, contextOptions);\n\t\n\t    // resolve slot distribution\n\t    resolveSlots(this, options._content);\n\t\n\t    // compile and link the rest\n\t    var contentLinkFn;\n\t    var ctor = this.constructor;\n\t    // component compilation can be cached\n\t    // as long as it's not using inline-template\n\t    if (options._linkerCachable) {\n\t      contentLinkFn = ctor.linker;\n\t      if (!contentLinkFn) {\n\t        contentLinkFn = ctor.linker = compile(el, options);\n\t      }\n\t    }\n\t\n\t    // link phase\n\t    // make sure to link root with prop scope!\n\t    var rootUnlinkFn = rootLinker(this, el, this._scope);\n\t    var contentUnlinkFn = contentLinkFn ? contentLinkFn(this, el) : compile(el, options)(this, el);\n\t\n\t    // register composite unlink function\n\t    // to be called during instance destruction\n\t    this._unlinkFn = function () {\n\t      rootUnlinkFn();\n\t      // passing destroying: true to avoid searching and\n\t      // splicing the directives\n\t      contentUnlinkFn(true);\n\t    };\n\t\n\t    // finally replace original\n\t    if (options.replace) {\n\t      replace(original, el);\n\t    }\n\t\n\t    this._isCompiled = true;\n\t    this._callHook('compiled');\n\t  };\n\t\n\t  /**\n\t   * Initialize instance element. Called in the public\n\t   * $mount() method.\n\t   *\n\t   * @param {Element} el\n\t   */\n\t\n\t  Vue.prototype._initElement = function (el) {\n\t    if (isFragment(el)) {\n\t      this._isFragment = true;\n\t      this.$el = this._fragmentStart = el.firstChild;\n\t      this._fragmentEnd = el.lastChild;\n\t      // set persisted text anchors to empty\n\t      if (this._fragmentStart.nodeType === 3) {\n\t        this._fragmentStart.data = this._fragmentEnd.data = '';\n\t      }\n\t      this._fragment = el;\n\t    } else {\n\t      this.$el = el;\n\t    }\n\t    this.$el.__vue__ = this;\n\t    this._callHook('beforeCompile');\n\t  };\n\t\n\t  /**\n\t   * Create and bind a directive to an element.\n\t   *\n\t   * @param {Object} descriptor - parsed directive descriptor\n\t   * @param {Node} node   - target node\n\t   * @param {Vue} [host] - transclusion host component\n\t   * @param {Object} [scope] - v-for scope\n\t   * @param {Fragment} [frag] - owner fragment\n\t   */\n\t\n\t  Vue.prototype._bindDir = function (descriptor, node, host, scope, frag) {\n\t    this._directives.push(new Directive(descriptor, this, node, host, scope, frag));\n\t  };\n\t\n\t  /**\n\t   * Teardown an instance, unobserves the data, unbind all the\n\t   * directives, turn off all the event listeners, etc.\n\t   *\n\t   * @param {Boolean} remove - whether to remove the DOM node.\n\t   * @param {Boolean} deferCleanup - if true, defer cleanup to\n\t   *                                 be called later\n\t   */\n\t\n\t  Vue.prototype._destroy = function (remove, deferCleanup) {\n\t    if (this._isBeingDestroyed) {\n\t      if (!deferCleanup) {\n\t        this._cleanup();\n\t      }\n\t      return;\n\t    }\n\t\n\t    var destroyReady;\n\t    var pendingRemoval;\n\t\n\t    var self = this;\n\t    // Cleanup should be called either synchronously or asynchronoysly as\n\t    // callback of this.$remove(), or if remove and deferCleanup are false.\n\t    // In any case it should be called after all other removing, unbinding and\n\t    // turning of is done\n\t    var cleanupIfPossible = function cleanupIfPossible() {\n\t      if (destroyReady && !pendingRemoval && !deferCleanup) {\n\t        self._cleanup();\n\t      }\n\t    };\n\t\n\t    // remove DOM element\n\t    if (remove && this.$el) {\n\t      pendingRemoval = true;\n\t      this.$remove(function () {\n\t        pendingRemoval = false;\n\t        cleanupIfPossible();\n\t      });\n\t    }\n\t\n\t    this._callHook('beforeDestroy');\n\t    this._isBeingDestroyed = true;\n\t    var i;\n\t    // remove self from parent. only necessary\n\t    // if parent is not being destroyed as well.\n\t    var parent = this.$parent;\n\t    if (parent && !parent._isBeingDestroyed) {\n\t      parent.$children.$remove(this);\n\t      // unregister ref (remove: true)\n\t      this._updateRef(true);\n\t    }\n\t    // destroy all children.\n\t    i = this.$children.length;\n\t    while (i--) {\n\t      this.$children[i].$destroy();\n\t    }\n\t    // teardown props\n\t    if (this._propsUnlinkFn) {\n\t      this._propsUnlinkFn();\n\t    }\n\t    // teardown all directives. this also tearsdown all\n\t    // directive-owned watchers.\n\t    if (this._unlinkFn) {\n\t      this._unlinkFn();\n\t    }\n\t    i = this._watchers.length;\n\t    while (i--) {\n\t      this._watchers[i].teardown();\n\t    }\n\t    // remove reference to self on $el\n\t    if (this.$el) {\n\t      this.$el.__vue__ = null;\n\t    }\n\t\n\t    destroyReady = true;\n\t    cleanupIfPossible();\n\t  };\n\t\n\t  /**\n\t   * Clean up to ensure garbage collection.\n\t   * This is called after the leave transition if there\n\t   * is any.\n\t   */\n\t\n\t  Vue.prototype._cleanup = function () {\n\t    if (this._isDestroyed) {\n\t      return;\n\t    }\n\t    // remove self from owner fragment\n\t    // do it in cleanup so that we can call $destroy with\n\t    // defer right when a fragment is about to be removed.\n\t    if (this._frag) {\n\t      this._frag.children.$remove(this);\n\t    }\n\t    // remove reference from data ob\n\t    // frozen object may not have observer.\n\t    if (this._data && this._data.__ob__) {\n\t      this._data.__ob__.removeVm(this);\n\t    }\n\t    // Clean up references to private properties and other\n\t    // instances. preserve reference to _data so that proxy\n\t    // accessors still work. The only potential side effect\n\t    // here is that mutating the instance after it's destroyed\n\t    // may affect the state of other components that are still\n\t    // observing the same object, but that seems to be a\n\t    // reasonable responsibility for the user rather than\n\t    // always throwing an error on them.\n\t    this.$el = this.$parent = this.$root = this.$children = this._watchers = this._context = this._scope = this._directives = null;\n\t    // call the last hook...\n\t    this._isDestroyed = true;\n\t    this._callHook('destroyed');\n\t    // turn off all instance listeners.\n\t    this.$off();\n\t  };\n\t}\n\t\n\tfunction miscMixin (Vue) {\n\t  /**\n\t   * Apply a list of filter (descriptors) to a value.\n\t   * Using plain for loops here because this will be called in\n\t   * the getter of any watcher with filters so it is very\n\t   * performance sensitive.\n\t   *\n\t   * @param {*} value\n\t   * @param {*} [oldValue]\n\t   * @param {Array} filters\n\t   * @param {Boolean} write\n\t   * @return {*}\n\t   */\n\t\n\t  Vue.prototype._applyFilters = function (value, oldValue, filters, write) {\n\t    var filter, fn, args, arg, offset, i, l, j, k;\n\t    for (i = 0, l = filters.length; i < l; i++) {\n\t      filter = filters[write ? l - i - 1 : i];\n\t      fn = resolveAsset(this.$options, 'filters', filter.name, true);\n\t      if (!fn) continue;\n\t      fn = write ? fn.write : fn.read || fn;\n\t      if (typeof fn !== 'function') continue;\n\t      args = write ? [value, oldValue] : [value];\n\t      offset = write ? 2 : 1;\n\t      if (filter.args) {\n\t        for (j = 0, k = filter.args.length; j < k; j++) {\n\t          arg = filter.args[j];\n\t          args[j + offset] = arg.dynamic ? this.$get(arg.value) : arg.value;\n\t        }\n\t      }\n\t      value = fn.apply(this, args);\n\t    }\n\t    return value;\n\t  };\n\t\n\t  /**\n\t   * Resolve a component, depending on whether the component\n\t   * is defined normally or using an async factory function.\n\t   * Resolves synchronously if already resolved, otherwise\n\t   * resolves asynchronously and caches the resolved\n\t   * constructor on the factory.\n\t   *\n\t   * @param {String|Function} value\n\t   * @param {Function} cb\n\t   */\n\t\n\t  Vue.prototype._resolveComponent = function (value, cb) {\n\t    var factory;\n\t    if (typeof value === 'function') {\n\t      factory = value;\n\t    } else {\n\t      factory = resolveAsset(this.$options, 'components', value, true);\n\t    }\n\t    /* istanbul ignore if */\n\t    if (!factory) {\n\t      return;\n\t    }\n\t    // async component factory\n\t    if (!factory.options) {\n\t      if (factory.resolved) {\n\t        // cached\n\t        cb(factory.resolved);\n\t      } else if (factory.requested) {\n\t        // pool callbacks\n\t        factory.pendingCallbacks.push(cb);\n\t      } else {\n\t        factory.requested = true;\n\t        var cbs = factory.pendingCallbacks = [cb];\n\t        factory.call(this, function resolve(res) {\n\t          if (isPlainObject(res)) {\n\t            res = Vue.extend(res);\n\t          }\n\t          // cache resolved\n\t          factory.resolved = res;\n\t          // invoke callbacks\n\t          for (var i = 0, l = cbs.length; i < l; i++) {\n\t            cbs[i](res);\n\t          }\n\t        }, function reject(reason) {\n\t          (\"production\") !== 'production' && warn('Failed to resolve async component' + (typeof value === 'string' ? ': ' + value : '') + '. ' + (reason ? '\\nReason: ' + reason : ''));\n\t        });\n\t      }\n\t    } else {\n\t      // normal component\n\t      cb(factory);\n\t    }\n\t  };\n\t}\n\t\n\tvar filterRE$1 = /[^|]\\|[^|]/;\n\t\n\tfunction dataAPI (Vue) {\n\t  /**\n\t   * Get the value from an expression on this vm.\n\t   *\n\t   * @param {String} exp\n\t   * @param {Boolean} [asStatement]\n\t   * @return {*}\n\t   */\n\t\n\t  Vue.prototype.$get = function (exp, asStatement) {\n\t    var res = parseExpression(exp);\n\t    if (res) {\n\t      if (asStatement) {\n\t        var self = this;\n\t        return function statementHandler() {\n\t          self.$arguments = toArray(arguments);\n\t          var result = res.get.call(self, self);\n\t          self.$arguments = null;\n\t          return result;\n\t        };\n\t      } else {\n\t        try {\n\t          return res.get.call(this, this);\n\t        } catch (e) {}\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Set the value from an expression on this vm.\n\t   * The expression must be a valid left-hand\n\t   * expression in an assignment.\n\t   *\n\t   * @param {String} exp\n\t   * @param {*} val\n\t   */\n\t\n\t  Vue.prototype.$set = function (exp, val) {\n\t    var res = parseExpression(exp, true);\n\t    if (res && res.set) {\n\t      res.set.call(this, this, val);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Delete a property on the VM\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype.$delete = function (key) {\n\t    del(this._data, key);\n\t  };\n\t\n\t  /**\n\t   * Watch an expression, trigger callback when its\n\t   * value changes.\n\t   *\n\t   * @param {String|Function} expOrFn\n\t   * @param {Function} cb\n\t   * @param {Object} [options]\n\t   *                 - {Boolean} deep\n\t   *                 - {Boolean} immediate\n\t   * @return {Function} - unwatchFn\n\t   */\n\t\n\t  Vue.prototype.$watch = function (expOrFn, cb, options) {\n\t    var vm = this;\n\t    var parsed;\n\t    if (typeof expOrFn === 'string') {\n\t      parsed = parseDirective(expOrFn);\n\t      expOrFn = parsed.expression;\n\t    }\n\t    var watcher = new Watcher(vm, expOrFn, cb, {\n\t      deep: options && options.deep,\n\t      sync: options && options.sync,\n\t      filters: parsed && parsed.filters,\n\t      user: !options || options.user !== false\n\t    });\n\t    if (options && options.immediate) {\n\t      cb.call(vm, watcher.value);\n\t    }\n\t    return function unwatchFn() {\n\t      watcher.teardown();\n\t    };\n\t  };\n\t\n\t  /**\n\t   * Evaluate a text directive, including filters.\n\t   *\n\t   * @param {String} text\n\t   * @param {Boolean} [asStatement]\n\t   * @return {String}\n\t   */\n\t\n\t  Vue.prototype.$eval = function (text, asStatement) {\n\t    // check for filters.\n\t    if (filterRE$1.test(text)) {\n\t      var dir = parseDirective(text);\n\t      // the filter regex check might give false positive\n\t      // for pipes inside strings, so it's possible that\n\t      // we don't get any filters here\n\t      var val = this.$get(dir.expression, asStatement);\n\t      return dir.filters ? this._applyFilters(val, null, dir.filters) : val;\n\t    } else {\n\t      // no filter\n\t      return this.$get(text, asStatement);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Interpolate a piece of template text.\n\t   *\n\t   * @param {String} text\n\t   * @return {String}\n\t   */\n\t\n\t  Vue.prototype.$interpolate = function (text) {\n\t    var tokens = parseText(text);\n\t    var vm = this;\n\t    if (tokens) {\n\t      if (tokens.length === 1) {\n\t        return vm.$eval(tokens[0].value) + '';\n\t      } else {\n\t        return tokens.map(function (token) {\n\t          return token.tag ? vm.$eval(token.value) : token.value;\n\t        }).join('');\n\t      }\n\t    } else {\n\t      return text;\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Log instance data as a plain JS object\n\t   * so that it is easier to inspect in console.\n\t   * This method assumes console is available.\n\t   *\n\t   * @param {String} [path]\n\t   */\n\t\n\t  Vue.prototype.$log = function (path) {\n\t    var data = path ? getPath(this._data, path) : this._data;\n\t    if (data) {\n\t      data = clean(data);\n\t    }\n\t    // include computed fields\n\t    if (!path) {\n\t      var key;\n\t      for (key in this.$options.computed) {\n\t        data[key] = clean(this[key]);\n\t      }\n\t      if (this._props) {\n\t        for (key in this._props) {\n\t          data[key] = clean(this[key]);\n\t        }\n\t      }\n\t    }\n\t    console.log(data);\n\t  };\n\t\n\t  /**\n\t   * \"clean\" a getter/setter converted object into a plain\n\t   * object copy.\n\t   *\n\t   * @param {Object} - obj\n\t   * @return {Object}\n\t   */\n\t\n\t  function clean(obj) {\n\t    return JSON.parse(JSON.stringify(obj));\n\t  }\n\t}\n\t\n\tfunction domAPI (Vue) {\n\t  /**\n\t   * Convenience on-instance nextTick. The callback is\n\t   * auto-bound to the instance, and this avoids component\n\t   * modules having to rely on the global Vue.\n\t   *\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$nextTick = function (fn) {\n\t    nextTick(fn, this);\n\t  };\n\t\n\t  /**\n\t   * Append instance to target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$appendTo = function (target, cb, withTransition) {\n\t    return insert(this, target, cb, withTransition, append, appendWithTransition);\n\t  };\n\t\n\t  /**\n\t   * Prepend instance to target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$prependTo = function (target, cb, withTransition) {\n\t    target = query(target);\n\t    if (target.hasChildNodes()) {\n\t      this.$before(target.firstChild, cb, withTransition);\n\t    } else {\n\t      this.$appendTo(target, cb, withTransition);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Insert instance before target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$before = function (target, cb, withTransition) {\n\t    return insert(this, target, cb, withTransition, beforeWithCb, beforeWithTransition);\n\t  };\n\t\n\t  /**\n\t   * Insert instance after target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$after = function (target, cb, withTransition) {\n\t    target = query(target);\n\t    if (target.nextSibling) {\n\t      this.$before(target.nextSibling, cb, withTransition);\n\t    } else {\n\t      this.$appendTo(target.parentNode, cb, withTransition);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Remove instance from DOM\n\t   *\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$remove = function (cb, withTransition) {\n\t    if (!this.$el.parentNode) {\n\t      return cb && cb();\n\t    }\n\t    var inDocument = this._isAttached && inDoc(this.$el);\n\t    // if we are not in document, no need to check\n\t    // for transitions\n\t    if (!inDocument) withTransition = false;\n\t    var self = this;\n\t    var realCb = function realCb() {\n\t      if (inDocument) self._callHook('detached');\n\t      if (cb) cb();\n\t    };\n\t    if (this._isFragment) {\n\t      removeNodeRange(this._fragmentStart, this._fragmentEnd, this, this._fragment, realCb);\n\t    } else {\n\t      var op = withTransition === false ? removeWithCb : removeWithTransition;\n\t      op(this.$el, this, realCb);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Shared DOM insertion function.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition]\n\t   * @param {Function} op1 - op for non-transition insert\n\t   * @param {Function} op2 - op for transition insert\n\t   * @return vm\n\t   */\n\t\n\t  function insert(vm, target, cb, withTransition, op1, op2) {\n\t    target = query(target);\n\t    var targetIsDetached = !inDoc(target);\n\t    var op = withTransition === false || targetIsDetached ? op1 : op2;\n\t    var shouldCallHook = !targetIsDetached && !vm._isAttached && !inDoc(vm.$el);\n\t    if (vm._isFragment) {\n\t      mapNodeRange(vm._fragmentStart, vm._fragmentEnd, function (node) {\n\t        op(node, target, vm);\n\t      });\n\t      cb && cb();\n\t    } else {\n\t      op(vm.$el, target, vm, cb);\n\t    }\n\t    if (shouldCallHook) {\n\t      vm._callHook('attached');\n\t    }\n\t    return vm;\n\t  }\n\t\n\t  /**\n\t   * Check for selectors\n\t   *\n\t   * @param {String|Element} el\n\t   */\n\t\n\t  function query(el) {\n\t    return typeof el === 'string' ? document.querySelector(el) : el;\n\t  }\n\t\n\t  /**\n\t   * Append operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Node} target\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function append(el, target, vm, cb) {\n\t    target.appendChild(el);\n\t    if (cb) cb();\n\t  }\n\t\n\t  /**\n\t   * InsertBefore operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Node} target\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function beforeWithCb(el, target, vm, cb) {\n\t    before(el, target);\n\t    if (cb) cb();\n\t  }\n\t\n\t  /**\n\t   * Remove operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function removeWithCb(el, vm, cb) {\n\t    remove(el);\n\t    if (cb) cb();\n\t  }\n\t}\n\t\n\tfunction eventsAPI (Vue) {\n\t  /**\n\t   * Listen on the given `event` with `fn`.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$on = function (event, fn) {\n\t    (this._events[event] || (this._events[event] = [])).push(fn);\n\t    modifyListenerCount(this, event, 1);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Adds an `event` listener that will be invoked a single\n\t   * time then automatically removed.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$once = function (event, fn) {\n\t    var self = this;\n\t    function on() {\n\t      self.$off(event, on);\n\t      fn.apply(this, arguments);\n\t    }\n\t    on.fn = fn;\n\t    this.$on(event, on);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Remove the given callback for `event` or all\n\t   * registered callbacks.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$off = function (event, fn) {\n\t    var cbs;\n\t    // all\n\t    if (!arguments.length) {\n\t      if (this.$parent) {\n\t        for (event in this._events) {\n\t          cbs = this._events[event];\n\t          if (cbs) {\n\t            modifyListenerCount(this, event, -cbs.length);\n\t          }\n\t        }\n\t      }\n\t      this._events = {};\n\t      return this;\n\t    }\n\t    // specific event\n\t    cbs = this._events[event];\n\t    if (!cbs) {\n\t      return this;\n\t    }\n\t    if (arguments.length === 1) {\n\t      modifyListenerCount(this, event, -cbs.length);\n\t      this._events[event] = null;\n\t      return this;\n\t    }\n\t    // specific handler\n\t    var cb;\n\t    var i = cbs.length;\n\t    while (i--) {\n\t      cb = cbs[i];\n\t      if (cb === fn || cb.fn === fn) {\n\t        modifyListenerCount(this, event, -1);\n\t        cbs.splice(i, 1);\n\t        break;\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Trigger an event on self.\n\t   *\n\t   * @param {String|Object} event\n\t   * @return {Boolean} shouldPropagate\n\t   */\n\t\n\t  Vue.prototype.$emit = function (event) {\n\t    var isSource = typeof event === 'string';\n\t    event = isSource ? event : event.name;\n\t    var cbs = this._events[event];\n\t    var shouldPropagate = isSource || !cbs;\n\t    if (cbs) {\n\t      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n\t      // this is a somewhat hacky solution to the question raised\n\t      // in #2102: for an inline component listener like <comp @test=\"doThis\">,\n\t      // the propagation handling is somewhat broken. Therefore we\n\t      // need to treat these inline callbacks differently.\n\t      var hasParentCbs = isSource && cbs.some(function (cb) {\n\t        return cb._fromParent;\n\t      });\n\t      if (hasParentCbs) {\n\t        shouldPropagate = false;\n\t      }\n\t      var args = toArray(arguments, 1);\n\t      for (var i = 0, l = cbs.length; i < l; i++) {\n\t        var cb = cbs[i];\n\t        var res = cb.apply(this, args);\n\t        if (res === true && (!hasParentCbs || cb._fromParent)) {\n\t          shouldPropagate = true;\n\t        }\n\t      }\n\t    }\n\t    return shouldPropagate;\n\t  };\n\t\n\t  /**\n\t   * Recursively broadcast an event to all children instances.\n\t   *\n\t   * @param {String|Object} event\n\t   * @param {...*} additional arguments\n\t   */\n\t\n\t  Vue.prototype.$broadcast = function (event) {\n\t    var isSource = typeof event === 'string';\n\t    event = isSource ? event : event.name;\n\t    // if no child has registered for this event,\n\t    // then there's no need to broadcast.\n\t    if (!this._eventsCount[event]) return;\n\t    var children = this.$children;\n\t    var args = toArray(arguments);\n\t    if (isSource) {\n\t      // use object event to indicate non-source emit\n\t      // on children\n\t      args[0] = { name: event, source: this };\n\t    }\n\t    for (var i = 0, l = children.length; i < l; i++) {\n\t      var child = children[i];\n\t      var shouldPropagate = child.$emit.apply(child, args);\n\t      if (shouldPropagate) {\n\t        child.$broadcast.apply(child, args);\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Recursively propagate an event up the parent chain.\n\t   *\n\t   * @param {String} event\n\t   * @param {...*} additional arguments\n\t   */\n\t\n\t  Vue.prototype.$dispatch = function (event) {\n\t    var shouldPropagate = this.$emit.apply(this, arguments);\n\t    if (!shouldPropagate) return;\n\t    var parent = this.$parent;\n\t    var args = toArray(arguments);\n\t    // use object event to indicate non-source emit\n\t    // on parents\n\t    args[0] = { name: event, source: this };\n\t    while (parent) {\n\t      shouldPropagate = parent.$emit.apply(parent, args);\n\t      parent = shouldPropagate ? parent.$parent : null;\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Modify the listener counts on all parents.\n\t   * This bookkeeping allows $broadcast to return early when\n\t   * no child has listened to a certain event.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} event\n\t   * @param {Number} count\n\t   */\n\t\n\t  var hookRE = /^hook:/;\n\t  function modifyListenerCount(vm, event, count) {\n\t    var parent = vm.$parent;\n\t    // hooks do not get broadcasted so no need\n\t    // to do bookkeeping for them\n\t    if (!parent || !count || hookRE.test(event)) return;\n\t    while (parent) {\n\t      parent._eventsCount[event] = (parent._eventsCount[event] || 0) + count;\n\t      parent = parent.$parent;\n\t    }\n\t  }\n\t}\n\t\n\tfunction lifecycleAPI (Vue) {\n\t  /**\n\t   * Set instance target element and kick off the compilation\n\t   * process. The passed in `el` can be a selector string, an\n\t   * existing Element, or a DocumentFragment (for block\n\t   * instances).\n\t   *\n\t   * @param {Element|DocumentFragment|string} el\n\t   * @public\n\t   */\n\t\n\t  Vue.prototype.$mount = function (el) {\n\t    if (this._isCompiled) {\n\t      (\"production\") !== 'production' && warn('$mount() should be called only once.', this);\n\t      return;\n\t    }\n\t    el = query(el);\n\t    if (!el) {\n\t      el = document.createElement('div');\n\t    }\n\t    this._compile(el);\n\t    this._initDOMHooks();\n\t    if (inDoc(this.$el)) {\n\t      this._callHook('attached');\n\t      ready.call(this);\n\t    } else {\n\t      this.$once('hook:attached', ready);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Mark an instance as ready.\n\t   */\n\t\n\t  function ready() {\n\t    this._isAttached = true;\n\t    this._isReady = true;\n\t    this._callHook('ready');\n\t  }\n\t\n\t  /**\n\t   * Teardown the instance, simply delegate to the internal\n\t   * _destroy.\n\t   *\n\t   * @param {Boolean} remove\n\t   * @param {Boolean} deferCleanup\n\t   */\n\t\n\t  Vue.prototype.$destroy = function (remove, deferCleanup) {\n\t    this._destroy(remove, deferCleanup);\n\t  };\n\t\n\t  /**\n\t   * Partially compile a piece of DOM and return a\n\t   * decompile function.\n\t   *\n\t   * @param {Element|DocumentFragment} el\n\t   * @param {Vue} [host]\n\t   * @param {Object} [scope]\n\t   * @param {Fragment} [frag]\n\t   * @return {Function}\n\t   */\n\t\n\t  Vue.prototype.$compile = function (el, host, scope, frag) {\n\t    return compile(el, this.$options, true)(this, el, host, scope, frag);\n\t  };\n\t}\n\t\n\t/**\n\t * The exposed Vue constructor.\n\t *\n\t * API conventions:\n\t * - public API methods/properties are prefixed with `$`\n\t * - internal methods/properties are prefixed with `_`\n\t * - non-prefixed properties are assumed to be proxied user\n\t *   data.\n\t *\n\t * @constructor\n\t * @param {Object} [options]\n\t * @public\n\t */\n\t\n\tfunction Vue(options) {\n\t  this._init(options);\n\t}\n\t\n\t// install internals\n\tinitMixin(Vue);\n\tstateMixin(Vue);\n\teventsMixin(Vue);\n\tlifecycleMixin(Vue);\n\tmiscMixin(Vue);\n\t\n\t// install instance APIs\n\tdataAPI(Vue);\n\tdomAPI(Vue);\n\teventsAPI(Vue);\n\tlifecycleAPI(Vue);\n\t\n\tvar slot = {\n\t\n\t  priority: SLOT,\n\t  params: ['name'],\n\t\n\t  bind: function bind() {\n\t    // this was resolved during component transclusion\n\t    var name = this.params.name || 'default';\n\t    var content = this.vm._slotContents && this.vm._slotContents[name];\n\t    if (!content || !content.hasChildNodes()) {\n\t      this.fallback();\n\t    } else {\n\t      this.compile(content.cloneNode(true), this.vm._context, this.vm);\n\t    }\n\t  },\n\t\n\t  compile: function compile(content, context, host) {\n\t    if (content && context) {\n\t      if (this.el.hasChildNodes() && content.childNodes.length === 1 && content.childNodes[0].nodeType === 1 && content.childNodes[0].hasAttribute('v-if')) {\n\t        // if the inserted slot has v-if\n\t        // inject fallback content as the v-else\n\t        var elseBlock = document.createElement('template');\n\t        elseBlock.setAttribute('v-else', '');\n\t        elseBlock.innerHTML = this.el.innerHTML;\n\t        // the else block should be compiled in child scope\n\t        elseBlock._context = this.vm;\n\t        content.appendChild(elseBlock);\n\t      }\n\t      var scope = host ? host._scope : this._scope;\n\t      this.unlink = context.$compile(content, host, scope, this._frag);\n\t    }\n\t    if (content) {\n\t      replace(this.el, content);\n\t    } else {\n\t      remove(this.el);\n\t    }\n\t  },\n\t\n\t  fallback: function fallback() {\n\t    this.compile(extractContent(this.el, true), this.vm);\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.unlink) {\n\t      this.unlink();\n\t    }\n\t  }\n\t};\n\t\n\tvar partial = {\n\t\n\t  priority: PARTIAL,\n\t\n\t  params: ['name'],\n\t\n\t  // watch changes to name for dynamic partials\n\t  paramWatchers: {\n\t    name: function name(value) {\n\t      vIf.remove.call(this);\n\t      if (value) {\n\t        this.insert(value);\n\t      }\n\t    }\n\t  },\n\t\n\t  bind: function bind() {\n\t    this.anchor = createAnchor('v-partial');\n\t    replace(this.el, this.anchor);\n\t    this.insert(this.params.name);\n\t  },\n\t\n\t  insert: function insert(id) {\n\t    var partial = resolveAsset(this.vm.$options, 'partials', id, true);\n\t    if (partial) {\n\t      this.factory = new FragmentFactory(this.vm, partial);\n\t      vIf.insert.call(this);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.frag) {\n\t      this.frag.destroy();\n\t    }\n\t  }\n\t};\n\t\n\tvar elementDirectives = {\n\t  slot: slot,\n\t  partial: partial\n\t};\n\t\n\tvar convertArray = vFor._postProcess;\n\t\n\t/**\n\t * Limit filter for arrays\n\t *\n\t * @param {Number} n\n\t * @param {Number} offset (Decimal expected)\n\t */\n\t\n\tfunction limitBy(arr, n, offset) {\n\t  offset = offset ? parseInt(offset, 10) : 0;\n\t  n = toNumber(n);\n\t  return typeof n === 'number' ? arr.slice(offset, offset + n) : arr;\n\t}\n\t\n\t/**\n\t * Filter filter for arrays\n\t *\n\t * @param {String} search\n\t * @param {String} [delimiter]\n\t * @param {String} ...dataKeys\n\t */\n\t\n\tfunction filterBy(arr, search, delimiter) {\n\t  arr = convertArray(arr);\n\t  if (search == null) {\n\t    return arr;\n\t  }\n\t  if (typeof search === 'function') {\n\t    return arr.filter(search);\n\t  }\n\t  // cast to lowercase string\n\t  search = ('' + search).toLowerCase();\n\t  // allow optional `in` delimiter\n\t  // because why not\n\t  var n = delimiter === 'in' ? 3 : 2;\n\t  // extract and flatten keys\n\t  var keys = Array.prototype.concat.apply([], toArray(arguments, n));\n\t  var res = [];\n\t  var item, key, val, j;\n\t  for (var i = 0, l = arr.length; i < l; i++) {\n\t    item = arr[i];\n\t    val = item && item.$value || item;\n\t    j = keys.length;\n\t    if (j) {\n\t      while (j--) {\n\t        key = keys[j];\n\t        if (key === '$key' && contains(item.$key, search) || contains(getPath(val, key), search)) {\n\t          res.push(item);\n\t          break;\n\t        }\n\t      }\n\t    } else if (contains(item, search)) {\n\t      res.push(item);\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Filter filter for arrays\n\t *\n\t * @param {String|Array<String>|Function} ...sortKeys\n\t * @param {Number} [order]\n\t */\n\t\n\tfunction orderBy(arr) {\n\t  var comparator = null;\n\t  var sortKeys = undefined;\n\t  arr = convertArray(arr);\n\t\n\t  // determine order (last argument)\n\t  var args = toArray(arguments, 1);\n\t  var order = args[args.length - 1];\n\t  if (typeof order === 'number') {\n\t    order = order < 0 ? -1 : 1;\n\t    args = args.length > 1 ? args.slice(0, -1) : args;\n\t  } else {\n\t    order = 1;\n\t  }\n\t\n\t  // determine sortKeys & comparator\n\t  var firstArg = args[0];\n\t  if (!firstArg) {\n\t    return arr;\n\t  } else if (typeof firstArg === 'function') {\n\t    // custom comparator\n\t    comparator = function (a, b) {\n\t      return firstArg(a, b) * order;\n\t    };\n\t  } else {\n\t    // string keys. flatten first\n\t    sortKeys = Array.prototype.concat.apply([], args);\n\t    comparator = function (a, b, i) {\n\t      i = i || 0;\n\t      return i >= sortKeys.length - 1 ? baseCompare(a, b, i) : baseCompare(a, b, i) || comparator(a, b, i + 1);\n\t    };\n\t  }\n\t\n\t  function baseCompare(a, b, sortKeyIndex) {\n\t    var sortKey = sortKeys[sortKeyIndex];\n\t    if (sortKey) {\n\t      if (sortKey !== '$key') {\n\t        if (isObject(a) && '$value' in a) a = a.$value;\n\t        if (isObject(b) && '$value' in b) b = b.$value;\n\t      }\n\t      a = isObject(a) ? getPath(a, sortKey) : a;\n\t      b = isObject(b) ? getPath(b, sortKey) : b;\n\t    }\n\t    return a === b ? 0 : a > b ? order : -order;\n\t  }\n\t\n\t  // sort on a copy to avoid mutating original array\n\t  return arr.slice().sort(comparator);\n\t}\n\t\n\t/**\n\t * String contain helper\n\t *\n\t * @param {*} val\n\t * @param {String} search\n\t */\n\t\n\tfunction contains(val, search) {\n\t  var i;\n\t  if (isPlainObject(val)) {\n\t    var keys = Object.keys(val);\n\t    i = keys.length;\n\t    while (i--) {\n\t      if (contains(val[keys[i]], search)) {\n\t        return true;\n\t      }\n\t    }\n\t  } else if (isArray(val)) {\n\t    i = val.length;\n\t    while (i--) {\n\t      if (contains(val[i], search)) {\n\t        return true;\n\t      }\n\t    }\n\t  } else if (val != null) {\n\t    return val.toString().toLowerCase().indexOf(search) > -1;\n\t  }\n\t}\n\t\n\tvar digitsRE = /(\\d{3})(?=\\d)/g;\n\t\n\t// asset collections must be a plain object.\n\tvar filters = {\n\t\n\t  orderBy: orderBy,\n\t  filterBy: filterBy,\n\t  limitBy: limitBy,\n\t\n\t  /**\n\t   * Stringify value.\n\t   *\n\t   * @param {Number} indent\n\t   */\n\t\n\t  json: {\n\t    read: function read(value, indent) {\n\t      return typeof value === 'string' ? value : JSON.stringify(value, null, Number(indent) || 2);\n\t    },\n\t    write: function write(value) {\n\t      try {\n\t        return JSON.parse(value);\n\t      } catch (e) {\n\t        return value;\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * 'abc' => 'Abc'\n\t   */\n\t\n\t  capitalize: function capitalize(value) {\n\t    if (!value && value !== 0) return '';\n\t    value = value.toString();\n\t    return value.charAt(0).toUpperCase() + value.slice(1);\n\t  },\n\t\n\t  /**\n\t   * 'abc' => 'ABC'\n\t   */\n\t\n\t  uppercase: function uppercase(value) {\n\t    return value || value === 0 ? value.toString().toUpperCase() : '';\n\t  },\n\t\n\t  /**\n\t   * 'AbC' => 'abc'\n\t   */\n\t\n\t  lowercase: function lowercase(value) {\n\t    return value || value === 0 ? value.toString().toLowerCase() : '';\n\t  },\n\t\n\t  /**\n\t   * 12345 => $12,345.00\n\t   *\n\t   * @param {String} sign\n\t   * @param {Number} decimals Decimal places\n\t   */\n\t\n\t  currency: function currency(value, _currency, decimals) {\n\t    value = parseFloat(value);\n\t    if (!isFinite(value) || !value && value !== 0) return '';\n\t    _currency = _currency != null ? _currency : '$';\n\t    decimals = decimals != null ? decimals : 2;\n\t    var stringified = Math.abs(value).toFixed(decimals);\n\t    var _int = decimals ? stringified.slice(0, -1 - decimals) : stringified;\n\t    var i = _int.length % 3;\n\t    var head = i > 0 ? _int.slice(0, i) + (_int.length > 3 ? ',' : '') : '';\n\t    var _float = decimals ? stringified.slice(-1 - decimals) : '';\n\t    var sign = value < 0 ? '-' : '';\n\t    return sign + _currency + head + _int.slice(i).replace(digitsRE, '$1,') + _float;\n\t  },\n\t\n\t  /**\n\t   * 'item' => 'items'\n\t   *\n\t   * @params\n\t   *  an array of strings corresponding to\n\t   *  the single, double, triple ... forms of the word to\n\t   *  be pluralized. When the number to be pluralized\n\t   *  exceeds the length of the args, it will use the last\n\t   *  entry in the array.\n\t   *\n\t   *  e.g. ['single', 'double', 'triple', 'multiple']\n\t   */\n\t\n\t  pluralize: function pluralize(value) {\n\t    var args = toArray(arguments, 1);\n\t    return args.length > 1 ? args[value % 10 - 1] || args[args.length - 1] : args[0] + (value === 1 ? '' : 's');\n\t  },\n\t\n\t  /**\n\t   * Debounce a handler function.\n\t   *\n\t   * @param {Function} handler\n\t   * @param {Number} delay = 300\n\t   * @return {Function}\n\t   */\n\t\n\t  debounce: function debounce(handler, delay) {\n\t    if (!handler) return;\n\t    if (!delay) {\n\t      delay = 300;\n\t    }\n\t    return _debounce(handler, delay);\n\t  }\n\t};\n\t\n\tfunction installGlobalAPI (Vue) {\n\t  /**\n\t   * Vue and every constructor that extends Vue has an\n\t   * associated options object, which can be accessed during\n\t   * compilation steps as `this.constructor.options`.\n\t   *\n\t   * These can be seen as the default options of every\n\t   * Vue instance.\n\t   */\n\t\n\t  Vue.options = {\n\t    directives: directives,\n\t    elementDirectives: elementDirectives,\n\t    filters: filters,\n\t    transitions: {},\n\t    components: {},\n\t    partials: {},\n\t    replace: true\n\t  };\n\t\n\t  /**\n\t   * Expose useful internals\n\t   */\n\t\n\t  Vue.util = util;\n\t  Vue.config = config;\n\t  Vue.set = set;\n\t  Vue['delete'] = del;\n\t  Vue.nextTick = nextTick;\n\t\n\t  /**\n\t   * The following are exposed for advanced usage / plugins\n\t   */\n\t\n\t  Vue.compiler = compiler;\n\t  Vue.FragmentFactory = FragmentFactory;\n\t  Vue.internalDirectives = internalDirectives;\n\t  Vue.parsers = {\n\t    path: path,\n\t    text: text,\n\t    template: template,\n\t    directive: directive,\n\t    expression: expression\n\t  };\n\t\n\t  /**\n\t   * Each instance constructor, including Vue, has a unique\n\t   * cid. This enables us to create wrapped \"child\n\t   * constructors\" for prototypal inheritance and cache them.\n\t   */\n\t\n\t  Vue.cid = 0;\n\t  var cid = 1;\n\t\n\t  /**\n\t   * Class inheritance\n\t   *\n\t   * @param {Object} extendOptions\n\t   */\n\t\n\t  Vue.extend = function (extendOptions) {\n\t    extendOptions = extendOptions || {};\n\t    var Super = this;\n\t    var isFirstExtend = Super.cid === 0;\n\t    if (isFirstExtend && extendOptions._Ctor) {\n\t      return extendOptions._Ctor;\n\t    }\n\t    var name = extendOptions.name || Super.options.name;\n\t    if (false) {\n\t      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n\t        warn('Invalid component name: \"' + name + '\". Component names ' + 'can only contain alphanumeric characaters and the hyphen.');\n\t        name = null;\n\t      }\n\t    }\n\t    var Sub = createClass(name || 'VueComponent');\n\t    Sub.prototype = Object.create(Super.prototype);\n\t    Sub.prototype.constructor = Sub;\n\t    Sub.cid = cid++;\n\t    Sub.options = mergeOptions(Super.options, extendOptions);\n\t    Sub['super'] = Super;\n\t    // allow further extension\n\t    Sub.extend = Super.extend;\n\t    // create asset registers, so extended classes\n\t    // can have their private assets too.\n\t    config._assetTypes.forEach(function (type) {\n\t      Sub[type] = Super[type];\n\t    });\n\t    // enable recursive self-lookup\n\t    if (name) {\n\t      Sub.options.components[name] = Sub;\n\t    }\n\t    // cache constructor\n\t    if (isFirstExtend) {\n\t      extendOptions._Ctor = Sub;\n\t    }\n\t    return Sub;\n\t  };\n\t\n\t  /**\n\t   * A function that returns a sub-class constructor with the\n\t   * given name. This gives us much nicer output when\n\t   * logging instances in the console.\n\t   *\n\t   * @param {String} name\n\t   * @return {Function}\n\t   */\n\t\n\t  function createClass(name) {\n\t    /* eslint-disable no-new-func */\n\t    return new Function('return function ' + classify(name) + ' (options) { this._init(options) }')();\n\t    /* eslint-enable no-new-func */\n\t  }\n\t\n\t  /**\n\t   * Plugin system\n\t   *\n\t   * @param {Object} plugin\n\t   */\n\t\n\t  Vue.use = function (plugin) {\n\t    /* istanbul ignore if */\n\t    if (plugin.installed) {\n\t      return;\n\t    }\n\t    // additional parameters\n\t    var args = toArray(arguments, 1);\n\t    args.unshift(this);\n\t    if (typeof plugin.install === 'function') {\n\t      plugin.install.apply(plugin, args);\n\t    } else {\n\t      plugin.apply(null, args);\n\t    }\n\t    plugin.installed = true;\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Apply a global mixin by merging it into the default\n\t   * options.\n\t   */\n\t\n\t  Vue.mixin = function (mixin) {\n\t    Vue.options = mergeOptions(Vue.options, mixin);\n\t  };\n\t\n\t  /**\n\t   * Create asset registration methods with the following\n\t   * signature:\n\t   *\n\t   * @param {String} id\n\t   * @param {*} definition\n\t   */\n\t\n\t  config._assetTypes.forEach(function (type) {\n\t    Vue[type] = function (id, definition) {\n\t      if (!definition) {\n\t        return this.options[type + 's'][id];\n\t      } else {\n\t        /* istanbul ignore if */\n\t        if (false) {\n\t          if (type === 'component' && (commonTagRE.test(id) || reservedTagRE.test(id))) {\n\t            warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + id);\n\t          }\n\t        }\n\t        if (type === 'component' && isPlainObject(definition)) {\n\t          definition.name = id;\n\t          definition = Vue.extend(definition);\n\t        }\n\t        this.options[type + 's'][id] = definition;\n\t        return definition;\n\t      }\n\t    };\n\t  });\n\t\n\t  // expose internal transition API\n\t  extend(Vue.transition, transition);\n\t}\n\t\n\tinstallGlobalAPI(Vue);\n\t\n\tVue.version = '1.0.24';\n\t\n\t// devtools global hook\n\t/* istanbul ignore next */\n\tsetTimeout(function () {\n\t  if (config.devtools) {\n\t    if (devtools) {\n\t      devtools.emit('init', Vue);\n\t    } else if (false) {\n\t      console.log('Download the Vue Devtools for a better development experience:\\n' + 'https://github.com/vuejs/vue-devtools');\n\t    }\n\t  }\n\t}, 0);\n\t\n\tmodule.exports = Vue;\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** build.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap e565c39187a041a64be0\n **/","import Vue from 'vue'\nimport VueRouter from 'vue-router';\n\n// components\nimport app from './components/app.vue'\n\n// views\nimport searchView from './views/search-view.vue';\nimport movieView from './views/movie-view.vue';\n\n// create router instance and define routes\nVue.use(VueRouter);\n\nlet router = new VueRouter({\n  hashbang: false,\n  history: true,\n  root: '/',\n  saveScrollPosition: true\n});\n\nrouter.map({\n  '/': {\n    component: searchView,\n    name: 'search'\n  },\n  '/movie/:id': {\n    component: movieView,\n    name: 'movie'\n  }\n});\n\n// start app\nrouter.start(app, 'app');\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/main.js\n **/","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n// css base code, injected by the css-loader\r\nmodule.exports = function() {\r\n\tvar list = [];\r\n\r\n\t// return the list of modules as css string\r\n\tlist.toString = function toString() {\r\n\t\tvar result = [];\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar item = this[i];\r\n\t\t\tif(item[2]) {\r\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\r\n\t\t\t} else {\r\n\t\t\t\tresult.push(item[1]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result.join(\"\");\r\n\t};\r\n\r\n\t// import a list of modules into the list\r\n\tlist.i = function(modules, mediaQuery) {\r\n\t\tif(typeof modules === \"string\")\r\n\t\t\tmodules = [[null, modules, \"\"]];\r\n\t\tvar alreadyImportedModules = {};\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar id = this[i][0];\r\n\t\t\tif(typeof id === \"number\")\r\n\t\t\t\talreadyImportedModules[id] = true;\r\n\t\t}\r\n\t\tfor(i = 0; i < modules.length; i++) {\r\n\t\t\tvar item = modules[i];\r\n\t\t\t// skip already imported module\r\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\r\n\t\t\t//  when a module is imported multiple times with different media queries.\r\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\r\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\r\n\t\t\t\tif(mediaQuery && !item[2]) {\r\n\t\t\t\t\titem[2] = mediaQuery;\r\n\t\t\t\t} else if(mediaQuery) {\r\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\r\n\t\t\t\t}\r\n\t\t\t\tlist.push(item);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\treturn list;\r\n};\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/css-loader/lib/css-base.js\n ** module id = 1\n ** module chunks = 0\n **/","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\nvar stylesInDom = {},\n\tmemoize = function(fn) {\n\t\tvar memo;\n\t\treturn function () {\n\t\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\t\treturn memo;\n\t\t};\n\t},\n\tisOldIE = memoize(function() {\n\t\treturn /msie [6-9]\\b/.test(window.navigator.userAgent.toLowerCase());\n\t}),\n\tgetHeadElement = memoize(function () {\n\t\treturn document.head || document.getElementsByTagName(\"head\")[0];\n\t}),\n\tsingletonElement = null,\n\tsingletonCounter = 0,\n\tstyleElementsInsertedAtTop = [];\n\nmodule.exports = function(list, options) {\n\tif(typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif(typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (typeof options.singleton === \"undefined\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the bottom of <head>.\n\tif (typeof options.insertAt === \"undefined\") options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list);\n\taddStylesToDom(styles, options);\n\n\treturn function update(newList) {\n\t\tvar mayRemove = [];\n\t\tfor(var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\t\tfor(var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\n\t\t\t\t\tdomStyle.parts[j]();\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n}\n\nfunction addStylesToDom(styles, options) {\n\tfor(var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles(list) {\n\tvar styles = [];\n\tvar newStyles = {};\n\tfor(var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\t\tif(!newStyles[id])\n\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse\n\t\t\tnewStyles[id].parts.push(part);\n\t}\n\treturn styles;\n}\n\nfunction insertStyleElement(options, styleElement) {\n\tvar head = getHeadElement();\n\tvar lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];\n\tif (options.insertAt === \"top\") {\n\t\tif(!lastStyleElementInsertedAtTop) {\n\t\t\thead.insertBefore(styleElement, head.firstChild);\n\t\t} else if(lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\thead.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\thead.appendChild(styleElement);\n\t\t}\n\t\tstyleElementsInsertedAtTop.push(styleElement);\n\t} else if (options.insertAt === \"bottom\") {\n\t\thead.appendChild(styleElement);\n\t} else {\n\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\n\t}\n}\n\nfunction removeStyleElement(styleElement) {\n\tstyleElement.parentNode.removeChild(styleElement);\n\tvar idx = styleElementsInsertedAtTop.indexOf(styleElement);\n\tif(idx >= 0) {\n\t\tstyleElementsInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement(options) {\n\tvar styleElement = document.createElement(\"style\");\n\tstyleElement.type = \"text/css\";\n\tinsertStyleElement(options, styleElement);\n\treturn styleElement;\n}\n\nfunction addStyle(obj, options) {\n\tvar styleElement, update, remove;\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\t\tstyleElement = singletonElement || (singletonElement = createStyleElement(options));\n\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\n\t} else {\n\t\tstyleElement = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, styleElement);\n\t\tremove = function() {\n\t\t\tremoveStyleElement(styleElement);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle(newObj) {\n\t\tif(newObj) {\n\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\n\t\t\t\treturn;\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag(styleElement, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (styleElement.styleSheet) {\n\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = styleElement.childNodes;\n\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\n\t\tif (childNodes.length) {\n\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyleElement.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag(styleElement, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\tvar sourceMap = obj.sourceMap;\n\n\tif (media) {\n\t\tstyleElement.setAttribute(\"media\", media);\n\t}\n\n\tif (sourceMap) {\n\t\t// https://developer.chrome.com/devtools/docs/javascript-debugging\n\t\t// this makes source maps inside style tags work properly in Chrome\n\t\tcss += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */';\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tif (styleElement.styleSheet) {\n\t\tstyleElement.styleSheet.cssText = css;\n\t} else {\n\t\twhile(styleElement.firstChild) {\n\t\t\tstyleElement.removeChild(styleElement.firstChild);\n\t\t}\n\t\tstyleElement.appendChild(document.createTextNode(css));\n\t}\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-style-loader/addStyles.js\n ** module id = 2\n ** module chunks = 0\n **/","const baseUrl = 'https://www.omdbapi.com/?type=movie';\n\nexport { baseUrl };\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/helpers/constants.js\n **/","import { baseUrl } from '../helpers/constants';\nimport cormoran from 'cormoran';\n\ncormoran\n  .query('&callback')\n  .naming('searchJSONPCallback');\n\n/*\n * Given a movie title returns a pending Promise\n * with the results from the OMDB API\n */\nfunction search(title, page) {\n  const url = `${ baseUrl }&s=${ encodeURI(title) }&page=${ page || 1 }`;\n\n  return cormoran.get(url);\n}\n\nexport default search;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/services/search.js\n **/","(function(root, factory) {\n    'use strict';\n    if (typeof define === 'function' && define.amd) {\n        define(function() {\n            return factory(root);\n        });\n    } else if (typeof exports === 'object') {\n        module.exports = factory(root);\n    } else {\n        root.cormoran = factory(root);\n    }\n})(self, function(root) {\n    'use strict';\n\n    var cName,\n        cNumber,\n        query,\n        cormoran = {},\n        _doc = document,\n        ref = _doc.getElementsByTagName('script')[0] || _doc.head || _doc.body;\n\n    cormoran.get = function(url) {\n        return new Promise(function(resolve, reject) {\n\n            // if config object doesn't contain url and\n            // a success callback method throw an error\n            if (typeof url !== 'string') {\n                reject('Invalid url');\n            }\n\n            var script = _doc.createElement('script'),\n                scope = root,\n                scopeQuery = 'self.',\n                callbackId = cName + cNumber;\n\n            // increase callback number\n            cNumber++;\n\n            function onScriptLoaded() { // eslint-disable-line func-style\n                // unable callback and data ref\n                delete scope[callbackId];\n\n                // erase script element\n                script.parentNode.removeChild(script);\n            }\n\n            // handle success\n            scope[callbackId] = function(data) {\n                resolve(data);\n                onScriptLoaded();\n            };\n\n            // handle error\n            script.onerror = function(error) {\n                reject(error);\n                onScriptLoaded();\n            };\n\n            script.src = url + query + '=' + scopeQuery + callbackId;\n\n            // insert strategy supported on Paul Irish post:\n            // http://www.paulirish.com/2011/surefire-dom-element-insertion/\n            ref.parentNode.insertBefore(script, ref);\n        });\n    };\n\n    cormoran.naming = function(str) {\n        if (typeof str !== 'string') {\n            throw new Error('Callback name must be a string');\n        } else {\n            cName = str;\n            cNumber = 0;\n            return cormoran;\n        }\n    };\n\n    cormoran.query = function(str) {\n        if (typeof str !== 'string') {\n            throw new Error('Query name must be a string');\n        } else {\n            query = str;\n            return cormoran;\n        }\n    };\n\n    // set default configuration\n    cormoran.naming('cormoranCallback');\n    cormoran.query('?callback');\n\n    return cormoran;\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/cormoran/dist/cormoran.js\n ** module id = 6\n ** module chunks = 0\n **/","import { baseUrl } from '../helpers/constants';\nimport cormoran from 'cormoran';\n\ncormoran\n  .query('&callback')\n  .naming('movieJSONPCallback');\n\n/*\n * Given a movie id returns a pending Promise\n * with the result from the OMDB API\n */\nfunction movie(id) {\n  const url = `${ baseUrl }&i=${ id }`;\n\n  return cormoran.get(url);\n}\n\nexport default movie;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/services/movie.js\n **/","<template>\n  <!-- SVG ICONS -->\n  <svg style=\"display:none\">\n    <defs>\n      <g id=\"action\">\n        <path d=\"M2.01 21L23 12 2.01 3 2 10l15 2-15 2z\"/>\n        <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n      </g>\n      <g id=\"back\">\n        <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n        <path d=\"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\"/>\n      </g>\n      <g id=\"search\">\n        <path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"/>\n        <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n      </g>\n    </defs>\n  </svg>\n\n  <!-- APP -->\n  <div id=\"app\">\n    <loading-bar :visible=\"loading\"></loading-bar>\n    <header>\n      <h1>Movies</h1>\n\n      <h2 v-show=\"$route.name === 'search'\">Look up fast information about your favorite titles</h2>\n\n      <h2 v-show=\"$route.name === 'movie'\">\n        <a v-link=\"{ path: '/' }\" class=\"back\">\n          <svg class=\"icon\" viewBox=\"0 0 24 24\" height=\"24\" width=\"24\">\n            <use xlink:href=\"#back\"></use>\n          </svg>\n          <span>Back to Search</span>\n        </a>\n      </h2>\n\n    </header>\n    <main class=\"view\">\n      <router-view></router-view>\n    </main>\n  </div>\n</template>\n\n<script>\nimport loadingBar from './loading-bar.vue';\n\nexport default {\n  data() {\n    return {\n      loading: true\n    }\n  },\n  components: {\n    loadingBar\n  }\n}\n</script>\n\n<style lang=\"less\">\n@import '../styles/normalize.less';\n@import '../styles/variables.less';\n\n// GENERAL STYLES\nbody {\n  background-color: @background-medium;\n  color: @text-dark;\n  font-family: 'Raleway', sans-serif;\n  font-size: 14px;\n  letter-spacing: .015em;\n\n  text-rendering: optimizeLegibility;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\nhtml {\n  box-sizing: border-box;\n}\n\n* {\n  box-sizing: inherit;\n\n  &:before, &:after {\n    box-sizing: inherit;\n  }\n}\n\nimg {\n  max-width: 100%;\n}\n\n#app {\n  padding: 0 1em 2em;\n}\n\nheader {\n  margin: 0 0 45px;\n}\n\nh1 {\n  font-weight: 100;\n  line-height: 1.1;\n  margin-bottom: 0;\n}\n\nh2 {\n  font-size: 1em;\n  font-weight: 800;\n  height: 25px;\n  line-height: 25px;\n}\n\nh2 span {\n  vertical-align: middle;\n}\n\n.back {\n  color: inherit;\n  text-decoration: none;\n}\n\n// BIG PHONES AND TABLETS\n@media (min-width: @x-medium) {\n  body {\n    font-size: 16px;\n  }\n\n  #app {\n    padding-left: 2em;\n    padding-right: 2em;\n  }\n}\n\n.card {\n  margin: auto;\n  max-width: 640px;\n  padding: 10px;\n}\n\n.card:not(.hollow) {\n  background-color: @background-light;\n}\n\n.icon {\n  vertical-align: middle;\n  fill: currentColor;\n}\n\n// DESKTOP\n@media (min-width: @x-desktop) {\n  body {\n    font-size: 18px;\n  }\n\n  header {\n    margin-bottom: 60px;\n  }\n\n  h1 {\n    font-size: 3em;\n  }\n\n  .card {\n    padding: 35px;\n  }\n}\n</style>\n\n\n\n/** WEBPACK FOOTER **\n ** app.vue?6e9706a8\n **/","<template>\n  <div class=\"progress\" :class=\"{ 'visible': visible }\">\n    <div class=\"indeterminate\"></div>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: {\n    visible: {\n      type: Boolean,\n      default() {\n        return false\n      }\n    }\n  }\n}\n</script>\n\n<style lang=\"less\" scoped>\n@import '../styles/variables.less';\n\n.progress {\n  height: 4px;\n  opacity: 0;\n  overflow: hidden;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  transition: opacity .15s ease;\n\n  &.visible {\n    opacity: 1;\n  }\n}\n\n.indeterminate {\n  background-color: @accent;\n  width: 70%;\n\n  &:before,\n  &:after {\n    -moz-animation: indeterminate 1s cubic-bezier(.65, .815, .735, .395) infinite;\n    -webkit-animation: indeterminate 1s cubic-bezier(.65, .815, .735, .395) infinite;\n    animation: indeterminate 1s cubic-bezier(.65, .815, .735, .395) infinite;\n    content: '';\n    bottom: 0;\n    top: 0;\n    position: absolute;\n    background-color: inherit;\n    left: 0;\n    will-change: left,right;\n  }\n}\n\n@-webkit-keyframes indeterminate {\n\t0% {\n\t\tleft:-35%;\n\t\tright:100%\n\t}\n\t100%,60% {\n\t\tleft:100%;\n\t\tright:-90%\n\t}\n}\n\n@-moz-keyframes indeterminate {\n\t0% {\n\t\tleft:-35%;\n\t\tright:100%\n\t}\n\t100%,60% {\n\t\tleft:100%;\n\t\tright:-90%\n\t}\n}\n\n@keyframes indeterminate {\n\t0% {\n\t\tleft:-35%;\n\t\tright:100%\n\t}\n\t100%,60% {\n\t\tleft:100%;\n\t\tright:-90%\n\t}\n}\n</style>\n\n\n\n/** WEBPACK FOOTER **\n ** loading-bar.vue?5f5be321\n **/","<template>\n    <h3 class=\"movie__title\" v-text=\"movie.Title\"></h3>\n    <dl class=\"movie__data\">\n      <dt>Released</dt>\n      <dd v-text=\"movie.Released\"></dd>\n      <dt>Runtime</dt>\n      <dd v-text=\"movie.Runtime\"></dd>\n      <dt v-if=\"movie.Director !== 'N/A'\">Director</dt>\n      <dd v-if=\"movie.Director !== 'N/A'\" v-text=\"movie.Director\"></dd>\n      <dt>Cast</dt>\n      <dd v-text=\"movie.Actors\"></dd>\n      <dt>IMDb Rating</dt>\n      <dd v-text=\"movie.imdbRating\"></dd>\n    </dl>\n    <img :src=\"movie.Poster\" alt=\"\" class=\"movie__thumb\" v-if=\"movie.Poster !== 'N/A'\">\n    <p class=\"movie__plot\">\n      <span class=\"movie__plot__label\">Plot</span>\n      <span v-text=\"movie.Plot\"></span>\n    </p>\n</template>\n\n<script>\nexport default {\n  props: {\n    movie: {\n      type: Object,\n      default() {\n        return {};\n      }\n    }\n  }\n}\n</script>\n\n<style lang=\"less\" scoped>\n@import '../styles/variables.less';\n\n.movie__title {\n  font-size: 1.45em;\n  margin: 0 0 .67em;\n}\n\n.movie__data {\n  clear: both;\n\n  dt {\n    color: @accent;\n    display: inline-block;\n    .label();\n  }\n\n  dd {\n    display: inline;\n    margin: 0;\n\n    &:after {\n      color: @secondary;\n      content: '/';\n      font-weight: 400;\n      margin: 0 5px 0 8px;\n    }\n\n    &:last-child {\n\n      &:after {\n        display: none;\n      }\n    }\n  }\n}\n\n.movie__plot__label {\n  color: @secondary;\n  .label();\n}\n\n.movie__plot {\n  margin-top: -.25em;\n}\n\n.movie__thumb {\n  background-color: @secondary;\n  float: left;\n  margin: 0 25px 10px 0;\n  min-height: 100px;\n  width: 100px;\n}\n\n\n// BIG PHONES AND TABLETS\n@media (min-width: @x-medium) {\n  .movie__thumb {\n    width: 150px;\n  }\n\n  .movie__plot {\n    font-size: .9em;\n  }\n}\n\n// DESKTOP\n@media (min-width: @x-desktop) {\n  .movie__thumb {\n    width: 200px;\n  }\n}\n</style>\n\n\n\n/** WEBPACK FOOTER **\n ** movie-box.vue?3a910783\n **/","<template>\n  <form action=\"?\" class=\"search__form\" @submit=\"onSearch\">\n    <input type=\"text\" class=\"search__input\" placeholder=\"Search\" v-model=\"searchTitle\">\n    <button type=\"submit\" class=\"search__button\" :disabled=\"isSearching || !searchTitle\">\n      <svg class=\"icon\" viewBox=\"0 0 24 24\" height=\"24\" width=\"24\">\n        <use xlink:href=\"#search\"></use>\n      </svg>\n    </button>\n  </form>\n</template>\n\n<script>\nimport search from '../services/search';\n\nexport default {\n  data() {\n    return {\n      searchTitle: '',\n      isSearching: false,\n    };\n  },\n  methods: {\n    onSearch(e) {\n      e.preventDefault();\n\n      // reset results array in parent data\n      this.$parent.results = [];\n      this.$parent.noResults = false;\n      this.isSearching = true;\n      this.$router.app.loading = true;\n\n      search(this.searchTitle)\n      .then(data => {\n        this.isSearching = false;\n        this.$router.app.loading = false;\n\n        // reset parent data every new search\n        this.$parent.searchTitle = this.searchTitle\n\n        if (data.Search && data.Search.length) {\n          this.$parent.results = data.Search;\n          this.$parent.totalResults = data.totalResults;\n          this.$parent.pageResults = 1;\n        } else {\n          this.$parent.noResults = true;\n        }\n      });\n    }\n  }\n}\n</script>\n\n<style lang=\"less\" scoped>\n@import '../styles/variables.less';\n\n.search__form {\n  position: relative;\n  padding: 0 45px 0 0;\n}\n\n.search__input {\n  border-width: 0;\n  font-style: italic;\n  height: 45px;\n  letter-spacing: inherit;\n  opacity: .85;\n  padding: 10px 20px;\n  width: 100%;\n  transition: opacity .15s ease;\n\n  &:focus {\n    outline: none;\n    opacity: 1;\n  }\n}\n\n.search__button {\n  background-color: @accent;\n  border-width: 0;\n  color: @text-light;\n  cursor: pointer;\n  position: absolute;\n  top: 0;\n  right: 0;\n  height: 45px;\n  width: 45px;\n  transition: background-color .25s ease;\n\n  &[disabled] {\n    background-color: @secondary;\n    cursor: default;\n  }\n}\n</style>\n\n\n\n/** WEBPACK FOOTER **\n ** search-box.vue?2e4e7781\n **/","<template>\n  <li class=\"search__result\" :movie=\"movie\">\n    <a v-link=\"{ name: 'movie',  params: { id: movie.imdbID } }\" class=\"search__result-link\">\n      <h3 class=\"search__result-title\">\n        <span v-text=\"movie.Title\"></span>\n        <svg class=\"icon\" viewBox=\"0 0 24 24\" height=\"24\" width=\"24\">\n          <use xlink:href=\"#action\"></use>\n        </svg>\n      </h3>\n      <p class=\"search__result-year\" v-text=\"movie.Year\"></p>\n    </a>\n  </li>\n</template>\n\n<script>\nexport default {\n  props: [ 'movie' ]\n}\n</script>\n\n<style lang=\"less\">\n@import '../styles/variables.less';\n\n.search__result {\n  padding: 30px 0;\n}\n\n.search__result + .search__result {\n  border-width: 1px 0 0;\n  border-style: solid;\n  border-color: @secondary;\n}\n\n.search__result-link {\n  color: inherit;\n  text-decoration: none;\n}\n\n.search__result-title {\n  line-height: 1.2em;\n  margin: 0;\n  position: relative;\n  padding: 0 35px 0 0;\n}\n\n.search__result-year {\n  line-height: 1.2em;\n  margin: 0;\n}\n\n.search__result .icon {\n  fill: @accent;\n  position: absolute;\n  top: 0;\n  right: 0;\n}\n</style>\n\n\n\n/** WEBPACK FOOTER **\n ** search-result.vue?4e91ac4e\n **/","<template>\n  <div class=\"card movie\" :class=\"{ 'loaded': loaded }\">\n    <movie-box :movie=\"movie\"></movie-box>\n</template>\n\n<script>\nimport movie from '../services/movie';\nimport movieBox from '../components/movie-box.vue';\n\nexport default {\n  components: {\n    movieBox\n  },\n  data() {\n    return {\n      movie: {}\n    };\n  },\n  props: {\n    loaded: {\n      type: Boolean,\n      default() {\n        return false;\n      }\n    }\n  },\n  attached() {\n    this.$router.app.loading = true;\n    // fetch movie data\n    movie(this.$route.params.id)\n     .then(data => {\n       this.movie = data;\n       this.loaded = true;\n       this.$router.app.loading = false;\n     });\n  }\n}\n</script>\n\n<style lang=\"less\" scoped>\n@import '../styles/variables.less';\n\n.movie {\n  line-height: 1.5;\n  opacity: 0;\n  overflow: hidden;\n  transition: all .25s ease;\n\n  &.loaded {\n    opacity: 1;\n  }\n}\n</style>\n\n\n\n/** WEBPACK FOOTER **\n ** movie-view.vue?341e71b2\n **/","<template>\n  <div class=\"card hollow\">\n    <search-box></search-box>\n  </div>\n  <div class=\"card hollow\" v-show=\"!results.length && noResults\">\n    <p><em>No results for &laquo;<span v-text=\"searchTitle\"></span></em>&raquo;</p>\n  </div>\n  <div class=\"card hollow\" v-show=\"results.length\">\n    <p><em>Search results for &laquo;<span v-text=\"searchTitle\"></span></em>&raquo;</p>\n    <ul class=\"search__results\">\n      <search-result v-for=\"r in results\" :movie=\"r\"></search-result>\n    </ul>\n  </div>\n  <div class=\"card hollow\" v-show=\"results.length < totalResults && results.length\">\n    <a href=\"#\" class=\"more\" @click=\"getMoreResults\">Load more results</a>\n  </div>\n</template>\n\n<script>\nimport search from '../services/search';\nimport searchBox from '../components/search-box.vue';\nimport searchResult from '../components/search-result.vue';\n\nlet persistData = null;\n\nexport default {\n  components: {\n    searchBox,\n    searchResult\n  },\n  data () {\n    return {\n      searchTitle: '',\n      results: [],\n      totalResults: 0,\n      pageResults: 0,\n      noResults: false\n    }\n  },\n  methods: {\n    getMoreResults(e) {\n      e.preventDefault();\n      this.$router.app.loading = true;\n      search(this.searchTitle, ++this.pageResults)\n      .then(data => {\n        this.results = this.results.concat(data.Search);\n        this.$router.app.loading = false;\n      });\n    }\n  },\n  ready() {\n    this.$router.app.loading = false;\n  },\n  route: {\n    activate() {\n      this.$data = persistData ? persistData : this.$data;\n    },\n    deactivate() {\n      persistData = this.results.length ? this.$data : null;\n    }\n  }\n}\n</script>\n\n<style lang=\"less\" scoped>\n@import '../styles/variables.less';\n\n.search__results {\n  list-style: none;\n  margin: 0;\n  padding: 0;\n}\n\n.more {\n  color: @accent;\n  display: block;\n  text-align: center;\n  text-decoration: none;\n  .label();\n}\n</style>\n\n\n\n/** WEBPACK FOOTER **\n ** search-view.vue?33d8214c\n **/","exports = module.exports = require(\"./../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block}audio:not([controls]){display:none;height:0}progress{vertical-align:baseline}[hidden],template{display:none}a{background-color:transparent;-webkit-text-decoration-skip:objects}a:active,a:hover{outline-width:0}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:inherit;font-weight:bolder}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}svg:not(:root){overflow:hidden}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}button,input,select,textarea{font:inherit;margin:0}optgroup{font-weight:700}button,input{overflow:visible}button,select{text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-input-placeholder{color:inherit;opacity:.54}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}body{background-color:#cfd8dc;color:#212121;font-family:Raleway,sans-serif;font-size:14px;letter-spacing:.015em;text-rendering:optimizeLegibility;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}html{box-sizing:border-box}*,:after,:before{box-sizing:inherit}img{max-width:100%}#app{padding:0 1em 2em}header{margin:0 0 45px}h1{font-weight:100;line-height:1.1;margin-bottom:0}h2{font-size:1em;font-weight:800;height:25px;line-height:25px}h2 span{vertical-align:middle}.back{color:inherit;text-decoration:none}@media (min-width:481px){body{font-size:16px}#app{padding-left:2em;padding-right:2em}}.card{margin:auto;max-width:640px;padding:10px}.card:not(.hollow){background-color:#fff}.icon{vertical-align:middle;fill:currentColor}@media (min-width:769px){body{font-size:18px}header{margin-bottom:60px}h1{font-size:3em}.card{padding:35px}}\", \"\"]);\n\n// exports\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/css-loader!./~/vue-loader/lib/style-rewriter.js!./~/less-loader!./~/vue-loader/lib/selector.js?type=style&index=0!./src/components/app.vue\n ** module id = 15\n ** module chunks = 0\n **/","exports = module.exports = require(\"./../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".search__result{padding:30px 0}.search__result+.search__result{border-width:1px 0 0;border-style:solid;border-color:#b0bec5}.search__result-link{color:inherit;text-decoration:none}.search__result-title{position:relative;padding:0 35px 0 0}.search__result-title,.search__result-year{line-height:1.2em;margin:0}.search__result .icon{fill:#ec5a62;position:absolute;top:0;right:0}\", \"\"]);\n\n// exports\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/css-loader!./~/vue-loader/lib/style-rewriter.js!./~/less-loader!./~/vue-loader/lib/selector.js?type=style&index=0!./src/components/search-result.vue\n ** module id = 16\n ** module chunks = 0\n **/","exports = module.exports = require(\"./../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".search__form[_v-2955fe6e]{position:relative;padding:0 45px 0 0}.search__input[_v-2955fe6e]{border-width:0;font-style:italic;height:45px;letter-spacing:inherit;opacity:.85;padding:10px 20px;width:100%;-webkit-transition:opacity .15s ease;transition:opacity .15s ease}.search__input[_v-2955fe6e]:focus{outline:none;opacity:1}.search__button[_v-2955fe6e]{background-color:#ec5a62;border-width:0;color:#fff;cursor:pointer;position:absolute;top:0;right:0;height:45px;width:45px;-webkit-transition:background-color .25s ease;transition:background-color .25s ease}.search__button[disabled][_v-2955fe6e]{background-color:#b0bec5;cursor:default}\", \"\"]);\n\n// exports\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/css-loader!./~/vue-loader/lib/style-rewriter.js?id=_v-2955fe6e&scoped=true!./~/less-loader!./~/vue-loader/lib/selector.js?type=style&index=0!./src/components/search-box.vue\n ** module id = 17\n ** module chunks = 0\n **/","exports = module.exports = require(\"./../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".progress[_v-6d0180ea]{height:4px;opacity:0;overflow:hidden;position:fixed;top:0;left:0;width:100%;-webkit-transition:opacity .15s ease;transition:opacity .15s ease}.progress.visible[_v-6d0180ea]{opacity:1}.indeterminate[_v-6d0180ea]{background-color:#ec5a62;width:70%}.indeterminate[_v-6d0180ea]:after,.indeterminate[_v-6d0180ea]:before{-webkit-animation:indeterminate 1s cubic-bezier(.65,.815,.735,.395) infinite;animation:indeterminate 1s cubic-bezier(.65,.815,.735,.395) infinite;content:'';bottom:0;top:0;position:absolute;background-color:inherit;left:0;will-change:left,right}@-webkit-keyframes indeterminate{0%{left:-35%;right:100%}60%,to{left:100%;right:-90%}}@keyframes indeterminate{0%{left:-35%;right:100%}60%,to{left:100%;right:-90%}}\", \"\"]);\n\n// exports\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/css-loader!./~/vue-loader/lib/style-rewriter.js?id=_v-6d0180ea&scoped=true!./~/less-loader!./~/vue-loader/lib/selector.js?type=style&index=0!./src/components/loading-bar.vue\n ** module id = 18\n ** module chunks = 0\n **/","exports = module.exports = require(\"./../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".movie__title[_v-8b76b6d4]{font-size:1.45em;margin:0 0 .67em}.movie__data[_v-8b76b6d4]{clear:both}.movie__data dt[_v-8b76b6d4]{color:#ec5a62;display:inline-block;font-size:.9em;font-weight:800;letter-spacing:.03em;text-transform:uppercase}.movie__data dd[_v-8b76b6d4]{display:inline;margin:0}.movie__data dd[_v-8b76b6d4]:after{color:#b0bec5;content:'/';font-weight:400;margin:0 5px 0 8px}.movie__data dd[_v-8b76b6d4]:last-child:after{display:none}.movie__plot__label[_v-8b76b6d4]{color:#b0bec5;font-size:.9em;font-weight:800;letter-spacing:.03em;text-transform:uppercase}.movie__plot[_v-8b76b6d4]{margin-top:-.25em}.movie__thumb[_v-8b76b6d4]{background-color:#b0bec5;float:left;margin:0 25px 10px 0;min-height:100px;width:100px}@media (min-width:481px){.movie__thumb[_v-8b76b6d4]{width:150px}.movie__plot[_v-8b76b6d4]{font-size:.9em}}@media (min-width:769px){.movie__thumb[_v-8b76b6d4]{width:200px}}\", \"\"]);\n\n// exports\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/css-loader!./~/vue-loader/lib/style-rewriter.js?id=_v-8b76b6d4&scoped=true!./~/less-loader!./~/vue-loader/lib/selector.js?type=style&index=0!./src/components/movie-box.vue\n ** module id = 19\n ** module chunks = 0\n **/","exports = module.exports = require(\"./../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".movie[_v-ca60e4f8]{line-height:1.5;opacity:0;overflow:hidden;-webkit-transition:all .25s ease;transition:all .25s ease}.movie.loaded[_v-ca60e4f8]{opacity:1}\", \"\"]);\n\n// exports\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/css-loader!./~/vue-loader/lib/style-rewriter.js?id=_v-ca60e4f8&scoped=true!./~/less-loader!./~/vue-loader/lib/selector.js?type=style&index=0!./src/views/movie-view.vue\n ** module id = 20\n ** module chunks = 0\n **/","exports = module.exports = require(\"./../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".search__results[_v-d21df490]{list-style:none;margin:0;padding:0}.more[_v-d21df490]{color:#ec5a62;display:block;text-align:center;text-decoration:none;font-size:.9em;font-weight:800;letter-spacing:.03em;text-transform:uppercase}\", \"\"]);\n\n// exports\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/css-loader!./~/vue-loader/lib/style-rewriter.js?id=_v-d21df490&scoped=true!./~/less-loader!./~/vue-loader/lib/selector.js?type=style&index=0!./src/views/search-view.vue\n ** module id = 21\n ** module chunks = 0\n **/","module.exports = \"<svg style=display:none> <defs> <g id=action> <path d=\\\"M2.01 21L23 12 2.01 3 2 10l15 2-15 2z\\\"/> <path d=\\\"M0 0h24v24H0z\\\" fill=none /> </g> <g id=back> <path d=\\\"M0 0h24v24H0z\\\" fill=none /> <path d=\\\"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\\\"/> </g> <g id=search> <path d=\\\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\\\"/> <path d=\\\"M0 0h24v24H0z\\\" fill=none /> </g> </defs> </svg> <div id=app> <loading-bar :visible=loading></loading-bar> <header> <h1>Movies</h1> <h2 v-show=\\\"$route.name === 'search'\\\">Look up fast information about your favorite titles</h2> <h2 v-show=\\\"$route.name === 'movie'\\\"> <a v-link=\\\"{ path: '/' }\\\" class=back> <svg class=icon viewBox=\\\"0 0 24 24\\\" height=24 width=24> <use xlink:href=#back></use> </svg> <span>Back to Search</span> </a> </h2> </header> <main class=view> <router-view></router-view> </main> </div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/app.vue\n ** module id = 22\n ** module chunks = 0\n **/","module.exports = \"<li class=search__result :movie=movie> <a v-link=\\\"{ name: 'movie',  params: { id: movie.imdbID } }\\\" class=search__result-link> <h3 class=search__result-title> <span v-text=movie.Title></span> <svg class=icon viewBox=\\\"0 0 24 24\\\" height=24 width=24> <use xlink:href=#action></use> </svg> </h3> <p class=search__result-year v-text=movie.Year></p> </a> </li>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/search-result.vue\n ** module id = 23\n ** module chunks = 0\n **/","module.exports = \"<form action=? class=search__form @submit=onSearch _v-2955fe6e=\\\"\\\"> <input type=text class=search__input placeholder=Search v-model=searchTitle _v-2955fe6e=\\\"\\\"> <button type=submit class=search__button :disabled=\\\"isSearching || !searchTitle\\\" _v-2955fe6e=\\\"\\\"> <svg class=icon viewBox=\\\"0 0 24 24\\\" height=24 width=24 _v-2955fe6e=\\\"\\\"> <use xlink:href=#search _v-2955fe6e=\\\"\\\"></use> </svg> </button> </form>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/template-rewriter.js?id=_v-2955fe6e!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/search-box.vue\n ** module id = 24\n ** module chunks = 0\n **/","module.exports = \"<div class=progress :class=\\\"{ 'visible': visible }\\\" _v-6d0180ea=\\\"\\\"> <div class=indeterminate _v-6d0180ea=\\\"\\\"></div> </div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/template-rewriter.js?id=_v-6d0180ea!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/loading-bar.vue\n ** module id = 25\n ** module chunks = 0\n **/","module.exports = \"<h3 class=movie__title v-text=movie.Title _v-8b76b6d4=\\\"\\\"></h3> <dl class=movie__data _v-8b76b6d4=\\\"\\\"> <dt _v-8b76b6d4=\\\"\\\">Released</dt> <dd v-text=movie.Released _v-8b76b6d4=\\\"\\\"></dd> <dt _v-8b76b6d4=\\\"\\\">Runtime</dt> <dd v-text=movie.Runtime _v-8b76b6d4=\\\"\\\"></dd> <dt v-if=\\\"movie.Director !== 'N/A'\\\" _v-8b76b6d4=\\\"\\\">Director</dt> <dd v-if=\\\"movie.Director !== 'N/A'\\\" v-text=movie.Director _v-8b76b6d4=\\\"\\\"></dd> <dt _v-8b76b6d4=\\\"\\\">Cast</dt> <dd v-text=movie.Actors _v-8b76b6d4=\\\"\\\"></dd> <dt _v-8b76b6d4=\\\"\\\">IMDb Rating</dt> <dd v-text=movie.imdbRating _v-8b76b6d4=\\\"\\\"></dd> </dl> <img :src=movie.Poster alt=\\\"\\\" class=movie__thumb v-if=\\\"movie.Poster !== 'N/A'\\\" _v-8b76b6d4=\\\"\\\"> <p class=movie__plot _v-8b76b6d4=\\\"\\\"> <span class=movie__plot__label _v-8b76b6d4=\\\"\\\">Plot</span> <span v-text=movie.Plot _v-8b76b6d4=\\\"\\\"></span> </p>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/template-rewriter.js?id=_v-8b76b6d4!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/movie-box.vue\n ** module id = 26\n ** module chunks = 0\n **/","module.exports = \"<div class=\\\"card movie\\\" :class=\\\"{ 'loaded': loaded }\\\" _v-ca60e4f8=\\\"\\\"> <movie-box :movie=movie _v-ca60e4f8=\\\"\\\"></movie-box> </div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/template-rewriter.js?id=_v-ca60e4f8!./~/vue-loader/lib/selector.js?type=template&index=0!./src/views/movie-view.vue\n ** module id = 27\n ** module chunks = 0\n **/","module.exports = \"<div class=\\\"card hollow\\\" _v-d21df490=\\\"\\\"> <search-box _v-d21df490=\\\"\\\"></search-box> </div> <div class=\\\"card hollow\\\" v-show=\\\"!results.length &amp;&amp; noResults\\\" _v-d21df490=\\\"\\\"> <p _v-d21df490=\\\"\\\"><em _v-d21df490=\\\"\\\">No results for «<span v-text=searchTitle _v-d21df490=\\\"\\\"></span></em>»</p> </div> <div class=\\\"card hollow\\\" v-show=results.length _v-d21df490=\\\"\\\"> <p _v-d21df490=\\\"\\\"><em _v-d21df490=\\\"\\\">Search results for «<span v-text=searchTitle _v-d21df490=\\\"\\\"></span></em>»</p> <ul class=search__results _v-d21df490=\\\"\\\"> <search-result v-for=\\\"r in results\\\" :movie=r _v-d21df490=\\\"\\\"></search-result> </ul> </div> <div class=\\\"card hollow\\\" v-show=\\\"results.length < totalResults &amp;&amp; results.length\\\" _v-d21df490=\\\"\\\"> <a href=# class=more @click=getMoreResults _v-d21df490=\\\"\\\">Load more results</a> </div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/template-rewriter.js?id=_v-d21df490!./~/vue-loader/lib/selector.js?type=template&index=0!./src/views/search-view.vue\n ** module id = 28\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\nrequire(\"!!vue-style-loader!css-loader!./../../node_modules/vue-loader/lib/style-rewriter.js!less!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./app.vue\")\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./app.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./app.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/components/app.vue\n ** module id = 29\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\nrequire(\"!!vue-style-loader!css-loader!./../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-6d0180ea&scoped=true!less!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./loading-bar.vue\")\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./loading-bar.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../node_modules/vue-loader/lib/template-rewriter.js?id=_v-6d0180ea!./../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./loading-bar.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/components/loading-bar.vue\n ** module id = 30\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\nrequire(\"!!vue-style-loader!css-loader!./../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-8b76b6d4&scoped=true!less!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./movie-box.vue\")\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./movie-box.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../node_modules/vue-loader/lib/template-rewriter.js?id=_v-8b76b6d4!./../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./movie-box.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/components/movie-box.vue\n ** module id = 31\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\nrequire(\"!!vue-style-loader!css-loader!./../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-2955fe6e&scoped=true!less!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./search-box.vue\")\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./search-box.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../node_modules/vue-loader/lib/template-rewriter.js?id=_v-2955fe6e!./../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./search-box.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/components/search-box.vue\n ** module id = 32\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\nrequire(\"!!vue-style-loader!css-loader!./../../node_modules/vue-loader/lib/style-rewriter.js!less!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./search-result.vue\")\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./search-result.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./search-result.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/components/search-result.vue\n ** module id = 33\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\nrequire(\"!!vue-style-loader!css-loader!./../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-ca60e4f8&scoped=true!less!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./movie-view.vue\")\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./movie-view.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../node_modules/vue-loader/lib/template-rewriter.js?id=_v-ca60e4f8!./../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./movie-view.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/views/movie-view.vue\n ** module id = 34\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\nrequire(\"!!vue-style-loader!css-loader!./../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-d21df490&scoped=true!less!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./search-view.vue\")\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./search-view.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../node_modules/vue-loader/lib/template-rewriter.js?id=_v-d21df490!./../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./search-view.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/views/search-view.vue\n ** module id = 35\n ** module chunks = 0\n **/","/*!\n * vue-router v0.7.13\n * (c) 2016 Evan You\n * Released under the MIT License.\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  global.VueRouter = factory();\n}(this, function () { 'use strict';\n\n  var babelHelpers = {};\n\n  babelHelpers.classCallCheck = function (instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  };\n  function Target(path, matcher, delegate) {\n    this.path = path;\n    this.matcher = matcher;\n    this.delegate = delegate;\n  }\n\n  Target.prototype = {\n    to: function to(target, callback) {\n      var delegate = this.delegate;\n\n      if (delegate && delegate.willAddRoute) {\n        target = delegate.willAddRoute(this.matcher.target, target);\n      }\n\n      this.matcher.add(this.path, target);\n\n      if (callback) {\n        if (callback.length === 0) {\n          throw new Error(\"You must have an argument in the function passed to `to`\");\n        }\n        this.matcher.addChild(this.path, target, callback, this.delegate);\n      }\n      return this;\n    }\n  };\n\n  function Matcher(target) {\n    this.routes = {};\n    this.children = {};\n    this.target = target;\n  }\n\n  Matcher.prototype = {\n    add: function add(path, handler) {\n      this.routes[path] = handler;\n    },\n\n    addChild: function addChild(path, target, callback, delegate) {\n      var matcher = new Matcher(target);\n      this.children[path] = matcher;\n\n      var match = generateMatch(path, matcher, delegate);\n\n      if (delegate && delegate.contextEntered) {\n        delegate.contextEntered(target, match);\n      }\n\n      callback(match);\n    }\n  };\n\n  function generateMatch(startingPath, matcher, delegate) {\n    return function (path, nestedCallback) {\n      var fullPath = startingPath + path;\n\n      if (nestedCallback) {\n        nestedCallback(generateMatch(fullPath, matcher, delegate));\n      } else {\n        return new Target(startingPath + path, matcher, delegate);\n      }\n    };\n  }\n\n  function addRoute(routeArray, path, handler) {\n    var len = 0;\n    for (var i = 0, l = routeArray.length; i < l; i++) {\n      len += routeArray[i].path.length;\n    }\n\n    path = path.substr(len);\n    var route = { path: path, handler: handler };\n    routeArray.push(route);\n  }\n\n  function eachRoute(baseRoute, matcher, callback, binding) {\n    var routes = matcher.routes;\n\n    for (var path in routes) {\n      if (routes.hasOwnProperty(path)) {\n        var routeArray = baseRoute.slice();\n        addRoute(routeArray, path, routes[path]);\n\n        if (matcher.children[path]) {\n          eachRoute(routeArray, matcher.children[path], callback, binding);\n        } else {\n          callback.call(binding, routeArray);\n        }\n      }\n    }\n  }\n\n  function map (callback, addRouteCallback) {\n    var matcher = new Matcher();\n\n    callback(generateMatch(\"\", matcher, this.delegate));\n\n    eachRoute([], matcher, function (route) {\n      if (addRouteCallback) {\n        addRouteCallback(this, route);\n      } else {\n        this.add(route);\n      }\n    }, this);\n  }\n\n  var specials = ['/', '.', '*', '+', '?', '|', '(', ')', '[', ']', '{', '}', '\\\\'];\n\n  var escapeRegex = new RegExp('(\\\\' + specials.join('|\\\\') + ')', 'g');\n\n  var noWarning = false;\n  function warn(msg) {\n    if (!noWarning && typeof console !== 'undefined') {\n      console.error('[vue-router] ' + msg);\n    }\n  }\n\n  function tryDecode(uri, asComponent) {\n    try {\n      return asComponent ? decodeURIComponent(uri) : decodeURI(uri);\n    } catch (e) {\n      warn('malformed URI' + (asComponent ? ' component: ' : ': ') + uri);\n    }\n  }\n\n  function isArray(test) {\n    return Object.prototype.toString.call(test) === \"[object Array]\";\n  }\n\n  // A Segment represents a segment in the original route description.\n  // Each Segment type provides an `eachChar` and `regex` method.\n  //\n  // The `eachChar` method invokes the callback with one or more character\n  // specifications. A character specification consumes one or more input\n  // characters.\n  //\n  // The `regex` method returns a regex fragment for the segment. If the\n  // segment is a dynamic of star segment, the regex fragment also includes\n  // a capture.\n  //\n  // A character specification contains:\n  //\n  // * `validChars`: a String with a list of all valid characters, or\n  // * `invalidChars`: a String with a list of all invalid characters\n  // * `repeat`: true if the character specification can repeat\n\n  function StaticSegment(string) {\n    this.string = string;\n  }\n  StaticSegment.prototype = {\n    eachChar: function eachChar(callback) {\n      var string = this.string,\n          ch;\n\n      for (var i = 0, l = string.length; i < l; i++) {\n        ch = string.charAt(i);\n        callback({ validChars: ch });\n      }\n    },\n\n    regex: function regex() {\n      return this.string.replace(escapeRegex, '\\\\$1');\n    },\n\n    generate: function generate() {\n      return this.string;\n    }\n  };\n\n  function DynamicSegment(name) {\n    this.name = name;\n  }\n  DynamicSegment.prototype = {\n    eachChar: function eachChar(callback) {\n      callback({ invalidChars: \"/\", repeat: true });\n    },\n\n    regex: function regex() {\n      return \"([^/]+)\";\n    },\n\n    generate: function generate(params) {\n      var val = params[this.name];\n      return val == null ? \":\" + this.name : val;\n    }\n  };\n\n  function StarSegment(name) {\n    this.name = name;\n  }\n  StarSegment.prototype = {\n    eachChar: function eachChar(callback) {\n      callback({ invalidChars: \"\", repeat: true });\n    },\n\n    regex: function regex() {\n      return \"(.+)\";\n    },\n\n    generate: function generate(params) {\n      var val = params[this.name];\n      return val == null ? \":\" + this.name : val;\n    }\n  };\n\n  function EpsilonSegment() {}\n  EpsilonSegment.prototype = {\n    eachChar: function eachChar() {},\n    regex: function regex() {\n      return \"\";\n    },\n    generate: function generate() {\n      return \"\";\n    }\n  };\n\n  function parse(route, names, specificity) {\n    // normalize route as not starting with a \"/\". Recognition will\n    // also normalize.\n    if (route.charAt(0) === \"/\") {\n      route = route.substr(1);\n    }\n\n    var segments = route.split(\"/\"),\n        results = [];\n\n    // A routes has specificity determined by the order that its different segments\n    // appear in. This system mirrors how the magnitude of numbers written as strings\n    // works.\n    // Consider a number written as: \"abc\". An example would be \"200\". Any other number written\n    // \"xyz\" will be smaller than \"abc\" so long as `a > z`. For instance, \"199\" is smaller\n    // then \"200\", even though \"y\" and \"z\" (which are both 9) are larger than \"0\" (the value\n    // of (`b` and `c`). This is because the leading symbol, \"2\", is larger than the other\n    // leading symbol, \"1\".\n    // The rule is that symbols to the left carry more weight than symbols to the right\n    // when a number is written out as a string. In the above strings, the leading digit\n    // represents how many 100's are in the number, and it carries more weight than the middle\n    // number which represents how many 10's are in the number.\n    // This system of number magnitude works well for route specificity, too. A route written as\n    // `a/b/c` will be more specific than `x/y/z` as long as `a` is more specific than\n    // `x`, irrespective of the other parts.\n    // Because of this similarity, we assign each type of segment a number value written as a\n    // string. We can find the specificity of compound routes by concatenating these strings\n    // together, from left to right. After we have looped through all of the segments,\n    // we convert the string to a number.\n    specificity.val = '';\n\n    for (var i = 0, l = segments.length; i < l; i++) {\n      var segment = segments[i],\n          match;\n\n      if (match = segment.match(/^:([^\\/]+)$/)) {\n        results.push(new DynamicSegment(match[1]));\n        names.push(match[1]);\n        specificity.val += '3';\n      } else if (match = segment.match(/^\\*([^\\/]+)$/)) {\n        results.push(new StarSegment(match[1]));\n        specificity.val += '2';\n        names.push(match[1]);\n      } else if (segment === \"\") {\n        results.push(new EpsilonSegment());\n        specificity.val += '1';\n      } else {\n        results.push(new StaticSegment(segment));\n        specificity.val += '4';\n      }\n    }\n\n    specificity.val = +specificity.val;\n\n    return results;\n  }\n\n  // A State has a character specification and (`charSpec`) and a list of possible\n  // subsequent states (`nextStates`).\n  //\n  // If a State is an accepting state, it will also have several additional\n  // properties:\n  //\n  // * `regex`: A regular expression that is used to extract parameters from paths\n  //   that reached this accepting state.\n  // * `handlers`: Information on how to convert the list of captures into calls\n  //   to registered handlers with the specified parameters\n  // * `types`: How many static, dynamic or star segments in this route. Used to\n  //   decide which route to use if multiple registered routes match a path.\n  //\n  // Currently, State is implemented naively by looping over `nextStates` and\n  // comparing a character specification against a character. A more efficient\n  // implementation would use a hash of keys pointing at one or more next states.\n\n  function State(charSpec) {\n    this.charSpec = charSpec;\n    this.nextStates = [];\n  }\n\n  State.prototype = {\n    get: function get(charSpec) {\n      var nextStates = this.nextStates;\n\n      for (var i = 0, l = nextStates.length; i < l; i++) {\n        var child = nextStates[i];\n\n        var isEqual = child.charSpec.validChars === charSpec.validChars;\n        isEqual = isEqual && child.charSpec.invalidChars === charSpec.invalidChars;\n\n        if (isEqual) {\n          return child;\n        }\n      }\n    },\n\n    put: function put(charSpec) {\n      var state;\n\n      // If the character specification already exists in a child of the current\n      // state, just return that state.\n      if (state = this.get(charSpec)) {\n        return state;\n      }\n\n      // Make a new state for the character spec\n      state = new State(charSpec);\n\n      // Insert the new state as a child of the current state\n      this.nextStates.push(state);\n\n      // If this character specification repeats, insert the new state as a child\n      // of itself. Note that this will not trigger an infinite loop because each\n      // transition during recognition consumes a character.\n      if (charSpec.repeat) {\n        state.nextStates.push(state);\n      }\n\n      // Return the new state\n      return state;\n    },\n\n    // Find a list of child states matching the next character\n    match: function match(ch) {\n      // DEBUG \"Processing `\" + ch + \"`:\"\n      var nextStates = this.nextStates,\n          child,\n          charSpec,\n          chars;\n\n      // DEBUG \"  \" + debugState(this)\n      var returned = [];\n\n      for (var i = 0, l = nextStates.length; i < l; i++) {\n        child = nextStates[i];\n\n        charSpec = child.charSpec;\n\n        if (typeof (chars = charSpec.validChars) !== 'undefined') {\n          if (chars.indexOf(ch) !== -1) {\n            returned.push(child);\n          }\n        } else if (typeof (chars = charSpec.invalidChars) !== 'undefined') {\n          if (chars.indexOf(ch) === -1) {\n            returned.push(child);\n          }\n        }\n      }\n\n      return returned;\n    }\n\n    /** IF DEBUG\n    , debug: function() {\n      var charSpec = this.charSpec,\n          debug = \"[\",\n          chars = charSpec.validChars || charSpec.invalidChars;\n       if (charSpec.invalidChars) { debug += \"^\"; }\n      debug += chars;\n      debug += \"]\";\n       if (charSpec.repeat) { debug += \"+\"; }\n       return debug;\n    }\n    END IF **/\n  };\n\n  /** IF DEBUG\n  function debug(log) {\n    console.log(log);\n  }\n\n  function debugState(state) {\n    return state.nextStates.map(function(n) {\n      if (n.nextStates.length === 0) { return \"( \" + n.debug() + \" [accepting] )\"; }\n      return \"( \" + n.debug() + \" <then> \" + n.nextStates.map(function(s) { return s.debug() }).join(\" or \") + \" )\";\n    }).join(\", \")\n  }\n  END IF **/\n\n  // Sort the routes by specificity\n  function sortSolutions(states) {\n    return states.sort(function (a, b) {\n      return b.specificity.val - a.specificity.val;\n    });\n  }\n\n  function recognizeChar(states, ch) {\n    var nextStates = [];\n\n    for (var i = 0, l = states.length; i < l; i++) {\n      var state = states[i];\n\n      nextStates = nextStates.concat(state.match(ch));\n    }\n\n    return nextStates;\n  }\n\n  var oCreate = Object.create || function (proto) {\n    function F() {}\n    F.prototype = proto;\n    return new F();\n  };\n\n  function RecognizeResults(queryParams) {\n    this.queryParams = queryParams || {};\n  }\n  RecognizeResults.prototype = oCreate({\n    splice: Array.prototype.splice,\n    slice: Array.prototype.slice,\n    push: Array.prototype.push,\n    length: 0,\n    queryParams: null\n  });\n\n  function findHandler(state, path, queryParams) {\n    var handlers = state.handlers,\n        regex = state.regex;\n    var captures = path.match(regex),\n        currentCapture = 1;\n    var result = new RecognizeResults(queryParams);\n\n    for (var i = 0, l = handlers.length; i < l; i++) {\n      var handler = handlers[i],\n          names = handler.names,\n          params = {};\n\n      for (var j = 0, m = names.length; j < m; j++) {\n        params[names[j]] = captures[currentCapture++];\n      }\n\n      result.push({ handler: handler.handler, params: params, isDynamic: !!names.length });\n    }\n\n    return result;\n  }\n\n  function addSegment(currentState, segment) {\n    segment.eachChar(function (ch) {\n      var state;\n\n      currentState = currentState.put(ch);\n    });\n\n    return currentState;\n  }\n\n  function decodeQueryParamPart(part) {\n    // http://www.w3.org/TR/html401/interact/forms.html#h-17.13.4.1\n    part = part.replace(/\\+/gm, '%20');\n    return tryDecode(part, true);\n  }\n\n  // The main interface\n\n  var RouteRecognizer = function RouteRecognizer() {\n    this.rootState = new State();\n    this.names = {};\n  };\n\n  RouteRecognizer.prototype = {\n    add: function add(routes, options) {\n      var currentState = this.rootState,\n          regex = \"^\",\n          specificity = {},\n          handlers = [],\n          allSegments = [],\n          name;\n\n      var isEmpty = true;\n\n      for (var i = 0, l = routes.length; i < l; i++) {\n        var route = routes[i],\n            names = [];\n\n        var segments = parse(route.path, names, specificity);\n\n        allSegments = allSegments.concat(segments);\n\n        for (var j = 0, m = segments.length; j < m; j++) {\n          var segment = segments[j];\n\n          if (segment instanceof EpsilonSegment) {\n            continue;\n          }\n\n          isEmpty = false;\n\n          // Add a \"/\" for the new segment\n          currentState = currentState.put({ validChars: \"/\" });\n          regex += \"/\";\n\n          // Add a representation of the segment to the NFA and regex\n          currentState = addSegment(currentState, segment);\n          regex += segment.regex();\n        }\n\n        var handler = { handler: route.handler, names: names };\n        handlers.push(handler);\n      }\n\n      if (isEmpty) {\n        currentState = currentState.put({ validChars: \"/\" });\n        regex += \"/\";\n      }\n\n      currentState.handlers = handlers;\n      currentState.regex = new RegExp(regex + \"$\");\n      currentState.specificity = specificity;\n\n      if (name = options && options.as) {\n        this.names[name] = {\n          segments: allSegments,\n          handlers: handlers\n        };\n      }\n    },\n\n    handlersFor: function handlersFor(name) {\n      var route = this.names[name],\n          result = [];\n      if (!route) {\n        throw new Error(\"There is no route named \" + name);\n      }\n\n      for (var i = 0, l = route.handlers.length; i < l; i++) {\n        result.push(route.handlers[i]);\n      }\n\n      return result;\n    },\n\n    hasRoute: function hasRoute(name) {\n      return !!this.names[name];\n    },\n\n    generate: function generate(name, params) {\n      var route = this.names[name],\n          output = \"\";\n      if (!route) {\n        throw new Error(\"There is no route named \" + name);\n      }\n\n      var segments = route.segments;\n\n      for (var i = 0, l = segments.length; i < l; i++) {\n        var segment = segments[i];\n\n        if (segment instanceof EpsilonSegment) {\n          continue;\n        }\n\n        output += \"/\";\n        output += segment.generate(params);\n      }\n\n      if (output.charAt(0) !== '/') {\n        output = '/' + output;\n      }\n\n      if (params && params.queryParams) {\n        output += this.generateQueryString(params.queryParams);\n      }\n\n      return output;\n    },\n\n    generateQueryString: function generateQueryString(params) {\n      var pairs = [];\n      var keys = [];\n      for (var key in params) {\n        if (params.hasOwnProperty(key)) {\n          keys.push(key);\n        }\n      }\n      keys.sort();\n      for (var i = 0, len = keys.length; i < len; i++) {\n        key = keys[i];\n        var value = params[key];\n        if (value == null) {\n          continue;\n        }\n        var pair = encodeURIComponent(key);\n        if (isArray(value)) {\n          for (var j = 0, l = value.length; j < l; j++) {\n            var arrayPair = key + '[]' + '=' + encodeURIComponent(value[j]);\n            pairs.push(arrayPair);\n          }\n        } else {\n          pair += \"=\" + encodeURIComponent(value);\n          pairs.push(pair);\n        }\n      }\n\n      if (pairs.length === 0) {\n        return '';\n      }\n\n      return \"?\" + pairs.join(\"&\");\n    },\n\n    parseQueryString: function parseQueryString(queryString) {\n      var pairs = queryString.split(\"&\"),\n          queryParams = {};\n      for (var i = 0; i < pairs.length; i++) {\n        var pair = pairs[i].split('='),\n            key = decodeQueryParamPart(pair[0]),\n            keyLength = key.length,\n            isArray = false,\n            value;\n        if (pair.length === 1) {\n          value = 'true';\n        } else {\n          //Handle arrays\n          if (keyLength > 2 && key.slice(keyLength - 2) === '[]') {\n            isArray = true;\n            key = key.slice(0, keyLength - 2);\n            if (!queryParams[key]) {\n              queryParams[key] = [];\n            }\n          }\n          value = pair[1] ? decodeQueryParamPart(pair[1]) : '';\n        }\n        if (isArray) {\n          queryParams[key].push(value);\n        } else {\n          queryParams[key] = value;\n        }\n      }\n      return queryParams;\n    },\n\n    recognize: function recognize(path, silent) {\n      noWarning = silent;\n      var states = [this.rootState],\n          pathLen,\n          i,\n          l,\n          queryStart,\n          queryParams = {},\n          isSlashDropped = false;\n\n      queryStart = path.indexOf('?');\n      if (queryStart !== -1) {\n        var queryString = path.substr(queryStart + 1, path.length);\n        path = path.substr(0, queryStart);\n        if (queryString) {\n          queryParams = this.parseQueryString(queryString);\n        }\n      }\n\n      path = tryDecode(path);\n      if (!path) return;\n\n      // DEBUG GROUP path\n\n      if (path.charAt(0) !== \"/\") {\n        path = \"/\" + path;\n      }\n\n      pathLen = path.length;\n      if (pathLen > 1 && path.charAt(pathLen - 1) === \"/\") {\n        path = path.substr(0, pathLen - 1);\n        isSlashDropped = true;\n      }\n\n      for (i = 0, l = path.length; i < l; i++) {\n        states = recognizeChar(states, path.charAt(i));\n        if (!states.length) {\n          break;\n        }\n      }\n\n      // END DEBUG GROUP\n\n      var solutions = [];\n      for (i = 0, l = states.length; i < l; i++) {\n        if (states[i].handlers) {\n          solutions.push(states[i]);\n        }\n      }\n\n      states = sortSolutions(solutions);\n\n      var state = solutions[0];\n\n      if (state && state.handlers) {\n        // if a trailing slash was dropped and a star segment is the last segment\n        // specified, put the trailing slash back\n        if (isSlashDropped && state.regex.source.slice(-5) === \"(.+)$\") {\n          path = path + \"/\";\n        }\n        return findHandler(state, path, queryParams);\n      }\n    }\n  };\n\n  RouteRecognizer.prototype.map = map;\n\n  var genQuery = RouteRecognizer.prototype.generateQueryString;\n\n  // export default for holding the Vue reference\n  var exports$1 = {};\n  /**\n   * Warn stuff.\n   *\n   * @param {String} msg\n   */\n\n  function warn$1(msg) {\n    /* istanbul ignore next */\n    if (typeof console !== 'undefined') {\n      console.error('[vue-router] ' + msg);\n    }\n  }\n\n  /**\n   * Resolve a relative path.\n   *\n   * @param {String} base\n   * @param {String} relative\n   * @param {Boolean} append\n   * @return {String}\n   */\n\n  function resolvePath(base, relative, append) {\n    var query = base.match(/(\\?.*)$/);\n    if (query) {\n      query = query[1];\n      base = base.slice(0, -query.length);\n    }\n    // a query!\n    if (relative.charAt(0) === '?') {\n      return base + relative;\n    }\n    var stack = base.split('/');\n    // remove trailing segment if:\n    // - not appending\n    // - appending to trailing slash (last segment is empty)\n    if (!append || !stack[stack.length - 1]) {\n      stack.pop();\n    }\n    // resolve relative path\n    var segments = relative.replace(/^\\//, '').split('/');\n    for (var i = 0; i < segments.length; i++) {\n      var segment = segments[i];\n      if (segment === '.') {\n        continue;\n      } else if (segment === '..') {\n        stack.pop();\n      } else {\n        stack.push(segment);\n      }\n    }\n    // ensure leading slash\n    if (stack[0] !== '') {\n      stack.unshift('');\n    }\n    return stack.join('/');\n  }\n\n  /**\n   * Forgiving check for a promise\n   *\n   * @param {Object} p\n   * @return {Boolean}\n   */\n\n  function isPromise(p) {\n    return p && typeof p.then === 'function';\n  }\n\n  /**\n   * Retrive a route config field from a component instance\n   * OR a component contructor.\n   *\n   * @param {Function|Vue} component\n   * @param {String} name\n   * @return {*}\n   */\n\n  function getRouteConfig(component, name) {\n    var options = component && (component.$options || component.options);\n    return options && options.route && options.route[name];\n  }\n\n  /**\n   * Resolve an async component factory. Have to do a dirty\n   * mock here because of Vue core's internal API depends on\n   * an ID check.\n   *\n   * @param {Object} handler\n   * @param {Function} cb\n   */\n\n  var resolver = undefined;\n\n  function resolveAsyncComponent(handler, cb) {\n    if (!resolver) {\n      resolver = {\n        resolve: exports$1.Vue.prototype._resolveComponent,\n        $options: {\n          components: {\n            _: handler.component\n          }\n        }\n      };\n    } else {\n      resolver.$options.components._ = handler.component;\n    }\n    resolver.resolve('_', function (Component) {\n      handler.component = Component;\n      cb(Component);\n    });\n  }\n\n  /**\n   * Map the dynamic segments in a path to params.\n   *\n   * @param {String} path\n   * @param {Object} params\n   * @param {Object} query\n   */\n\n  function mapParams(path, params, query) {\n    if (params === undefined) params = {};\n\n    path = path.replace(/:([^\\/]+)/g, function (_, key) {\n      var val = params[key];\n      /* istanbul ignore if */\n      if (!val) {\n        warn$1('param \"' + key + '\" not found when generating ' + 'path for \"' + path + '\" with params ' + JSON.stringify(params));\n      }\n      return val || '';\n    });\n    if (query) {\n      path += genQuery(query);\n    }\n    return path;\n  }\n\n  var hashRE = /#.*$/;\n\n  var HTML5History = (function () {\n    function HTML5History(_ref) {\n      var root = _ref.root;\n      var onChange = _ref.onChange;\n      babelHelpers.classCallCheck(this, HTML5History);\n\n      if (root && root !== '/') {\n        // make sure there's the starting slash\n        if (root.charAt(0) !== '/') {\n          root = '/' + root;\n        }\n        // remove trailing slash\n        this.root = root.replace(/\\/$/, '');\n        this.rootRE = new RegExp('^\\\\' + this.root);\n      } else {\n        this.root = null;\n      }\n      this.onChange = onChange;\n      // check base tag\n      var baseEl = document.querySelector('base');\n      this.base = baseEl && baseEl.getAttribute('href');\n    }\n\n    HTML5History.prototype.start = function start() {\n      var _this = this;\n\n      this.listener = function (e) {\n        var url = location.pathname + location.search;\n        if (_this.root) {\n          url = url.replace(_this.rootRE, '');\n        }\n        _this.onChange(url, e && e.state, location.hash);\n      };\n      window.addEventListener('popstate', this.listener);\n      this.listener();\n    };\n\n    HTML5History.prototype.stop = function stop() {\n      window.removeEventListener('popstate', this.listener);\n    };\n\n    HTML5History.prototype.go = function go(path, replace, append) {\n      var url = this.formatPath(path, append);\n      if (replace) {\n        history.replaceState({}, '', url);\n      } else {\n        // record scroll position by replacing current state\n        history.replaceState({\n          pos: {\n            x: window.pageXOffset,\n            y: window.pageYOffset\n          }\n        }, '', location.href);\n        // then push new state\n        history.pushState({}, '', url);\n      }\n      var hashMatch = path.match(hashRE);\n      var hash = hashMatch && hashMatch[0];\n      path = url\n      // strip hash so it doesn't mess up params\n      .replace(hashRE, '')\n      // remove root before matching\n      .replace(this.rootRE, '');\n      this.onChange(path, null, hash);\n    };\n\n    HTML5History.prototype.formatPath = function formatPath(path, append) {\n      return path.charAt(0) === '/'\n      // absolute path\n      ? this.root ? this.root + '/' + path.replace(/^\\//, '') : path : resolvePath(this.base || location.pathname, path, append);\n    };\n\n    return HTML5History;\n  })();\n\n  var HashHistory = (function () {\n    function HashHistory(_ref) {\n      var hashbang = _ref.hashbang;\n      var onChange = _ref.onChange;\n      babelHelpers.classCallCheck(this, HashHistory);\n\n      this.hashbang = hashbang;\n      this.onChange = onChange;\n    }\n\n    HashHistory.prototype.start = function start() {\n      var self = this;\n      this.listener = function () {\n        var path = location.hash;\n        var raw = path.replace(/^#!?/, '');\n        // always\n        if (raw.charAt(0) !== '/') {\n          raw = '/' + raw;\n        }\n        var formattedPath = self.formatPath(raw);\n        if (formattedPath !== path) {\n          location.replace(formattedPath);\n          return;\n        }\n        // determine query\n        // note it's possible to have queries in both the actual URL\n        // and the hash fragment itself.\n        var query = location.search && path.indexOf('?') > -1 ? '&' + location.search.slice(1) : location.search;\n        self.onChange(path.replace(/^#!?/, '') + query);\n      };\n      window.addEventListener('hashchange', this.listener);\n      this.listener();\n    };\n\n    HashHistory.prototype.stop = function stop() {\n      window.removeEventListener('hashchange', this.listener);\n    };\n\n    HashHistory.prototype.go = function go(path, replace, append) {\n      path = this.formatPath(path, append);\n      if (replace) {\n        location.replace(path);\n      } else {\n        location.hash = path;\n      }\n    };\n\n    HashHistory.prototype.formatPath = function formatPath(path, append) {\n      var isAbsoloute = path.charAt(0) === '/';\n      var prefix = '#' + (this.hashbang ? '!' : '');\n      return isAbsoloute ? prefix + path : prefix + resolvePath(location.hash.replace(/^#!?/, ''), path, append);\n    };\n\n    return HashHistory;\n  })();\n\n  var AbstractHistory = (function () {\n    function AbstractHistory(_ref) {\n      var onChange = _ref.onChange;\n      babelHelpers.classCallCheck(this, AbstractHistory);\n\n      this.onChange = onChange;\n      this.currentPath = '/';\n    }\n\n    AbstractHistory.prototype.start = function start() {\n      this.onChange('/');\n    };\n\n    AbstractHistory.prototype.stop = function stop() {\n      // noop\n    };\n\n    AbstractHistory.prototype.go = function go(path, replace, append) {\n      path = this.currentPath = this.formatPath(path, append);\n      this.onChange(path);\n    };\n\n    AbstractHistory.prototype.formatPath = function formatPath(path, append) {\n      return path.charAt(0) === '/' ? path : resolvePath(this.currentPath, path, append);\n    };\n\n    return AbstractHistory;\n  })();\n\n  /**\n   * Determine the reusability of an existing router view.\n   *\n   * @param {Directive} view\n   * @param {Object} handler\n   * @param {Transition} transition\n   */\n\n  function canReuse(view, handler, transition) {\n    var component = view.childVM;\n    if (!component || !handler) {\n      return false;\n    }\n    // important: check view.Component here because it may\n    // have been changed in activate hook\n    if (view.Component !== handler.component) {\n      return false;\n    }\n    var canReuseFn = getRouteConfig(component, 'canReuse');\n    return typeof canReuseFn === 'boolean' ? canReuseFn : canReuseFn ? canReuseFn.call(component, {\n      to: transition.to,\n      from: transition.from\n    }) : true; // defaults to true\n  }\n\n  /**\n   * Check if a component can deactivate.\n   *\n   * @param {Directive} view\n   * @param {Transition} transition\n   * @param {Function} next\n   */\n\n  function canDeactivate(view, transition, next) {\n    var fromComponent = view.childVM;\n    var hook = getRouteConfig(fromComponent, 'canDeactivate');\n    if (!hook) {\n      next();\n    } else {\n      transition.callHook(hook, fromComponent, next, {\n        expectBoolean: true\n      });\n    }\n  }\n\n  /**\n   * Check if a component can activate.\n   *\n   * @param {Object} handler\n   * @param {Transition} transition\n   * @param {Function} next\n   */\n\n  function canActivate(handler, transition, next) {\n    resolveAsyncComponent(handler, function (Component) {\n      // have to check due to async-ness\n      if (transition.aborted) {\n        return;\n      }\n      // determine if this component can be activated\n      var hook = getRouteConfig(Component, 'canActivate');\n      if (!hook) {\n        next();\n      } else {\n        transition.callHook(hook, null, next, {\n          expectBoolean: true\n        });\n      }\n    });\n  }\n\n  /**\n   * Call deactivate hooks for existing router-views.\n   *\n   * @param {Directive} view\n   * @param {Transition} transition\n   * @param {Function} next\n   */\n\n  function deactivate(view, transition, next) {\n    var component = view.childVM;\n    var hook = getRouteConfig(component, 'deactivate');\n    if (!hook) {\n      next();\n    } else {\n      transition.callHooks(hook, component, next);\n    }\n  }\n\n  /**\n   * Activate / switch component for a router-view.\n   *\n   * @param {Directive} view\n   * @param {Transition} transition\n   * @param {Number} depth\n   * @param {Function} [cb]\n   */\n\n  function activate(view, transition, depth, cb, reuse) {\n    var handler = transition.activateQueue[depth];\n    if (!handler) {\n      saveChildView(view);\n      if (view._bound) {\n        view.setComponent(null);\n      }\n      cb && cb();\n      return;\n    }\n\n    var Component = view.Component = handler.component;\n    var activateHook = getRouteConfig(Component, 'activate');\n    var dataHook = getRouteConfig(Component, 'data');\n    var waitForData = getRouteConfig(Component, 'waitForData');\n\n    view.depth = depth;\n    view.activated = false;\n\n    var component = undefined;\n    var loading = !!(dataHook && !waitForData);\n\n    // \"reuse\" is a flag passed down when the parent view is\n    // either reused via keep-alive or as a child of a kept-alive view.\n    // of course we can only reuse if the current kept-alive instance\n    // is of the correct type.\n    reuse = reuse && view.childVM && view.childVM.constructor === Component;\n\n    if (reuse) {\n      // just reuse\n      component = view.childVM;\n      component.$loadingRouteData = loading;\n    } else {\n      saveChildView(view);\n\n      // unbuild current component. this step also destroys\n      // and removes all nested child views.\n      view.unbuild(true);\n\n      // build the new component. this will also create the\n      // direct child view of the current one. it will register\n      // itself as view.childView.\n      component = view.build({\n        _meta: {\n          $loadingRouteData: loading\n        },\n        created: function created() {\n          this._routerView = view;\n        }\n      });\n\n      // handle keep-alive.\n      // when a kept-alive child vm is restored, we need to\n      // add its cached child views into the router's view list,\n      // and also properly update current view's child view.\n      if (view.keepAlive) {\n        component.$loadingRouteData = loading;\n        var cachedChildView = component._keepAliveRouterView;\n        if (cachedChildView) {\n          view.childView = cachedChildView;\n          component._keepAliveRouterView = null;\n        }\n      }\n    }\n\n    // cleanup the component in case the transition is aborted\n    // before the component is ever inserted.\n    var cleanup = function cleanup() {\n      component.$destroy();\n    };\n\n    // actually insert the component and trigger transition\n    var insert = function insert() {\n      if (reuse) {\n        cb && cb();\n        return;\n      }\n      var router = transition.router;\n      if (router._rendered || router._transitionOnLoad) {\n        view.transition(component);\n      } else {\n        // no transition on first render, manual transition\n        /* istanbul ignore if */\n        if (view.setCurrent) {\n          // 0.12 compat\n          view.setCurrent(component);\n        } else {\n          // 1.0\n          view.childVM = component;\n        }\n        component.$before(view.anchor, null, false);\n      }\n      cb && cb();\n    };\n\n    var afterData = function afterData() {\n      // activate the child view\n      if (view.childView) {\n        activate(view.childView, transition, depth + 1, null, reuse || view.keepAlive);\n      }\n      insert();\n    };\n\n    // called after activation hook is resolved\n    var afterActivate = function afterActivate() {\n      view.activated = true;\n      if (dataHook && waitForData) {\n        // wait until data loaded to insert\n        loadData(component, transition, dataHook, afterData, cleanup);\n      } else {\n        // load data and insert at the same time\n        if (dataHook) {\n          loadData(component, transition, dataHook);\n        }\n        afterData();\n      }\n    };\n\n    if (activateHook) {\n      transition.callHooks(activateHook, component, afterActivate, {\n        cleanup: cleanup,\n        postActivate: true\n      });\n    } else {\n      afterActivate();\n    }\n  }\n\n  /**\n   * Reuse a view, just reload data if necessary.\n   *\n   * @param {Directive} view\n   * @param {Transition} transition\n   */\n\n  function reuse(view, transition) {\n    var component = view.childVM;\n    var dataHook = getRouteConfig(component, 'data');\n    if (dataHook) {\n      loadData(component, transition, dataHook);\n    }\n  }\n\n  /**\n   * Asynchronously load and apply data to component.\n   *\n   * @param {Vue} component\n   * @param {Transition} transition\n   * @param {Function} hook\n   * @param {Function} cb\n   * @param {Function} cleanup\n   */\n\n  function loadData(component, transition, hook, cb, cleanup) {\n    component.$loadingRouteData = true;\n    transition.callHooks(hook, component, function () {\n      component.$loadingRouteData = false;\n      component.$emit('route-data-loaded', component);\n      cb && cb();\n    }, {\n      cleanup: cleanup,\n      postActivate: true,\n      processData: function processData(data) {\n        // handle promise sugar syntax\n        var promises = [];\n        if (isPlainObject(data)) {\n          Object.keys(data).forEach(function (key) {\n            var val = data[key];\n            if (isPromise(val)) {\n              promises.push(val.then(function (resolvedVal) {\n                component.$set(key, resolvedVal);\n              }));\n            } else {\n              component.$set(key, val);\n            }\n          });\n        }\n        if (promises.length) {\n          return promises[0].constructor.all(promises);\n        }\n      }\n    });\n  }\n\n  /**\n   * Save the child view for a kept-alive view so that\n   * we can restore it when it is switched back to.\n   *\n   * @param {Directive} view\n   */\n\n  function saveChildView(view) {\n    if (view.keepAlive && view.childVM && view.childView) {\n      view.childVM._keepAliveRouterView = view.childView;\n    }\n    view.childView = null;\n  }\n\n  /**\n   * Check plain object.\n   *\n   * @param {*} val\n   */\n\n  function isPlainObject(val) {\n    return Object.prototype.toString.call(val) === '[object Object]';\n  }\n\n  /**\n   * A RouteTransition object manages the pipeline of a\n   * router-view switching process. This is also the object\n   * passed into user route hooks.\n   *\n   * @param {Router} router\n   * @param {Route} to\n   * @param {Route} from\n   */\n\n  var RouteTransition = (function () {\n    function RouteTransition(router, to, from) {\n      babelHelpers.classCallCheck(this, RouteTransition);\n\n      this.router = router;\n      this.to = to;\n      this.from = from;\n      this.next = null;\n      this.aborted = false;\n      this.done = false;\n    }\n\n    /**\n     * Abort current transition and return to previous location.\n     */\n\n    RouteTransition.prototype.abort = function abort() {\n      if (!this.aborted) {\n        this.aborted = true;\n        // if the root path throws an error during validation\n        // on initial load, it gets caught in an infinite loop.\n        var abortingOnLoad = !this.from.path && this.to.path === '/';\n        if (!abortingOnLoad) {\n          this.router.replace(this.from.path || '/');\n        }\n      }\n    };\n\n    /**\n     * Abort current transition and redirect to a new location.\n     *\n     * @param {String} path\n     */\n\n    RouteTransition.prototype.redirect = function redirect(path) {\n      if (!this.aborted) {\n        this.aborted = true;\n        if (typeof path === 'string') {\n          path = mapParams(path, this.to.params, this.to.query);\n        } else {\n          path.params = path.params || this.to.params;\n          path.query = path.query || this.to.query;\n        }\n        this.router.replace(path);\n      }\n    };\n\n    /**\n     * A router view transition's pipeline can be described as\n     * follows, assuming we are transitioning from an existing\n     * <router-view> chain [Component A, Component B] to a new\n     * chain [Component A, Component C]:\n     *\n     *  A    A\n     *  | => |\n     *  B    C\n     *\n     * 1. Reusablity phase:\n     *   -> canReuse(A, A)\n     *   -> canReuse(B, C)\n     *   -> determine new queues:\n     *      - deactivation: [B]\n     *      - activation: [C]\n     *\n     * 2. Validation phase:\n     *   -> canDeactivate(B)\n     *   -> canActivate(C)\n     *\n     * 3. Activation phase:\n     *   -> deactivate(B)\n     *   -> activate(C)\n     *\n     * Each of these steps can be asynchronous, and any\n     * step can potentially abort the transition.\n     *\n     * @param {Function} cb\n     */\n\n    RouteTransition.prototype.start = function start(cb) {\n      var transition = this;\n\n      // determine the queue of views to deactivate\n      var deactivateQueue = [];\n      var view = this.router._rootView;\n      while (view) {\n        deactivateQueue.unshift(view);\n        view = view.childView;\n      }\n      var reverseDeactivateQueue = deactivateQueue.slice().reverse();\n\n      // determine the queue of route handlers to activate\n      var activateQueue = this.activateQueue = toArray(this.to.matched).map(function (match) {\n        return match.handler;\n      });\n\n      // 1. Reusability phase\n      var i = undefined,\n          reuseQueue = undefined;\n      for (i = 0; i < reverseDeactivateQueue.length; i++) {\n        if (!canReuse(reverseDeactivateQueue[i], activateQueue[i], transition)) {\n          break;\n        }\n      }\n      if (i > 0) {\n        reuseQueue = reverseDeactivateQueue.slice(0, i);\n        deactivateQueue = reverseDeactivateQueue.slice(i).reverse();\n        activateQueue = activateQueue.slice(i);\n      }\n\n      // 2. Validation phase\n      transition.runQueue(deactivateQueue, canDeactivate, function () {\n        transition.runQueue(activateQueue, canActivate, function () {\n          transition.runQueue(deactivateQueue, deactivate, function () {\n            // 3. Activation phase\n\n            // Update router current route\n            transition.router._onTransitionValidated(transition);\n\n            // trigger reuse for all reused views\n            reuseQueue && reuseQueue.forEach(function (view) {\n              return reuse(view, transition);\n            });\n\n            // the root of the chain that needs to be replaced\n            // is the top-most non-reusable view.\n            if (deactivateQueue.length) {\n              var _view = deactivateQueue[deactivateQueue.length - 1];\n              var depth = reuseQueue ? reuseQueue.length : 0;\n              activate(_view, transition, depth, cb);\n            } else {\n              cb();\n            }\n          });\n        });\n      });\n    };\n\n    /**\n     * Asynchronously and sequentially apply a function to a\n     * queue.\n     *\n     * @param {Array} queue\n     * @param {Function} fn\n     * @param {Function} cb\n     */\n\n    RouteTransition.prototype.runQueue = function runQueue(queue, fn, cb) {\n      var transition = this;\n      step(0);\n      function step(index) {\n        if (index >= queue.length) {\n          cb();\n        } else {\n          fn(queue[index], transition, function () {\n            step(index + 1);\n          });\n        }\n      }\n    };\n\n    /**\n     * Call a user provided route transition hook and handle\n     * the response (e.g. if the user returns a promise).\n     *\n     * If the user neither expects an argument nor returns a\n     * promise, the hook is assumed to be synchronous.\n     *\n     * @param {Function} hook\n     * @param {*} [context]\n     * @param {Function} [cb]\n     * @param {Object} [options]\n     *                 - {Boolean} expectBoolean\n     *                 - {Boolean} postActive\n     *                 - {Function} processData\n     *                 - {Function} cleanup\n     */\n\n    RouteTransition.prototype.callHook = function callHook(hook, context, cb) {\n      var _ref = arguments.length <= 3 || arguments[3] === undefined ? {} : arguments[3];\n\n      var _ref$expectBoolean = _ref.expectBoolean;\n      var expectBoolean = _ref$expectBoolean === undefined ? false : _ref$expectBoolean;\n      var _ref$postActivate = _ref.postActivate;\n      var postActivate = _ref$postActivate === undefined ? false : _ref$postActivate;\n      var processData = _ref.processData;\n      var cleanup = _ref.cleanup;\n\n      var transition = this;\n      var nextCalled = false;\n\n      // abort the transition\n      var abort = function abort() {\n        cleanup && cleanup();\n        transition.abort();\n      };\n\n      // handle errors\n      var onError = function onError(err) {\n        postActivate ? next() : abort();\n        if (err && !transition.router._suppress) {\n          warn$1('Uncaught error during transition: ');\n          throw err instanceof Error ? err : new Error(err);\n        }\n      };\n\n      // since promise swallows errors, we have to\n      // throw it in the next tick...\n      var onPromiseError = function onPromiseError(err) {\n        try {\n          onError(err);\n        } catch (e) {\n          setTimeout(function () {\n            throw e;\n          }, 0);\n        }\n      };\n\n      // advance the transition to the next step\n      var next = function next() {\n        if (nextCalled) {\n          warn$1('transition.next() should be called only once.');\n          return;\n        }\n        nextCalled = true;\n        if (transition.aborted) {\n          cleanup && cleanup();\n          return;\n        }\n        cb && cb();\n      };\n\n      var nextWithBoolean = function nextWithBoolean(res) {\n        if (typeof res === 'boolean') {\n          res ? next() : abort();\n        } else if (isPromise(res)) {\n          res.then(function (ok) {\n            ok ? next() : abort();\n          }, onPromiseError);\n        } else if (!hook.length) {\n          next();\n        }\n      };\n\n      var nextWithData = function nextWithData(data) {\n        var res = undefined;\n        try {\n          res = processData(data);\n        } catch (err) {\n          return onError(err);\n        }\n        if (isPromise(res)) {\n          res.then(next, onPromiseError);\n        } else {\n          next();\n        }\n      };\n\n      // expose a clone of the transition object, so that each\n      // hook gets a clean copy and prevent the user from\n      // messing with the internals.\n      var exposed = {\n        to: transition.to,\n        from: transition.from,\n        abort: abort,\n        next: processData ? nextWithData : next,\n        redirect: function redirect() {\n          transition.redirect.apply(transition, arguments);\n        }\n      };\n\n      // actually call the hook\n      var res = undefined;\n      try {\n        res = hook.call(context, exposed);\n      } catch (err) {\n        return onError(err);\n      }\n\n      if (expectBoolean) {\n        // boolean hooks\n        nextWithBoolean(res);\n      } else if (isPromise(res)) {\n        // promise\n        if (processData) {\n          res.then(nextWithData, onPromiseError);\n        } else {\n          res.then(next, onPromiseError);\n        }\n      } else if (processData && isPlainOjbect(res)) {\n        // data promise sugar\n        nextWithData(res);\n      } else if (!hook.length) {\n        next();\n      }\n    };\n\n    /**\n     * Call a single hook or an array of async hooks in series.\n     *\n     * @param {Array} hooks\n     * @param {*} context\n     * @param {Function} cb\n     * @param {Object} [options]\n     */\n\n    RouteTransition.prototype.callHooks = function callHooks(hooks, context, cb, options) {\n      var _this = this;\n\n      if (Array.isArray(hooks)) {\n        this.runQueue(hooks, function (hook, _, next) {\n          if (!_this.aborted) {\n            _this.callHook(hook, context, next, options);\n          }\n        }, cb);\n      } else {\n        this.callHook(hooks, context, cb, options);\n      }\n    };\n\n    return RouteTransition;\n  })();\n\n  function isPlainOjbect(val) {\n    return Object.prototype.toString.call(val) === '[object Object]';\n  }\n\n  function toArray(val) {\n    return val ? Array.prototype.slice.call(val) : [];\n  }\n\n  var internalKeysRE = /^(component|subRoutes|fullPath)$/;\n\n  /**\n   * Route Context Object\n   *\n   * @param {String} path\n   * @param {Router} router\n   */\n\n  var Route = function Route(path, router) {\n    var _this = this;\n\n    babelHelpers.classCallCheck(this, Route);\n\n    var matched = router._recognizer.recognize(path);\n    if (matched) {\n      // copy all custom fields from route configs\n      [].forEach.call(matched, function (match) {\n        for (var key in match.handler) {\n          if (!internalKeysRE.test(key)) {\n            _this[key] = match.handler[key];\n          }\n        }\n      });\n      // set query and params\n      this.query = matched.queryParams;\n      this.params = [].reduce.call(matched, function (prev, cur) {\n        if (cur.params) {\n          for (var key in cur.params) {\n            prev[key] = cur.params[key];\n          }\n        }\n        return prev;\n      }, {});\n    }\n    // expose path and router\n    this.path = path;\n    // for internal use\n    this.matched = matched || router._notFoundHandler;\n    // internal reference to router\n    Object.defineProperty(this, 'router', {\n      enumerable: false,\n      value: router\n    });\n    // Important: freeze self to prevent observation\n    Object.freeze(this);\n  };\n\n  function applyOverride (Vue) {\n    var _Vue$util = Vue.util;\n    var extend = _Vue$util.extend;\n    var isArray = _Vue$util.isArray;\n    var defineReactive = _Vue$util.defineReactive;\n\n    // override Vue's init and destroy process to keep track of router instances\n    var init = Vue.prototype._init;\n    Vue.prototype._init = function (options) {\n      options = options || {};\n      var root = options._parent || options.parent || this;\n      var router = root.$router;\n      var route = root.$route;\n      if (router) {\n        // expose router\n        this.$router = router;\n        router._children.push(this);\n        /* istanbul ignore if */\n        if (this._defineMeta) {\n          // 0.12\n          this._defineMeta('$route', route);\n        } else {\n          // 1.0\n          defineReactive(this, '$route', route);\n        }\n      }\n      init.call(this, options);\n    };\n\n    var destroy = Vue.prototype._destroy;\n    Vue.prototype._destroy = function () {\n      if (!this._isBeingDestroyed && this.$router) {\n        this.$router._children.$remove(this);\n      }\n      destroy.apply(this, arguments);\n    };\n\n    // 1.0 only: enable route mixins\n    var strats = Vue.config.optionMergeStrategies;\n    var hooksToMergeRE = /^(data|activate|deactivate)$/;\n\n    if (strats) {\n      strats.route = function (parentVal, childVal) {\n        if (!childVal) return parentVal;\n        if (!parentVal) return childVal;\n        var ret = {};\n        extend(ret, parentVal);\n        for (var key in childVal) {\n          var a = ret[key];\n          var b = childVal[key];\n          // for data, activate and deactivate, we need to merge them into\n          // arrays similar to lifecycle hooks.\n          if (a && hooksToMergeRE.test(key)) {\n            ret[key] = (isArray(a) ? a : [a]).concat(b);\n          } else {\n            ret[key] = b;\n          }\n        }\n        return ret;\n      };\n    }\n  }\n\n  function View (Vue) {\n\n    var _ = Vue.util;\n    var componentDef =\n    // 0.12\n    Vue.directive('_component') ||\n    // 1.0\n    Vue.internalDirectives.component;\n    // <router-view> extends the internal component directive\n    var viewDef = _.extend({}, componentDef);\n\n    // with some overrides\n    _.extend(viewDef, {\n\n      _isRouterView: true,\n\n      bind: function bind() {\n        var route = this.vm.$route;\n        /* istanbul ignore if */\n        if (!route) {\n          warn$1('<router-view> can only be used inside a ' + 'router-enabled app.');\n          return;\n        }\n        // force dynamic directive so v-component doesn't\n        // attempt to build right now\n        this._isDynamicLiteral = true;\n        // finally, init by delegating to v-component\n        componentDef.bind.call(this);\n\n        // locate the parent view\n        var parentView = undefined;\n        var parent = this.vm;\n        while (parent) {\n          if (parent._routerView) {\n            parentView = parent._routerView;\n            break;\n          }\n          parent = parent.$parent;\n        }\n        if (parentView) {\n          // register self as a child of the parent view,\n          // instead of activating now. This is so that the\n          // child's activate hook is called after the\n          // parent's has resolved.\n          this.parentView = parentView;\n          parentView.childView = this;\n        } else {\n          // this is the root view!\n          var router = route.router;\n          router._rootView = this;\n        }\n\n        // handle late-rendered view\n        // two possibilities:\n        // 1. root view rendered after transition has been\n        //    validated;\n        // 2. child view rendered after parent view has been\n        //    activated.\n        var transition = route.router._currentTransition;\n        if (!parentView && transition.done || parentView && parentView.activated) {\n          var depth = parentView ? parentView.depth + 1 : 0;\n          activate(this, transition, depth);\n        }\n      },\n\n      unbind: function unbind() {\n        if (this.parentView) {\n          this.parentView.childView = null;\n        }\n        componentDef.unbind.call(this);\n      }\n    });\n\n    Vue.elementDirective('router-view', viewDef);\n  }\n\n  var trailingSlashRE = /\\/$/;\n  var regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n  var queryStringRE = /\\?.*$/;\n\n  // install v-link, which provides navigation support for\n  // HTML5 history mode\n  function Link (Vue) {\n    var _Vue$util = Vue.util;\n    var _bind = _Vue$util.bind;\n    var isObject = _Vue$util.isObject;\n    var addClass = _Vue$util.addClass;\n    var removeClass = _Vue$util.removeClass;\n\n    var onPriority = Vue.directive('on').priority;\n    var LINK_UPDATE = '__vue-router-link-update__';\n\n    var activeId = 0;\n\n    Vue.directive('link-active', {\n      priority: 9999,\n      bind: function bind() {\n        var _this = this;\n\n        var id = String(activeId++);\n        // collect v-links contained within this element.\n        // we need do this here before the parent-child relationship\n        // gets messed up by terminal directives (if, for, components)\n        var childLinks = this.el.querySelectorAll('[v-link]');\n        for (var i = 0, l = childLinks.length; i < l; i++) {\n          var link = childLinks[i];\n          var existingId = link.getAttribute(LINK_UPDATE);\n          var value = existingId ? existingId + ',' + id : id;\n          // leave a mark on the link element which can be persisted\n          // through fragment clones.\n          link.setAttribute(LINK_UPDATE, value);\n        }\n        this.vm.$on(LINK_UPDATE, this.cb = function (link, path) {\n          if (link.activeIds.indexOf(id) > -1) {\n            link.updateClasses(path, _this.el);\n          }\n        });\n      },\n      unbind: function unbind() {\n        this.vm.$off(LINK_UPDATE, this.cb);\n      }\n    });\n\n    Vue.directive('link', {\n      priority: onPriority - 2,\n\n      bind: function bind() {\n        var vm = this.vm;\n        /* istanbul ignore if */\n        if (!vm.$route) {\n          warn$1('v-link can only be used inside a router-enabled app.');\n          return;\n        }\n        this.router = vm.$route.router;\n        // update things when the route changes\n        this.unwatch = vm.$watch('$route', _bind(this.onRouteUpdate, this));\n        // check v-link-active ids\n        var activeIds = this.el.getAttribute(LINK_UPDATE);\n        if (activeIds) {\n          this.el.removeAttribute(LINK_UPDATE);\n          this.activeIds = activeIds.split(',');\n        }\n        // no need to handle click if link expects to be opened\n        // in a new window/tab.\n        /* istanbul ignore if */\n        if (this.el.tagName === 'A' && this.el.getAttribute('target') === '_blank') {\n          return;\n        }\n        // handle click\n        this.handler = _bind(this.onClick, this);\n        this.el.addEventListener('click', this.handler);\n      },\n\n      update: function update(target) {\n        this.target = target;\n        if (isObject(target)) {\n          this.append = target.append;\n          this.exact = target.exact;\n          this.prevActiveClass = this.activeClass;\n          this.activeClass = target.activeClass;\n        }\n        this.onRouteUpdate(this.vm.$route);\n      },\n\n      onClick: function onClick(e) {\n        // don't redirect with control keys\n        /* istanbul ignore if */\n        if (e.metaKey || e.ctrlKey || e.shiftKey) return;\n        // don't redirect when preventDefault called\n        /* istanbul ignore if */\n        if (e.defaultPrevented) return;\n        // don't redirect on right click\n        /* istanbul ignore if */\n        if (e.button !== 0) return;\n\n        var target = this.target;\n        if (target) {\n          // v-link with expression, just go\n          e.preventDefault();\n          this.router.go(target);\n        } else {\n          // no expression, delegate for an <a> inside\n          var el = e.target;\n          while (el.tagName !== 'A' && el !== this.el) {\n            el = el.parentNode;\n          }\n          if (el.tagName === 'A' && sameOrigin(el)) {\n            e.preventDefault();\n            var path = el.pathname;\n            if (this.router.history.root) {\n              path = path.replace(this.router.history.rootRE, '');\n            }\n            this.router.go({\n              path: path,\n              replace: target && target.replace,\n              append: target && target.append\n            });\n          }\n        }\n      },\n\n      onRouteUpdate: function onRouteUpdate(route) {\n        // router.stringifyPath is dependent on current route\n        // and needs to be called again whenver route changes.\n        var newPath = this.router.stringifyPath(this.target);\n        if (this.path !== newPath) {\n          this.path = newPath;\n          this.updateActiveMatch();\n          this.updateHref();\n        }\n        if (this.activeIds) {\n          this.vm.$emit(LINK_UPDATE, this, route.path);\n        } else {\n          this.updateClasses(route.path, this.el);\n        }\n      },\n\n      updateActiveMatch: function updateActiveMatch() {\n        this.activeRE = this.path && !this.exact ? new RegExp('^' + this.path.replace(/\\/$/, '').replace(queryStringRE, '').replace(regexEscapeRE, '\\\\$&') + '(\\\\/|$)') : null;\n      },\n\n      updateHref: function updateHref() {\n        if (this.el.tagName !== 'A') {\n          return;\n        }\n        var path = this.path;\n        var router = this.router;\n        var isAbsolute = path.charAt(0) === '/';\n        // do not format non-hash relative paths\n        var href = path && (router.mode === 'hash' || isAbsolute) ? router.history.formatPath(path, this.append) : path;\n        if (href) {\n          this.el.href = href;\n        } else {\n          this.el.removeAttribute('href');\n        }\n      },\n\n      updateClasses: function updateClasses(path, el) {\n        var activeClass = this.activeClass || this.router._linkActiveClass;\n        // clear old class\n        if (this.prevActiveClass && this.prevActiveClass !== activeClass) {\n          toggleClasses(el, this.prevActiveClass, removeClass);\n        }\n        // remove query string before matching\n        var dest = this.path.replace(queryStringRE, '');\n        path = path.replace(queryStringRE, '');\n        // add new class\n        if (this.exact) {\n          if (dest === path ||\n          // also allow additional trailing slash\n          dest.charAt(dest.length - 1) !== '/' && dest === path.replace(trailingSlashRE, '')) {\n            toggleClasses(el, activeClass, addClass);\n          } else {\n            toggleClasses(el, activeClass, removeClass);\n          }\n        } else {\n          if (this.activeRE && this.activeRE.test(path)) {\n            toggleClasses(el, activeClass, addClass);\n          } else {\n            toggleClasses(el, activeClass, removeClass);\n          }\n        }\n      },\n\n      unbind: function unbind() {\n        this.el.removeEventListener('click', this.handler);\n        this.unwatch && this.unwatch();\n      }\n    });\n\n    function sameOrigin(link) {\n      return link.protocol === location.protocol && link.hostname === location.hostname && link.port === location.port;\n    }\n\n    // this function is copied from v-bind:class implementation until\n    // we properly expose it...\n    function toggleClasses(el, key, fn) {\n      key = key.trim();\n      if (key.indexOf(' ') === -1) {\n        fn(el, key);\n        return;\n      }\n      var keys = key.split(/\\s+/);\n      for (var i = 0, l = keys.length; i < l; i++) {\n        fn(el, keys[i]);\n      }\n    }\n  }\n\n  var historyBackends = {\n    abstract: AbstractHistory,\n    hash: HashHistory,\n    html5: HTML5History\n  };\n\n  // late bind during install\n  var Vue = undefined;\n\n  /**\n   * Router constructor\n   *\n   * @param {Object} [options]\n   */\n\n  var Router = (function () {\n    function Router() {\n      var _this = this;\n\n      var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n      var _ref$hashbang = _ref.hashbang;\n      var hashbang = _ref$hashbang === undefined ? true : _ref$hashbang;\n      var _ref$abstract = _ref.abstract;\n      var abstract = _ref$abstract === undefined ? false : _ref$abstract;\n      var _ref$history = _ref.history;\n      var history = _ref$history === undefined ? false : _ref$history;\n      var _ref$saveScrollPosition = _ref.saveScrollPosition;\n      var saveScrollPosition = _ref$saveScrollPosition === undefined ? false : _ref$saveScrollPosition;\n      var _ref$transitionOnLoad = _ref.transitionOnLoad;\n      var transitionOnLoad = _ref$transitionOnLoad === undefined ? false : _ref$transitionOnLoad;\n      var _ref$suppressTransitionError = _ref.suppressTransitionError;\n      var suppressTransitionError = _ref$suppressTransitionError === undefined ? false : _ref$suppressTransitionError;\n      var _ref$root = _ref.root;\n      var root = _ref$root === undefined ? null : _ref$root;\n      var _ref$linkActiveClass = _ref.linkActiveClass;\n      var linkActiveClass = _ref$linkActiveClass === undefined ? 'v-link-active' : _ref$linkActiveClass;\n      babelHelpers.classCallCheck(this, Router);\n\n      /* istanbul ignore if */\n      if (!Router.installed) {\n        throw new Error('Please install the Router with Vue.use() before ' + 'creating an instance.');\n      }\n\n      // Vue instances\n      this.app = null;\n      this._children = [];\n\n      // route recognizer\n      this._recognizer = new RouteRecognizer();\n      this._guardRecognizer = new RouteRecognizer();\n\n      // state\n      this._started = false;\n      this._startCb = null;\n      this._currentRoute = {};\n      this._currentTransition = null;\n      this._previousTransition = null;\n      this._notFoundHandler = null;\n      this._notFoundRedirect = null;\n      this._beforeEachHooks = [];\n      this._afterEachHooks = [];\n\n      // trigger transition on initial render?\n      this._rendered = false;\n      this._transitionOnLoad = transitionOnLoad;\n\n      // history mode\n      this._root = root;\n      this._abstract = abstract;\n      this._hashbang = hashbang;\n\n      // check if HTML5 history is available\n      var hasPushState = typeof window !== 'undefined' && window.history && window.history.pushState;\n      this._history = history && hasPushState;\n      this._historyFallback = history && !hasPushState;\n\n      // create history object\n      var inBrowser = Vue.util.inBrowser;\n      this.mode = !inBrowser || this._abstract ? 'abstract' : this._history ? 'html5' : 'hash';\n\n      var History = historyBackends[this.mode];\n      this.history = new History({\n        root: root,\n        hashbang: this._hashbang,\n        onChange: function onChange(path, state, anchor) {\n          _this._match(path, state, anchor);\n        }\n      });\n\n      // other options\n      this._saveScrollPosition = saveScrollPosition;\n      this._linkActiveClass = linkActiveClass;\n      this._suppress = suppressTransitionError;\n    }\n\n    /**\n     * Allow directly passing components to a route\n     * definition.\n     *\n     * @param {String} path\n     * @param {Object} handler\n     */\n\n    // API ===================================================\n\n    /**\n    * Register a map of top-level paths.\n    *\n    * @param {Object} map\n    */\n\n    Router.prototype.map = function map(_map) {\n      for (var route in _map) {\n        this.on(route, _map[route]);\n      }\n      return this;\n    };\n\n    /**\n     * Register a single root-level path\n     *\n     * @param {String} rootPath\n     * @param {Object} handler\n     *                 - {String} component\n     *                 - {Object} [subRoutes]\n     *                 - {Boolean} [forceRefresh]\n     *                 - {Function} [before]\n     *                 - {Function} [after]\n     */\n\n    Router.prototype.on = function on(rootPath, handler) {\n      if (rootPath === '*') {\n        this._notFound(handler);\n      } else {\n        this._addRoute(rootPath, handler, []);\n      }\n      return this;\n    };\n\n    /**\n     * Set redirects.\n     *\n     * @param {Object} map\n     */\n\n    Router.prototype.redirect = function redirect(map) {\n      for (var path in map) {\n        this._addRedirect(path, map[path]);\n      }\n      return this;\n    };\n\n    /**\n     * Set aliases.\n     *\n     * @param {Object} map\n     */\n\n    Router.prototype.alias = function alias(map) {\n      for (var path in map) {\n        this._addAlias(path, map[path]);\n      }\n      return this;\n    };\n\n    /**\n     * Set global before hook.\n     *\n     * @param {Function} fn\n     */\n\n    Router.prototype.beforeEach = function beforeEach(fn) {\n      this._beforeEachHooks.push(fn);\n      return this;\n    };\n\n    /**\n     * Set global after hook.\n     *\n     * @param {Function} fn\n     */\n\n    Router.prototype.afterEach = function afterEach(fn) {\n      this._afterEachHooks.push(fn);\n      return this;\n    };\n\n    /**\n     * Navigate to a given path.\n     * The path can be an object describing a named path in\n     * the format of { name: '...', params: {}, query: {}}\n     * The path is assumed to be already decoded, and will\n     * be resolved against root (if provided)\n     *\n     * @param {String|Object} path\n     * @param {Boolean} [replace]\n     */\n\n    Router.prototype.go = function go(path) {\n      var replace = false;\n      var append = false;\n      if (Vue.util.isObject(path)) {\n        replace = path.replace;\n        append = path.append;\n      }\n      path = this.stringifyPath(path);\n      if (path) {\n        this.history.go(path, replace, append);\n      }\n    };\n\n    /**\n     * Short hand for replacing current path\n     *\n     * @param {String} path\n     */\n\n    Router.prototype.replace = function replace(path) {\n      if (typeof path === 'string') {\n        path = { path: path };\n      }\n      path.replace = true;\n      this.go(path);\n    };\n\n    /**\n     * Start the router.\n     *\n     * @param {VueConstructor} App\n     * @param {String|Element} container\n     * @param {Function} [cb]\n     */\n\n    Router.prototype.start = function start(App, container, cb) {\n      /* istanbul ignore if */\n      if (this._started) {\n        warn$1('already started.');\n        return;\n      }\n      this._started = true;\n      this._startCb = cb;\n      if (!this.app) {\n        /* istanbul ignore if */\n        if (!App || !container) {\n          throw new Error('Must start vue-router with a component and a ' + 'root container.');\n        }\n        /* istanbul ignore if */\n        if (App instanceof Vue) {\n          throw new Error('Must start vue-router with a component, not a ' + 'Vue instance.');\n        }\n        this._appContainer = container;\n        var Ctor = this._appConstructor = typeof App === 'function' ? App : Vue.extend(App);\n        // give it a name for better debugging\n        Ctor.options.name = Ctor.options.name || 'RouterApp';\n      }\n\n      // handle history fallback in browsers that do not\n      // support HTML5 history API\n      if (this._historyFallback) {\n        var _location = window.location;\n        var _history = new HTML5History({ root: this._root });\n        var path = _history.root ? _location.pathname.replace(_history.rootRE, '') : _location.pathname;\n        if (path && path !== '/') {\n          _location.assign((_history.root || '') + '/' + this.history.formatPath(path) + _location.search);\n          return;\n        }\n      }\n\n      this.history.start();\n    };\n\n    /**\n     * Stop listening to route changes.\n     */\n\n    Router.prototype.stop = function stop() {\n      this.history.stop();\n      this._started = false;\n    };\n\n    /**\n     * Normalize named route object / string paths into\n     * a string.\n     *\n     * @param {Object|String|Number} path\n     * @return {String}\n     */\n\n    Router.prototype.stringifyPath = function stringifyPath(path) {\n      var generatedPath = '';\n      if (path && typeof path === 'object') {\n        if (path.name) {\n          var extend = Vue.util.extend;\n          var currentParams = this._currentTransition && this._currentTransition.to.params;\n          var targetParams = path.params || {};\n          var params = currentParams ? extend(extend({}, currentParams), targetParams) : targetParams;\n          generatedPath = encodeURI(this._recognizer.generate(path.name, params));\n        } else if (path.path) {\n          generatedPath = encodeURI(path.path);\n        }\n        if (path.query) {\n          // note: the generated query string is pre-URL-encoded by the recognizer\n          var query = this._recognizer.generateQueryString(path.query);\n          if (generatedPath.indexOf('?') > -1) {\n            generatedPath += '&' + query.slice(1);\n          } else {\n            generatedPath += query;\n          }\n        }\n      } else {\n        generatedPath = encodeURI(path ? path + '' : '');\n      }\n      return generatedPath;\n    };\n\n    // Internal methods ======================================\n\n    /**\n    * Add a route containing a list of segments to the internal\n    * route recognizer. Will be called recursively to add all\n    * possible sub-routes.\n    *\n    * @param {String} path\n    * @param {Object} handler\n    * @param {Array} segments\n    */\n\n    Router.prototype._addRoute = function _addRoute(path, handler, segments) {\n      guardComponent(path, handler);\n      handler.path = path;\n      handler.fullPath = (segments.reduce(function (path, segment) {\n        return path + segment.path;\n      }, '') + path).replace('//', '/');\n      segments.push({\n        path: path,\n        handler: handler\n      });\n      this._recognizer.add(segments, {\n        as: handler.name\n      });\n      // add sub routes\n      if (handler.subRoutes) {\n        for (var subPath in handler.subRoutes) {\n          // recursively walk all sub routes\n          this._addRoute(subPath, handler.subRoutes[subPath],\n          // pass a copy in recursion to avoid mutating\n          // across branches\n          segments.slice());\n        }\n      }\n    };\n\n    /**\n     * Set the notFound route handler.\n     *\n     * @param {Object} handler\n     */\n\n    Router.prototype._notFound = function _notFound(handler) {\n      guardComponent('*', handler);\n      this._notFoundHandler = [{ handler: handler }];\n    };\n\n    /**\n     * Add a redirect record.\n     *\n     * @param {String} path\n     * @param {String} redirectPath\n     */\n\n    Router.prototype._addRedirect = function _addRedirect(path, redirectPath) {\n      if (path === '*') {\n        this._notFoundRedirect = redirectPath;\n      } else {\n        this._addGuard(path, redirectPath, this.replace);\n      }\n    };\n\n    /**\n     * Add an alias record.\n     *\n     * @param {String} path\n     * @param {String} aliasPath\n     */\n\n    Router.prototype._addAlias = function _addAlias(path, aliasPath) {\n      this._addGuard(path, aliasPath, this._match);\n    };\n\n    /**\n     * Add a path guard.\n     *\n     * @param {String} path\n     * @param {String} mappedPath\n     * @param {Function} handler\n     */\n\n    Router.prototype._addGuard = function _addGuard(path, mappedPath, _handler) {\n      var _this2 = this;\n\n      this._guardRecognizer.add([{\n        path: path,\n        handler: function handler(match, query) {\n          var realPath = mapParams(mappedPath, match.params, query);\n          _handler.call(_this2, realPath);\n        }\n      }]);\n    };\n\n    /**\n     * Check if a path matches any redirect records.\n     *\n     * @param {String} path\n     * @return {Boolean} - if true, will skip normal match.\n     */\n\n    Router.prototype._checkGuard = function _checkGuard(path) {\n      var matched = this._guardRecognizer.recognize(path, true);\n      if (matched) {\n        matched[0].handler(matched[0], matched.queryParams);\n        return true;\n      } else if (this._notFoundRedirect) {\n        matched = this._recognizer.recognize(path);\n        if (!matched) {\n          this.replace(this._notFoundRedirect);\n          return true;\n        }\n      }\n    };\n\n    /**\n     * Match a URL path and set the route context on vm,\n     * triggering view updates.\n     *\n     * @param {String} path\n     * @param {Object} [state]\n     * @param {String} [anchor]\n     */\n\n    Router.prototype._match = function _match(path, state, anchor) {\n      var _this3 = this;\n\n      if (this._checkGuard(path)) {\n        return;\n      }\n\n      var currentRoute = this._currentRoute;\n      var currentTransition = this._currentTransition;\n\n      if (currentTransition) {\n        if (currentTransition.to.path === path) {\n          // do nothing if we have an active transition going to the same path\n          return;\n        } else if (currentRoute.path === path) {\n          // We are going to the same path, but we also have an ongoing but\n          // not-yet-validated transition. Abort that transition and reset to\n          // prev transition.\n          currentTransition.aborted = true;\n          this._currentTransition = this._prevTransition;\n          return;\n        } else {\n          // going to a totally different path. abort ongoing transition.\n          currentTransition.aborted = true;\n        }\n      }\n\n      // construct new route and transition context\n      var route = new Route(path, this);\n      var transition = new RouteTransition(this, route, currentRoute);\n\n      // current transition is updated right now.\n      // however, current route will only be updated after the transition has\n      // been validated.\n      this._prevTransition = currentTransition;\n      this._currentTransition = transition;\n\n      if (!this.app) {\n        (function () {\n          // initial render\n          var router = _this3;\n          _this3.app = new _this3._appConstructor({\n            el: _this3._appContainer,\n            created: function created() {\n              this.$router = router;\n            },\n            _meta: {\n              $route: route\n            }\n          });\n        })();\n      }\n\n      // check global before hook\n      var beforeHooks = this._beforeEachHooks;\n      var startTransition = function startTransition() {\n        transition.start(function () {\n          _this3._postTransition(route, state, anchor);\n        });\n      };\n\n      if (beforeHooks.length) {\n        transition.runQueue(beforeHooks, function (hook, _, next) {\n          if (transition === _this3._currentTransition) {\n            transition.callHook(hook, null, next, {\n              expectBoolean: true\n            });\n          }\n        }, startTransition);\n      } else {\n        startTransition();\n      }\n\n      if (!this._rendered && this._startCb) {\n        this._startCb.call(null);\n      }\n\n      // HACK:\n      // set rendered to true after the transition start, so\n      // that components that are acitvated synchronously know\n      // whether it is the initial render.\n      this._rendered = true;\n    };\n\n    /**\n     * Set current to the new transition.\n     * This is called by the transition object when the\n     * validation of a route has succeeded.\n     *\n     * @param {Transition} transition\n     */\n\n    Router.prototype._onTransitionValidated = function _onTransitionValidated(transition) {\n      // set current route\n      var route = this._currentRoute = transition.to;\n      // update route context for all children\n      if (this.app.$route !== route) {\n        this.app.$route = route;\n        this._children.forEach(function (child) {\n          child.$route = route;\n        });\n      }\n      // call global after hook\n      if (this._afterEachHooks.length) {\n        this._afterEachHooks.forEach(function (hook) {\n          return hook.call(null, {\n            to: transition.to,\n            from: transition.from\n          });\n        });\n      }\n      this._currentTransition.done = true;\n    };\n\n    /**\n     * Handle stuff after the transition.\n     *\n     * @param {Route} route\n     * @param {Object} [state]\n     * @param {String} [anchor]\n     */\n\n    Router.prototype._postTransition = function _postTransition(route, state, anchor) {\n      // handle scroll positions\n      // saved scroll positions take priority\n      // then we check if the path has an anchor\n      var pos = state && state.pos;\n      if (pos && this._saveScrollPosition) {\n        Vue.nextTick(function () {\n          window.scrollTo(pos.x, pos.y);\n        });\n      } else if (anchor) {\n        Vue.nextTick(function () {\n          var el = document.getElementById(anchor.slice(1));\n          if (el) {\n            window.scrollTo(window.scrollX, el.offsetTop);\n          }\n        });\n      }\n    };\n\n    return Router;\n  })();\n\n  function guardComponent(path, handler) {\n    var comp = handler.component;\n    if (Vue.util.isPlainObject(comp)) {\n      comp = handler.component = Vue.extend(comp);\n    }\n    /* istanbul ignore if */\n    if (typeof comp !== 'function') {\n      handler.component = null;\n      warn$1('invalid component for route \"' + path + '\".');\n    }\n  }\n\n  /* Installation */\n\n  Router.installed = false;\n\n  /**\n   * Installation interface.\n   * Install the necessary directives.\n   */\n\n  Router.install = function (externalVue) {\n    /* istanbul ignore if */\n    if (Router.installed) {\n      warn$1('already installed.');\n      return;\n    }\n    Vue = externalVue;\n    applyOverride(Vue);\n    View(Vue);\n    Link(Vue);\n    exports$1.Vue = Vue;\n    Router.installed = true;\n  };\n\n  // auto install\n  /* istanbul ignore if */\n  if (typeof window !== 'undefined' && window.Vue) {\n    window.Vue.use(Router);\n  }\n\n  return Router;\n\n}));\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-router/dist/vue-router.js\n ** module id = 36\n ** module chunks = 0\n **/","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!./../../node_modules/css-loader/index.js!./../../node_modules/vue-loader/lib/style-rewriter.js!./../../node_modules/less-loader/index.js!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./app.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!./../../node_modules/vue-style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../../node_modules/css-loader/index.js!./../../node_modules/vue-loader/lib/style-rewriter.js!./../../node_modules/less-loader/index.js!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./app.vue\", function() {\n\t\t\tvar newContent = require(\"!!./../../node_modules/css-loader/index.js!./../../node_modules/vue-loader/lib/style-rewriter.js!./../../node_modules/less-loader/index.js!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./app.vue\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-style-loader!./~/css-loader!./~/vue-loader/lib/style-rewriter.js!./~/less-loader!./~/vue-loader/lib/selector.js?type=style&index=0!./src/components/app.vue\n ** module id = 37\n ** module chunks = 0\n **/","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!./../../node_modules/css-loader/index.js!./../../node_modules/vue-loader/lib/style-rewriter.js!./../../node_modules/less-loader/index.js!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./search-result.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!./../../node_modules/vue-style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../../node_modules/css-loader/index.js!./../../node_modules/vue-loader/lib/style-rewriter.js!./../../node_modules/less-loader/index.js!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./search-result.vue\", function() {\n\t\t\tvar newContent = require(\"!!./../../node_modules/css-loader/index.js!./../../node_modules/vue-loader/lib/style-rewriter.js!./../../node_modules/less-loader/index.js!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./search-result.vue\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-style-loader!./~/css-loader!./~/vue-loader/lib/style-rewriter.js!./~/less-loader!./~/vue-loader/lib/selector.js?type=style&index=0!./src/components/search-result.vue\n ** module id = 38\n ** module chunks = 0\n **/","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!./../../node_modules/css-loader/index.js!./../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-2955fe6e&scoped=true!./../../node_modules/less-loader/index.js!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./search-box.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!./../../node_modules/vue-style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../../node_modules/css-loader/index.js!./../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-2955fe6e&scoped=true!./../../node_modules/less-loader/index.js!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./search-box.vue\", function() {\n\t\t\tvar newContent = require(\"!!./../../node_modules/css-loader/index.js!./../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-2955fe6e&scoped=true!./../../node_modules/less-loader/index.js!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./search-box.vue\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-style-loader!./~/css-loader!./~/vue-loader/lib/style-rewriter.js?id=_v-2955fe6e&scoped=true!./~/less-loader!./~/vue-loader/lib/selector.js?type=style&index=0!./src/components/search-box.vue\n ** module id = 39\n ** module chunks = 0\n **/","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!./../../node_modules/css-loader/index.js!./../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-6d0180ea&scoped=true!./../../node_modules/less-loader/index.js!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./loading-bar.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!./../../node_modules/vue-style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../../node_modules/css-loader/index.js!./../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-6d0180ea&scoped=true!./../../node_modules/less-loader/index.js!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./loading-bar.vue\", function() {\n\t\t\tvar newContent = require(\"!!./../../node_modules/css-loader/index.js!./../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-6d0180ea&scoped=true!./../../node_modules/less-loader/index.js!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./loading-bar.vue\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-style-loader!./~/css-loader!./~/vue-loader/lib/style-rewriter.js?id=_v-6d0180ea&scoped=true!./~/less-loader!./~/vue-loader/lib/selector.js?type=style&index=0!./src/components/loading-bar.vue\n ** module id = 40\n ** module chunks = 0\n **/","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!./../../node_modules/css-loader/index.js!./../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-8b76b6d4&scoped=true!./../../node_modules/less-loader/index.js!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./movie-box.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!./../../node_modules/vue-style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../../node_modules/css-loader/index.js!./../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-8b76b6d4&scoped=true!./../../node_modules/less-loader/index.js!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./movie-box.vue\", function() {\n\t\t\tvar newContent = require(\"!!./../../node_modules/css-loader/index.js!./../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-8b76b6d4&scoped=true!./../../node_modules/less-loader/index.js!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./movie-box.vue\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-style-loader!./~/css-loader!./~/vue-loader/lib/style-rewriter.js?id=_v-8b76b6d4&scoped=true!./~/less-loader!./~/vue-loader/lib/selector.js?type=style&index=0!./src/components/movie-box.vue\n ** module id = 41\n ** module chunks = 0\n **/","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!./../../node_modules/css-loader/index.js!./../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-ca60e4f8&scoped=true!./../../node_modules/less-loader/index.js!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./movie-view.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!./../../node_modules/vue-style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../../node_modules/css-loader/index.js!./../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-ca60e4f8&scoped=true!./../../node_modules/less-loader/index.js!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./movie-view.vue\", function() {\n\t\t\tvar newContent = require(\"!!./../../node_modules/css-loader/index.js!./../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-ca60e4f8&scoped=true!./../../node_modules/less-loader/index.js!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./movie-view.vue\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-style-loader!./~/css-loader!./~/vue-loader/lib/style-rewriter.js?id=_v-ca60e4f8&scoped=true!./~/less-loader!./~/vue-loader/lib/selector.js?type=style&index=0!./src/views/movie-view.vue\n ** module id = 42\n ** module chunks = 0\n **/","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!./../../node_modules/css-loader/index.js!./../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-d21df490&scoped=true!./../../node_modules/less-loader/index.js!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./search-view.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!./../../node_modules/vue-style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../../node_modules/css-loader/index.js!./../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-d21df490&scoped=true!./../../node_modules/less-loader/index.js!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./search-view.vue\", function() {\n\t\t\tvar newContent = require(\"!!./../../node_modules/css-loader/index.js!./../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-d21df490&scoped=true!./../../node_modules/less-loader/index.js!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./search-view.vue\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-style-loader!./~/css-loader!./~/vue-loader/lib/style-rewriter.js?id=_v-d21df490&scoped=true!./~/less-loader!./~/vue-loader/lib/selector.js?type=style&index=0!./src/views/search-view.vue\n ** module id = 43\n ** module chunks = 0\n **/","/*!\n * Vue.js v1.0.24\n * (c) 2016 Evan You\n * Released under the MIT License.\n */\n'use strict';\n\nfunction set(obj, key, val) {\n  if (hasOwn(obj, key)) {\n    obj[key] = val;\n    return;\n  }\n  if (obj._isVue) {\n    set(obj._data, key, val);\n    return;\n  }\n  var ob = obj.__ob__;\n  if (!ob) {\n    obj[key] = val;\n    return;\n  }\n  ob.convert(key, val);\n  ob.dep.notify();\n  if (ob.vms) {\n    var i = ob.vms.length;\n    while (i--) {\n      var vm = ob.vms[i];\n      vm._proxy(key);\n      vm._digest();\n    }\n  }\n  return val;\n}\n\n/**\n * Delete a property and trigger change if necessary.\n *\n * @param {Object} obj\n * @param {String} key\n */\n\nfunction del(obj, key) {\n  if (!hasOwn(obj, key)) {\n    return;\n  }\n  delete obj[key];\n  var ob = obj.__ob__;\n  if (!ob) {\n    if (obj._isVue) {\n      delete obj._data[key];\n      obj._digest();\n    }\n    return;\n  }\n  ob.dep.notify();\n  if (ob.vms) {\n    var i = ob.vms.length;\n    while (i--) {\n      var vm = ob.vms[i];\n      vm._unproxy(key);\n      vm._digest();\n    }\n  }\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n/**\n * Check whether the object has the property.\n *\n * @param {Object} obj\n * @param {String} key\n * @return {Boolean}\n */\n\nfunction hasOwn(obj, key) {\n  return hasOwnProperty.call(obj, key);\n}\n\n/**\n * Check if an expression is a literal value.\n *\n * @param {String} exp\n * @return {Boolean}\n */\n\nvar literalValueRE = /^\\s?(true|false|-?[\\d\\.]+|'[^']*'|\"[^\"]*\")\\s?$/;\n\nfunction isLiteral(exp) {\n  return literalValueRE.test(exp);\n}\n\n/**\n * Check if a string starts with $ or _\n *\n * @param {String} str\n * @return {Boolean}\n */\n\nfunction isReserved(str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F;\n}\n\n/**\n * Guard text output, make sure undefined outputs\n * empty string\n *\n * @param {*} value\n * @return {String}\n */\n\nfunction _toString(value) {\n  return value == null ? '' : value.toString();\n}\n\n/**\n * Check and convert possible numeric strings to numbers\n * before setting back to data\n *\n * @param {*} value\n * @return {*|Number}\n */\n\nfunction toNumber(value) {\n  if (typeof value !== 'string') {\n    return value;\n  } else {\n    var parsed = Number(value);\n    return isNaN(parsed) ? value : parsed;\n  }\n}\n\n/**\n * Convert string boolean literals into real booleans.\n *\n * @param {*} value\n * @return {*|Boolean}\n */\n\nfunction toBoolean(value) {\n  return value === 'true' ? true : value === 'false' ? false : value;\n}\n\n/**\n * Strip quotes from a string\n *\n * @param {String} str\n * @return {String | false}\n */\n\nfunction stripQuotes(str) {\n  var a = str.charCodeAt(0);\n  var b = str.charCodeAt(str.length - 1);\n  return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n}\n\n/**\n * Camelize a hyphen-delmited string.\n *\n * @param {String} str\n * @return {String}\n */\n\nvar camelizeRE = /-(\\w)/g;\n\nfunction camelize(str) {\n  return str.replace(camelizeRE, toUpper);\n}\n\nfunction toUpper(_, c) {\n  return c ? c.toUpperCase() : '';\n}\n\n/**\n * Hyphenate a camelCase string.\n *\n * @param {String} str\n * @return {String}\n */\n\nvar hyphenateRE = /([a-z\\d])([A-Z])/g;\n\nfunction hyphenate(str) {\n  return str.replace(hyphenateRE, '$1-$2').toLowerCase();\n}\n\n/**\n * Converts hyphen/underscore/slash delimitered names into\n * camelized classNames.\n *\n * e.g. my-component => MyComponent\n *      some_else    => SomeElse\n *      some/comp    => SomeComp\n *\n * @param {String} str\n * @return {String}\n */\n\nvar classifyRE = /(?:^|[-_\\/])(\\w)/g;\n\nfunction classify(str) {\n  return str.replace(classifyRE, toUpper);\n}\n\n/**\n * Simple bind, faster than native\n *\n * @param {Function} fn\n * @param {Object} ctx\n * @return {Function}\n */\n\nfunction bind(fn, ctx) {\n  return function (a) {\n    var l = arguments.length;\n    return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);\n  };\n}\n\n/**\n * Convert an Array-like object to a real Array.\n *\n * @param {Array-like} list\n * @param {Number} [start] - start index\n * @return {Array}\n */\n\nfunction toArray(list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret;\n}\n\n/**\n * Mix properties into target object.\n *\n * @param {Object} to\n * @param {Object} from\n */\n\nfunction extend(to, from) {\n  var keys = Object.keys(from);\n  var i = keys.length;\n  while (i--) {\n    to[keys[i]] = from[keys[i]];\n  }\n  return to;\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nfunction isObject(obj) {\n  return obj !== null && typeof obj === 'object';\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nvar toString = Object.prototype.toString;\nvar OBJECT_STRING = '[object Object]';\n\nfunction isPlainObject(obj) {\n  return toString.call(obj) === OBJECT_STRING;\n}\n\n/**\n * Array type check.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nvar isArray = Array.isArray;\n\n/**\n * Define a property.\n *\n * @param {Object} obj\n * @param {String} key\n * @param {*} val\n * @param {Boolean} [enumerable]\n */\n\nfunction def(obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Debounce a function so it only gets called after the\n * input stops arriving after the given wait period.\n *\n * @param {Function} func\n * @param {Number} wait\n * @return {Function} - the debounced function\n */\n\nfunction _debounce(func, wait) {\n  var timeout, args, context, timestamp, result;\n  var later = function later() {\n    var last = Date.now() - timestamp;\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    }\n  };\n  return function () {\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    if (!timeout) {\n      timeout = setTimeout(later, wait);\n    }\n    return result;\n  };\n}\n\n/**\n * Manual indexOf because it's slightly faster than\n * native.\n *\n * @param {Array} arr\n * @param {*} obj\n */\n\nfunction indexOf(arr, obj) {\n  var i = arr.length;\n  while (i--) {\n    if (arr[i] === obj) return i;\n  }\n  return -1;\n}\n\n/**\n * Make a cancellable version of an async callback.\n *\n * @param {Function} fn\n * @return {Function}\n */\n\nfunction cancellable(fn) {\n  var cb = function cb() {\n    if (!cb.cancelled) {\n      return fn.apply(this, arguments);\n    }\n  };\n  cb.cancel = function () {\n    cb.cancelled = true;\n  };\n  return cb;\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n *\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n */\n\nfunction looseEqual(a, b) {\n  /* eslint-disable eqeqeq */\n  return a == b || (isObject(a) && isObject(b) ? JSON.stringify(a) === JSON.stringify(b) : false);\n  /* eslint-enable eqeqeq */\n}\n\nvar hasProto = ('__proto__' in {});\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined' && Object.prototype.toString.call(window) !== '[object Object]';\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n// UA sniffing for working around browser-specific quirks\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isAndroid = UA && UA.indexOf('android') > 0;\nvar isIos = UA && /(iphone|ipad|ipod|ios)/i.test(UA);\nvar isWechat = UA && UA.indexOf('micromessenger') > 0;\n\nvar transitionProp = undefined;\nvar transitionEndEvent = undefined;\nvar animationProp = undefined;\nvar animationEndEvent = undefined;\n\n// Transition property/event sniffing\nif (inBrowser && !isIE9) {\n  var isWebkitTrans = window.ontransitionend === undefined && window.onwebkittransitionend !== undefined;\n  var isWebkitAnim = window.onanimationend === undefined && window.onwebkitanimationend !== undefined;\n  transitionProp = isWebkitTrans ? 'WebkitTransition' : 'transition';\n  transitionEndEvent = isWebkitTrans ? 'webkitTransitionEnd' : 'transitionend';\n  animationProp = isWebkitAnim ? 'WebkitAnimation' : 'animation';\n  animationEndEvent = isWebkitAnim ? 'webkitAnimationEnd' : 'animationend';\n}\n\n/**\n * Defer a task to execute it asynchronously. Ideally this\n * should be executed as a microtask, so we leverage\n * MutationObserver if it's available, and fallback to\n * setTimeout(0).\n *\n * @param {Function} cb\n * @param {Object} ctx\n */\n\nvar nextTick = (function () {\n  var callbacks = [];\n  var pending = false;\n  var timerFunc;\n  function nextTickHandler() {\n    pending = false;\n    var copies = callbacks.slice(0);\n    callbacks = [];\n    for (var i = 0; i < copies.length; i++) {\n      copies[i]();\n    }\n  }\n\n  /* istanbul ignore if */\n  if (typeof MutationObserver !== 'undefined' && !(isWechat && isIos)) {\n    var counter = 1;\n    var observer = new MutationObserver(nextTickHandler);\n    var textNode = document.createTextNode(counter);\n    observer.observe(textNode, {\n      characterData: true\n    });\n    timerFunc = function () {\n      counter = (counter + 1) % 2;\n      textNode.data = counter;\n    };\n  } else {\n    // webpack attempts to inject a shim for setImmediate\n    // if it is used as a global, so we have to work around that to\n    // avoid bundling unnecessary code.\n    var context = inBrowser ? window : typeof global !== 'undefined' ? global : {};\n    timerFunc = context.setImmediate || setTimeout;\n  }\n  return function (cb, ctx) {\n    var func = ctx ? function () {\n      cb.call(ctx);\n    } : cb;\n    callbacks.push(func);\n    if (pending) return;\n    pending = true;\n    timerFunc(nextTickHandler, 0);\n  };\n})();\n\nvar _Set = undefined;\n/* istanbul ignore if */\nif (typeof Set !== 'undefined' && Set.toString().match(/native code/)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = function () {\n    this.set = Object.create(null);\n  };\n  _Set.prototype.has = function (key) {\n    return this.set[key] !== undefined;\n  };\n  _Set.prototype.add = function (key) {\n    this.set[key] = 1;\n  };\n  _Set.prototype.clear = function () {\n    this.set = Object.create(null);\n  };\n}\n\nfunction Cache(limit) {\n  this.size = 0;\n  this.limit = limit;\n  this.head = this.tail = undefined;\n  this._keymap = Object.create(null);\n}\n\nvar p = Cache.prototype;\n\n/**\n * Put <value> into the cache associated with <key>.\n * Returns the entry which was removed to make room for\n * the new entry. Otherwise undefined is returned.\n * (i.e. if there was enough room already).\n *\n * @param {String} key\n * @param {*} value\n * @return {Entry|undefined}\n */\n\np.put = function (key, value) {\n  var removed;\n  if (this.size === this.limit) {\n    removed = this.shift();\n  }\n\n  var entry = this.get(key, true);\n  if (!entry) {\n    entry = {\n      key: key\n    };\n    this._keymap[key] = entry;\n    if (this.tail) {\n      this.tail.newer = entry;\n      entry.older = this.tail;\n    } else {\n      this.head = entry;\n    }\n    this.tail = entry;\n    this.size++;\n  }\n  entry.value = value;\n\n  return removed;\n};\n\n/**\n * Purge the least recently used (oldest) entry from the\n * cache. Returns the removed entry or undefined if the\n * cache was empty.\n */\n\np.shift = function () {\n  var entry = this.head;\n  if (entry) {\n    this.head = this.head.newer;\n    this.head.older = undefined;\n    entry.newer = entry.older = undefined;\n    this._keymap[entry.key] = undefined;\n    this.size--;\n  }\n  return entry;\n};\n\n/**\n * Get and register recent use of <key>. Returns the value\n * associated with <key> or undefined if not in cache.\n *\n * @param {String} key\n * @param {Boolean} returnEntry\n * @return {Entry|*}\n */\n\np.get = function (key, returnEntry) {\n  var entry = this._keymap[key];\n  if (entry === undefined) return;\n  if (entry === this.tail) {\n    return returnEntry ? entry : entry.value;\n  }\n  // HEAD--------------TAIL\n  //   <.older   .newer>\n  //  <--- add direction --\n  //   A  B  C  <D>  E\n  if (entry.newer) {\n    if (entry === this.head) {\n      this.head = entry.newer;\n    }\n    entry.newer.older = entry.older; // C <-- E.\n  }\n  if (entry.older) {\n    entry.older.newer = entry.newer; // C. --> E\n  }\n  entry.newer = undefined; // D --x\n  entry.older = this.tail; // D. --> E\n  if (this.tail) {\n    this.tail.newer = entry; // E. <-- D\n  }\n  this.tail = entry;\n  return returnEntry ? entry : entry.value;\n};\n\nvar cache$1 = new Cache(1000);\nvar filterTokenRE = /[^\\s'\"]+|'[^']*'|\"[^\"]*\"/g;\nvar reservedArgRE = /^in$|^-?\\d+/;\n\n/**\n * Parser state\n */\n\nvar str;\nvar dir;\nvar c;\nvar prev;\nvar i;\nvar l;\nvar lastFilterIndex;\nvar inSingle;\nvar inDouble;\nvar curly;\nvar square;\nvar paren;\n/**\n * Push a filter to the current directive object\n */\n\nfunction pushFilter() {\n  var exp = str.slice(lastFilterIndex, i).trim();\n  var filter;\n  if (exp) {\n    filter = {};\n    var tokens = exp.match(filterTokenRE);\n    filter.name = tokens[0];\n    if (tokens.length > 1) {\n      filter.args = tokens.slice(1).map(processFilterArg);\n    }\n  }\n  if (filter) {\n    (dir.filters = dir.filters || []).push(filter);\n  }\n  lastFilterIndex = i + 1;\n}\n\n/**\n * Check if an argument is dynamic and strip quotes.\n *\n * @param {String} arg\n * @return {Object}\n */\n\nfunction processFilterArg(arg) {\n  if (reservedArgRE.test(arg)) {\n    return {\n      value: toNumber(arg),\n      dynamic: false\n    };\n  } else {\n    var stripped = stripQuotes(arg);\n    var dynamic = stripped === arg;\n    return {\n      value: dynamic ? arg : stripped,\n      dynamic: dynamic\n    };\n  }\n}\n\n/**\n * Parse a directive value and extract the expression\n * and its filters into a descriptor.\n *\n * Example:\n *\n * \"a + 1 | uppercase\" will yield:\n * {\n *   expression: 'a + 1',\n *   filters: [\n *     { name: 'uppercase', args: null }\n *   ]\n * }\n *\n * @param {String} s\n * @return {Object}\n */\n\nfunction parseDirective(s) {\n  var hit = cache$1.get(s);\n  if (hit) {\n    return hit;\n  }\n\n  // reset parser state\n  str = s;\n  inSingle = inDouble = false;\n  curly = square = paren = 0;\n  lastFilterIndex = 0;\n  dir = {};\n\n  for (i = 0, l = str.length; i < l; i++) {\n    prev = c;\n    c = str.charCodeAt(i);\n    if (inSingle) {\n      // check single quote\n      if (c === 0x27 && prev !== 0x5C) inSingle = !inSingle;\n    } else if (inDouble) {\n      // check double quote\n      if (c === 0x22 && prev !== 0x5C) inDouble = !inDouble;\n    } else if (c === 0x7C && // pipe\n    str.charCodeAt(i + 1) !== 0x7C && str.charCodeAt(i - 1) !== 0x7C) {\n      if (dir.expression == null) {\n        // first filter, end of expression\n        lastFilterIndex = i + 1;\n        dir.expression = str.slice(0, i).trim();\n      } else {\n        // already has filter\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 0x22:\n          inDouble = true;break; // \"\n        case 0x27:\n          inSingle = true;break; // '\n        case 0x28:\n          paren++;break; // (\n        case 0x29:\n          paren--;break; // )\n        case 0x5B:\n          square++;break; // [\n        case 0x5D:\n          square--;break; // ]\n        case 0x7B:\n          curly++;break; // {\n        case 0x7D:\n          curly--;break; // }\n      }\n    }\n  }\n\n  if (dir.expression == null) {\n    dir.expression = str.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n\n  cache$1.put(s, dir);\n  return dir;\n}\n\nvar directive = Object.freeze({\n  parseDirective: parseDirective\n});\n\nvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\nvar cache = undefined;\nvar tagRE = undefined;\nvar htmlRE = undefined;\n/**\n * Escape a string so it can be used in a RegExp\n * constructor.\n *\n * @param {String} str\n */\n\nfunction escapeRegex(str) {\n  return str.replace(regexEscapeRE, '\\\\$&');\n}\n\nfunction compileRegex() {\n  var open = escapeRegex(config.delimiters[0]);\n  var close = escapeRegex(config.delimiters[1]);\n  var unsafeOpen = escapeRegex(config.unsafeDelimiters[0]);\n  var unsafeClose = escapeRegex(config.unsafeDelimiters[1]);\n  tagRE = new RegExp(unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '|' + open + '((?:.|\\\\n)+?)' + close, 'g');\n  htmlRE = new RegExp('^' + unsafeOpen + '.*' + unsafeClose + '$');\n  // reset cache\n  cache = new Cache(1000);\n}\n\n/**\n * Parse a template text string into an array of tokens.\n *\n * @param {String} text\n * @return {Array<Object> | null}\n *               - {String} type\n *               - {String} value\n *               - {Boolean} [html]\n *               - {Boolean} [oneTime]\n */\n\nfunction parseText(text) {\n  if (!cache) {\n    compileRegex();\n  }\n  var hit = cache.get(text);\n  if (hit) {\n    return hit;\n  }\n  if (!tagRE.test(text)) {\n    return null;\n  }\n  var tokens = [];\n  var lastIndex = tagRE.lastIndex = 0;\n  var match, index, html, value, first, oneTime;\n  /* eslint-disable no-cond-assign */\n  while (match = tagRE.exec(text)) {\n    /* eslint-enable no-cond-assign */\n    index = match.index;\n    // push text token\n    if (index > lastIndex) {\n      tokens.push({\n        value: text.slice(lastIndex, index)\n      });\n    }\n    // tag token\n    html = htmlRE.test(match[0]);\n    value = html ? match[1] : match[2];\n    first = value.charCodeAt(0);\n    oneTime = first === 42; // *\n    value = oneTime ? value.slice(1) : value;\n    tokens.push({\n      tag: true,\n      value: value.trim(),\n      html: html,\n      oneTime: oneTime\n    });\n    lastIndex = index + match[0].length;\n  }\n  if (lastIndex < text.length) {\n    tokens.push({\n      value: text.slice(lastIndex)\n    });\n  }\n  cache.put(text, tokens);\n  return tokens;\n}\n\n/**\n * Format a list of tokens into an expression.\n * e.g. tokens parsed from 'a {{b}} c' can be serialized\n * into one single expression as '\"a \" + b + \" c\"'.\n *\n * @param {Array} tokens\n * @param {Vue} [vm]\n * @return {String}\n */\n\nfunction tokensToExp(tokens, vm) {\n  if (tokens.length > 1) {\n    return tokens.map(function (token) {\n      return formatToken(token, vm);\n    }).join('+');\n  } else {\n    return formatToken(tokens[0], vm, true);\n  }\n}\n\n/**\n * Format a single token.\n *\n * @param {Object} token\n * @param {Vue} [vm]\n * @param {Boolean} [single]\n * @return {String}\n */\n\nfunction formatToken(token, vm, single) {\n  return token.tag ? token.oneTime && vm ? '\"' + vm.$eval(token.value) + '\"' : inlineFilters(token.value, single) : '\"' + token.value + '\"';\n}\n\n/**\n * For an attribute with multiple interpolation tags,\n * e.g. attr=\"some-{{thing | filter}}\", in order to combine\n * the whole thing into a single watchable expression, we\n * have to inline those filters. This function does exactly\n * that. This is a bit hacky but it avoids heavy changes\n * to directive parser and watcher mechanism.\n *\n * @param {String} exp\n * @param {Boolean} single\n * @return {String}\n */\n\nvar filterRE = /[^|]\\|[^|]/;\nfunction inlineFilters(exp, single) {\n  if (!filterRE.test(exp)) {\n    return single ? exp : '(' + exp + ')';\n  } else {\n    var dir = parseDirective(exp);\n    if (!dir.filters) {\n      return '(' + exp + ')';\n    } else {\n      return 'this._applyFilters(' + dir.expression + // value\n      ',null,' + // oldValue (null for read)\n      JSON.stringify(dir.filters) + // filter descriptors\n      ',false)'; // write?\n    }\n  }\n}\n\nvar text = Object.freeze({\n  compileRegex: compileRegex,\n  parseText: parseText,\n  tokensToExp: tokensToExp\n});\n\nvar delimiters = ['{{', '}}'];\nvar unsafeDelimiters = ['{{{', '}}}'];\n\nvar config = Object.defineProperties({\n\n  /**\n   * Whether to print debug messages.\n   * Also enables stack trace for warnings.\n   *\n   * @type {Boolean}\n   */\n\n  debug: false,\n\n  /**\n   * Whether to suppress warnings.\n   *\n   * @type {Boolean}\n   */\n\n  silent: false,\n\n  /**\n   * Whether to use async rendering.\n   */\n\n  async: true,\n\n  /**\n   * Whether to warn against errors caught when evaluating\n   * expressions.\n   */\n\n  warnExpressionErrors: true,\n\n  /**\n   * Whether to allow devtools inspection.\n   * Disabled by default in production builds.\n   */\n\n  devtools: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Internal flag to indicate the delimiters have been\n   * changed.\n   *\n   * @type {Boolean}\n   */\n\n  _delimitersChanged: true,\n\n  /**\n   * List of asset types that a component can own.\n   *\n   * @type {Array}\n   */\n\n  _assetTypes: ['component', 'directive', 'elementDirective', 'filter', 'transition', 'partial'],\n\n  /**\n   * prop binding modes\n   */\n\n  _propBindingModes: {\n    ONE_WAY: 0,\n    TWO_WAY: 1,\n    ONE_TIME: 2\n  },\n\n  /**\n   * Max circular updates allowed in a batcher flush cycle.\n   */\n\n  _maxUpdateCount: 100\n\n}, {\n  delimiters: { /**\n                 * Interpolation delimiters. Changing these would trigger\n                 * the text parser to re-compile the regular expressions.\n                 *\n                 * @type {Array<String>}\n                 */\n\n    get: function get() {\n      return delimiters;\n    },\n    set: function set(val) {\n      delimiters = val;\n      compileRegex();\n    },\n    configurable: true,\n    enumerable: true\n  },\n  unsafeDelimiters: {\n    get: function get() {\n      return unsafeDelimiters;\n    },\n    set: function set(val) {\n      unsafeDelimiters = val;\n      compileRegex();\n    },\n    configurable: true,\n    enumerable: true\n  }\n});\n\nvar warn = undefined;\nvar formatComponentName = undefined;\n\nif (process.env.NODE_ENV !== 'production') {\n  (function () {\n    var hasConsole = typeof console !== 'undefined';\n\n    warn = function (msg, vm) {\n      if (hasConsole && !config.silent) {\n        console.error('[Vue warn]: ' + msg + (vm ? formatComponentName(vm) : ''));\n      }\n    };\n\n    formatComponentName = function (vm) {\n      var name = vm._isVue ? vm.$options.name : vm.name;\n      return name ? ' (found in component: <' + hyphenate(name) + '>)' : '';\n    };\n  })();\n}\n\n/**\n * Append with transition.\n *\n * @param {Element} el\n * @param {Element} target\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction appendWithTransition(el, target, vm, cb) {\n  applyTransition(el, 1, function () {\n    target.appendChild(el);\n  }, vm, cb);\n}\n\n/**\n * InsertBefore with transition.\n *\n * @param {Element} el\n * @param {Element} target\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction beforeWithTransition(el, target, vm, cb) {\n  applyTransition(el, 1, function () {\n    before(el, target);\n  }, vm, cb);\n}\n\n/**\n * Remove with transition.\n *\n * @param {Element} el\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction removeWithTransition(el, vm, cb) {\n  applyTransition(el, -1, function () {\n    remove(el);\n  }, vm, cb);\n}\n\n/**\n * Apply transitions with an operation callback.\n *\n * @param {Element} el\n * @param {Number} direction\n *                  1: enter\n *                 -1: leave\n * @param {Function} op - the actual DOM operation\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction applyTransition(el, direction, op, vm, cb) {\n  var transition = el.__v_trans;\n  if (!transition ||\n  // skip if there are no js hooks and CSS transition is\n  // not supported\n  !transition.hooks && !transitionEndEvent ||\n  // skip transitions for initial compile\n  !vm._isCompiled ||\n  // if the vm is being manipulated by a parent directive\n  // during the parent's compilation phase, skip the\n  // animation.\n  vm.$parent && !vm.$parent._isCompiled) {\n    op();\n    if (cb) cb();\n    return;\n  }\n  var action = direction > 0 ? 'enter' : 'leave';\n  transition[action](op, cb);\n}\n\nvar transition = Object.freeze({\n  appendWithTransition: appendWithTransition,\n  beforeWithTransition: beforeWithTransition,\n  removeWithTransition: removeWithTransition,\n  applyTransition: applyTransition\n});\n\n/**\n * Query an element selector if it's not an element already.\n *\n * @param {String|Element} el\n * @return {Element}\n */\n\nfunction query(el) {\n  if (typeof el === 'string') {\n    var selector = el;\n    el = document.querySelector(el);\n    if (!el) {\n      process.env.NODE_ENV !== 'production' && warn('Cannot find element: ' + selector);\n    }\n  }\n  return el;\n}\n\n/**\n * Check if a node is in the document.\n * Note: document.documentElement.contains should work here\n * but always returns false for comment nodes in phantomjs,\n * making unit tests difficult. This is fixed by doing the\n * contains() check on the node's parentNode instead of\n * the node itself.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction inDoc(node) {\n  if (!node) return false;\n  var doc = node.ownerDocument.documentElement;\n  var parent = node.parentNode;\n  return doc === node || doc === parent || !!(parent && parent.nodeType === 1 && doc.contains(parent));\n}\n\n/**\n * Get and remove an attribute from a node.\n *\n * @param {Node} node\n * @param {String} _attr\n */\n\nfunction getAttr(node, _attr) {\n  var val = node.getAttribute(_attr);\n  if (val !== null) {\n    node.removeAttribute(_attr);\n  }\n  return val;\n}\n\n/**\n * Get an attribute with colon or v-bind: prefix.\n *\n * @param {Node} node\n * @param {String} name\n * @return {String|null}\n */\n\nfunction getBindAttr(node, name) {\n  var val = getAttr(node, ':' + name);\n  if (val === null) {\n    val = getAttr(node, 'v-bind:' + name);\n  }\n  return val;\n}\n\n/**\n * Check the presence of a bind attribute.\n *\n * @param {Node} node\n * @param {String} name\n * @return {Boolean}\n */\n\nfunction hasBindAttr(node, name) {\n  return node.hasAttribute(name) || node.hasAttribute(':' + name) || node.hasAttribute('v-bind:' + name);\n}\n\n/**\n * Insert el before target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction before(el, target) {\n  target.parentNode.insertBefore(el, target);\n}\n\n/**\n * Insert el after target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction after(el, target) {\n  if (target.nextSibling) {\n    before(el, target.nextSibling);\n  } else {\n    target.parentNode.appendChild(el);\n  }\n}\n\n/**\n * Remove el from DOM\n *\n * @param {Element} el\n */\n\nfunction remove(el) {\n  el.parentNode.removeChild(el);\n}\n\n/**\n * Prepend el to target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction prepend(el, target) {\n  if (target.firstChild) {\n    before(el, target.firstChild);\n  } else {\n    target.appendChild(el);\n  }\n}\n\n/**\n * Replace target with el\n *\n * @param {Element} target\n * @param {Element} el\n */\n\nfunction replace(target, el) {\n  var parent = target.parentNode;\n  if (parent) {\n    parent.replaceChild(el, target);\n  }\n}\n\n/**\n * Add event listener shorthand.\n *\n * @param {Element} el\n * @param {String} event\n * @param {Function} cb\n * @param {Boolean} [useCapture]\n */\n\nfunction on(el, event, cb, useCapture) {\n  el.addEventListener(event, cb, useCapture);\n}\n\n/**\n * Remove event listener shorthand.\n *\n * @param {Element} el\n * @param {String} event\n * @param {Function} cb\n */\n\nfunction off(el, event, cb) {\n  el.removeEventListener(event, cb);\n}\n\n/**\n * For IE9 compat: when both class and :class are present\n * getAttribute('class') returns wrong value...\n *\n * @param {Element} el\n * @return {String}\n */\n\nfunction getClass(el) {\n  var classname = el.className;\n  if (typeof classname === 'object') {\n    classname = classname.baseVal || '';\n  }\n  return classname;\n}\n\n/**\n * In IE9, setAttribute('class') will result in empty class\n * if the element also has the :class attribute; However in\n * PhantomJS, setting `className` does not work on SVG elements...\n * So we have to do a conditional check here.\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction setClass(el, cls) {\n  /* istanbul ignore if */\n  if (isIE9 && !/svg$/.test(el.namespaceURI)) {\n    el.className = cls;\n  } else {\n    el.setAttribute('class', cls);\n  }\n}\n\n/**\n * Add class with compatibility for IE & SVG\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction addClass(el, cls) {\n  if (el.classList) {\n    el.classList.add(cls);\n  } else {\n    var cur = ' ' + getClass(el) + ' ';\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      setClass(el, (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for IE & SVG\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction removeClass(el, cls) {\n  if (el.classList) {\n    el.classList.remove(cls);\n  } else {\n    var cur = ' ' + getClass(el) + ' ';\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    setClass(el, cur.trim());\n  }\n  if (!el.className) {\n    el.removeAttribute('class');\n  }\n}\n\n/**\n * Extract raw content inside an element into a temporary\n * container div\n *\n * @param {Element} el\n * @param {Boolean} asFragment\n * @return {Element|DocumentFragment}\n */\n\nfunction extractContent(el, asFragment) {\n  var child;\n  var rawContent;\n  /* istanbul ignore if */\n  if (isTemplate(el) && isFragment(el.content)) {\n    el = el.content;\n  }\n  if (el.hasChildNodes()) {\n    trimNode(el);\n    rawContent = asFragment ? document.createDocumentFragment() : document.createElement('div');\n    /* eslint-disable no-cond-assign */\n    while (child = el.firstChild) {\n      /* eslint-enable no-cond-assign */\n      rawContent.appendChild(child);\n    }\n  }\n  return rawContent;\n}\n\n/**\n * Trim possible empty head/tail text and comment\n * nodes inside a parent.\n *\n * @param {Node} node\n */\n\nfunction trimNode(node) {\n  var child;\n  /* eslint-disable no-sequences */\n  while ((child = node.firstChild, isTrimmable(child))) {\n    node.removeChild(child);\n  }\n  while ((child = node.lastChild, isTrimmable(child))) {\n    node.removeChild(child);\n  }\n  /* eslint-enable no-sequences */\n}\n\nfunction isTrimmable(node) {\n  return node && (node.nodeType === 3 && !node.data.trim() || node.nodeType === 8);\n}\n\n/**\n * Check if an element is a template tag.\n * Note if the template appears inside an SVG its tagName\n * will be in lowercase.\n *\n * @param {Element} el\n */\n\nfunction isTemplate(el) {\n  return el.tagName && el.tagName.toLowerCase() === 'template';\n}\n\n/**\n * Create an \"anchor\" for performing dom insertion/removals.\n * This is used in a number of scenarios:\n * - fragment instance\n * - v-html\n * - v-if\n * - v-for\n * - component\n *\n * @param {String} content\n * @param {Boolean} persist - IE trashes empty textNodes on\n *                            cloneNode(true), so in certain\n *                            cases the anchor needs to be\n *                            non-empty to be persisted in\n *                            templates.\n * @return {Comment|Text}\n */\n\nfunction createAnchor(content, persist) {\n  var anchor = config.debug ? document.createComment(content) : document.createTextNode(persist ? ' ' : '');\n  anchor.__v_anchor = true;\n  return anchor;\n}\n\n/**\n * Find a component ref attribute that starts with $.\n *\n * @param {Element} node\n * @return {String|undefined}\n */\n\nvar refRE = /^v-ref:/;\n\nfunction findRef(node) {\n  if (node.hasAttributes()) {\n    var attrs = node.attributes;\n    for (var i = 0, l = attrs.length; i < l; i++) {\n      var name = attrs[i].name;\n      if (refRE.test(name)) {\n        return camelize(name.replace(refRE, ''));\n      }\n    }\n  }\n}\n\n/**\n * Map a function to a range of nodes .\n *\n * @param {Node} node\n * @param {Node} end\n * @param {Function} op\n */\n\nfunction mapNodeRange(node, end, op) {\n  var next;\n  while (node !== end) {\n    next = node.nextSibling;\n    op(node);\n    node = next;\n  }\n  op(end);\n}\n\n/**\n * Remove a range of nodes with transition, store\n * the nodes in a fragment with correct ordering,\n * and call callback when done.\n *\n * @param {Node} start\n * @param {Node} end\n * @param {Vue} vm\n * @param {DocumentFragment} frag\n * @param {Function} cb\n */\n\nfunction removeNodeRange(start, end, vm, frag, cb) {\n  var done = false;\n  var removed = 0;\n  var nodes = [];\n  mapNodeRange(start, end, function (node) {\n    if (node === end) done = true;\n    nodes.push(node);\n    removeWithTransition(node, vm, onRemoved);\n  });\n  function onRemoved() {\n    removed++;\n    if (done && removed >= nodes.length) {\n      for (var i = 0; i < nodes.length; i++) {\n        frag.appendChild(nodes[i]);\n      }\n      cb && cb();\n    }\n  }\n}\n\n/**\n * Check if a node is a DocumentFragment.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction isFragment(node) {\n  return node && node.nodeType === 11;\n}\n\n/**\n * Get outerHTML of elements, taking care\n * of SVG elements in IE as well.\n *\n * @param {Element} el\n * @return {String}\n */\n\nfunction getOuterHTML(el) {\n  if (el.outerHTML) {\n    return el.outerHTML;\n  } else {\n    var container = document.createElement('div');\n    container.appendChild(el.cloneNode(true));\n    return container.innerHTML;\n  }\n}\n\nvar commonTagRE = /^(div|p|span|img|a|b|i|br|ul|ol|li|h1|h2|h3|h4|h5|h6|code|pre|table|th|td|tr|form|label|input|select|option|nav|article|section|header|footer)$/i;\nvar reservedTagRE = /^(slot|partial|component)$/i;\n\nvar isUnknownElement = undefined;\nif (process.env.NODE_ENV !== 'production') {\n  isUnknownElement = function (el, tag) {\n    if (tag.indexOf('-') > -1) {\n      // http://stackoverflow.com/a/28210364/1070244\n      return el.constructor === window.HTMLUnknownElement || el.constructor === window.HTMLElement;\n    } else {\n      return (/HTMLUnknownElement/.test(el.toString()) &&\n        // Chrome returns unknown for several HTML5 elements.\n        // https://code.google.com/p/chromium/issues/detail?id=540526\n        !/^(data|time|rtc|rb)$/.test(tag)\n      );\n    }\n  };\n}\n\n/**\n * Check if an element is a component, if yes return its\n * component id.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Object|undefined}\n */\n\nfunction checkComponentAttr(el, options) {\n  var tag = el.tagName.toLowerCase();\n  var hasAttrs = el.hasAttributes();\n  if (!commonTagRE.test(tag) && !reservedTagRE.test(tag)) {\n    if (resolveAsset(options, 'components', tag)) {\n      return { id: tag };\n    } else {\n      var is = hasAttrs && getIsBinding(el, options);\n      if (is) {\n        return is;\n      } else if (process.env.NODE_ENV !== 'production') {\n        var expectedTag = options._componentNameMap && options._componentNameMap[tag];\n        if (expectedTag) {\n          warn('Unknown custom element: <' + tag + '> - ' + 'did you mean <' + expectedTag + '>? ' + 'HTML is case-insensitive, remember to use kebab-case in templates.');\n        } else if (isUnknownElement(el, tag)) {\n          warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly? For recursive components, ' + 'make sure to provide the \"name\" option.');\n        }\n      }\n    }\n  } else if (hasAttrs) {\n    return getIsBinding(el, options);\n  }\n}\n\n/**\n * Get \"is\" binding from an element.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Object|undefined}\n */\n\nfunction getIsBinding(el, options) {\n  // dynamic syntax\n  var exp = el.getAttribute('is');\n  if (exp != null) {\n    if (resolveAsset(options, 'components', exp)) {\n      el.removeAttribute('is');\n      return { id: exp };\n    }\n  } else {\n    exp = getBindAttr(el, 'is');\n    if (exp != null) {\n      return { id: exp, dynamic: true };\n    }\n  }\n}\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n *\n * All strategy functions follow the same signature:\n *\n * @param {*} parentVal\n * @param {*} childVal\n * @param {Vue} [vm]\n */\n\nvar strats = config.optionMergeStrategies = Object.create(null);\n\n/**\n * Helper that recursively merges two data objects together.\n */\n\nfunction mergeData(to, from) {\n  var key, toVal, fromVal;\n  for (key in from) {\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (isObject(toVal) && isObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to;\n}\n\n/**\n * Data\n */\n\nstrats.data = function (parentVal, childVal, vm) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal;\n    }\n    if (typeof childVal !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn('The \"data\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n      return parentVal;\n    }\n    if (!parentVal) {\n      return childVal;\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn() {\n      return mergeData(childVal.call(this), parentVal.call(this));\n    };\n  } else if (parentVal || childVal) {\n    return function mergedInstanceDataFn() {\n      // instance merge\n      var instanceData = typeof childVal === 'function' ? childVal.call(vm) : childVal;\n      var defaultData = typeof parentVal === 'function' ? parentVal.call(vm) : undefined;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData);\n      } else {\n        return defaultData;\n      }\n    };\n  }\n};\n\n/**\n * El\n */\n\nstrats.el = function (parentVal, childVal, vm) {\n  if (!vm && childVal && typeof childVal !== 'function') {\n    process.env.NODE_ENV !== 'production' && warn('The \"el\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n    return;\n  }\n  var ret = childVal || parentVal;\n  // invoke the element factory if this is instance merge\n  return vm && typeof ret === 'function' ? ret.call(vm) : ret;\n};\n\n/**\n * Hooks and param attributes are merged as arrays.\n */\n\nstrats.init = strats.created = strats.ready = strats.attached = strats.detached = strats.beforeCompile = strats.compiled = strats.beforeDestroy = strats.destroyed = strats.activate = function (parentVal, childVal) {\n  return childVal ? parentVal ? parentVal.concat(childVal) : isArray(childVal) ? childVal : [childVal] : parentVal;\n};\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\n\nfunction mergeAssets(parentVal, childVal) {\n  var res = Object.create(parentVal || null);\n  return childVal ? extend(res, guardArrayAssets(childVal)) : res;\n}\n\nconfig._assetTypes.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Events & Watchers.\n *\n * Events & watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\n\nstrats.watch = strats.events = function (parentVal, childVal) {\n  if (!childVal) return parentVal;\n  if (!parentVal) return childVal;\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key in childVal) {\n    var parent = ret[key];\n    var child = childVal[key];\n    if (parent && !isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key] = parent ? parent.concat(child) : [child];\n  }\n  return ret;\n};\n\n/**\n * Other object hashes.\n */\n\nstrats.props = strats.methods = strats.computed = function (parentVal, childVal) {\n  if (!childVal) return parentVal;\n  if (!parentVal) return childVal;\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  extend(ret, childVal);\n  return ret;\n};\n\n/**\n * Default strategy.\n */\n\nvar defaultStrat = function defaultStrat(parentVal, childVal) {\n  return childVal === undefined ? parentVal : childVal;\n};\n\n/**\n * Make sure component options get converted to actual\n * constructors.\n *\n * @param {Object} options\n */\n\nfunction guardComponents(options) {\n  if (options.components) {\n    var components = options.components = guardArrayAssets(options.components);\n    var ids = Object.keys(components);\n    var def;\n    if (process.env.NODE_ENV !== 'production') {\n      var map = options._componentNameMap = {};\n    }\n    for (var i = 0, l = ids.length; i < l; i++) {\n      var key = ids[i];\n      if (commonTagRE.test(key) || reservedTagRE.test(key)) {\n        process.env.NODE_ENV !== 'production' && warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + key);\n        continue;\n      }\n      // record a all lowercase <-> kebab-case mapping for\n      // possible custom element case error warning\n      if (process.env.NODE_ENV !== 'production') {\n        map[key.replace(/-/g, '').toLowerCase()] = hyphenate(key);\n      }\n      def = components[key];\n      if (isPlainObject(def)) {\n        components[key] = Vue.extend(def);\n      }\n    }\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n *\n * @param {Object} options\n */\n\nfunction guardProps(options) {\n  var props = options.props;\n  var i, val;\n  if (isArray(props)) {\n    options.props = {};\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        options.props[val] = null;\n      } else if (val.name) {\n        options.props[val.name] = val;\n      }\n    }\n  } else if (isPlainObject(props)) {\n    var keys = Object.keys(props);\n    i = keys.length;\n    while (i--) {\n      val = props[keys[i]];\n      if (typeof val === 'function') {\n        props[keys[i]] = { type: val };\n      }\n    }\n  }\n}\n\n/**\n * Guard an Array-format assets option and converted it\n * into the key-value Object format.\n *\n * @param {Object|Array} assets\n * @return {Object}\n */\n\nfunction guardArrayAssets(assets) {\n  if (isArray(assets)) {\n    var res = {};\n    var i = assets.length;\n    var asset;\n    while (i--) {\n      asset = assets[i];\n      var id = typeof asset === 'function' ? asset.options && asset.options.name || asset.id : asset.name || asset.id;\n      if (!id) {\n        process.env.NODE_ENV !== 'production' && warn('Array-syntax assets must provide a \"name\" or \"id\" field.');\n      } else {\n        res[id] = asset;\n      }\n    }\n    return res;\n  }\n  return assets;\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n *\n * @param {Object} parent\n * @param {Object} child\n * @param {Vue} [vm] - if vm is present, indicates this is\n *                     an instantiation merge.\n */\n\nfunction mergeOptions(parent, child, vm) {\n  guardComponents(child);\n  guardProps(child);\n  if (process.env.NODE_ENV !== 'production') {\n    if (child.propsData && !vm) {\n      warn('propsData can only be used as an instantiation option.');\n    }\n  }\n  var options = {};\n  var key;\n  if (child['extends']) {\n    parent = typeof child['extends'] === 'function' ? mergeOptions(parent, child['extends'].options, vm) : mergeOptions(parent, child['extends'], vm);\n  }\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      parent = mergeOptions(parent, child.mixins[i], vm);\n    }\n  }\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField(key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options;\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n *\n * @param {Object} options\n * @param {String} type\n * @param {String} id\n * @param {Boolean} warnMissing\n * @return {Object|Function}\n */\n\nfunction resolveAsset(options, type, id, warnMissing) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return;\n  }\n  var assets = options[type];\n  var camelizedId;\n  var res = assets[id] ||\n  // camelCase ID\n  assets[camelizedId = camelize(id)] ||\n  // Pascal Case ID\n  assets[camelizedId.charAt(0).toUpperCase() + camelizedId.slice(1)];\n  if (process.env.NODE_ENV !== 'production' && warnMissing && !res) {\n    warn('Failed to resolve ' + type.slice(0, -1) + ': ' + id, options);\n  }\n  return res;\n}\n\nvar uid$1 = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n *\n * @constructor\n */\nfunction Dep() {\n  this.id = uid$1++;\n  this.subs = [];\n}\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\n\n/**\n * Add a directive subscriber.\n *\n * @param {Directive} sub\n */\n\nDep.prototype.addSub = function (sub) {\n  this.subs.push(sub);\n};\n\n/**\n * Remove a directive subscriber.\n *\n * @param {Directive} sub\n */\n\nDep.prototype.removeSub = function (sub) {\n  this.subs.$remove(sub);\n};\n\n/**\n * Add self as a dependency to the target watcher.\n */\n\nDep.prototype.depend = function () {\n  Dep.target.addDep(this);\n};\n\n/**\n * Notify all subscribers of a new value.\n */\n\nDep.prototype.notify = function () {\n  // stablize the subscriber list first\n  var subs = toArray(this.subs);\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto)\n\n/**\n * Intercept mutating methods and emit events\n */\n\n;['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'].forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator() {\n    // avoid leaking arguments:\n    // http://jsperf.com/closure-with-arguments\n    var i = arguments.length;\n    var args = new Array(i);\n    while (i--) {\n      args[i] = arguments[i];\n    }\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n        inserted = args;\n        break;\n      case 'unshift':\n        inserted = args;\n        break;\n      case 'splice':\n        inserted = args.slice(2);\n        break;\n    }\n    if (inserted) ob.observeArray(inserted);\n    // notify change\n    ob.dep.notify();\n    return result;\n  });\n});\n\n/**\n * Swap the element at the given index with a new value\n * and emits corresponding event.\n *\n * @param {Number} index\n * @param {*} val\n * @return {*} - replaced element\n */\n\ndef(arrayProto, '$set', function $set(index, val) {\n  if (index >= this.length) {\n    this.length = Number(index) + 1;\n  }\n  return this.splice(index, 1, val)[0];\n});\n\n/**\n * Convenience method to remove the element at given index or target element reference.\n *\n * @param {*} item\n */\n\ndef(arrayProto, '$remove', function $remove(item) {\n  /* istanbul ignore if */\n  if (!this.length) return;\n  var index = indexOf(this, item);\n  if (index > -1) {\n    return this.splice(index, 1);\n  }\n});\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * By default, when a reactive property is set, the new value is\n * also converted to become reactive. However in certain cases, e.g.\n * v-for scope alias and props, we don't want to force conversion\n * because the value may be a nested value under a frozen data structure.\n *\n * So whenever we want to set a reactive property without forcing\n * conversion on the new value, we wrap that call inside this function.\n */\n\nvar shouldConvert = true;\n\nfunction withoutConversion(fn) {\n  shouldConvert = false;\n  fn();\n  shouldConvert = true;\n}\n\n/**\n * Observer class that are attached to each observed\n * object. Once attached, the observer converts target\n * object's property keys into getter/setters that\n * collect dependencies and dispatches updates.\n *\n * @param {Array|Object} value\n * @constructor\n */\n\nfunction Observer(value) {\n  this.value = value;\n  this.dep = new Dep();\n  def(value, '__ob__', this);\n  if (isArray(value)) {\n    var augment = hasProto ? protoAugment : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n}\n\n// Instance methods\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n *\n * @param {Object} obj\n */\n\nObserver.prototype.walk = function (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0, l = keys.length; i < l; i++) {\n    this.convert(keys[i], obj[keys[i]]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n *\n * @param {Array} items\n */\n\nObserver.prototype.observeArray = function (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n/**\n * Convert a property into getter/setter so we can emit\n * the events when the property is accessed/changed.\n *\n * @param {String} key\n * @param {*} val\n */\n\nObserver.prototype.convert = function (key, val) {\n  defineReactive(this.value, key, val);\n};\n\n/**\n * Add an owner vm, so that when $set/$delete mutations\n * happen we can notify owner vms to proxy the keys and\n * digest the watchers. This is only called when the object\n * is observed as an instance's root $data.\n *\n * @param {Vue} vm\n */\n\nObserver.prototype.addVm = function (vm) {\n  (this.vms || (this.vms = [])).push(vm);\n};\n\n/**\n * Remove an owner vm. This is called when the object is\n * swapped out as an instance's $data object.\n *\n * @param {Vue} vm\n */\n\nObserver.prototype.removeVm = function (vm) {\n  this.vms.$remove(vm);\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n *\n * @param {Object|Array} target\n * @param {Object} src\n */\n\nfunction protoAugment(target, src) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n *\n * @param {Object|Array} target\n * @param {Object} proto\n */\n\nfunction copyAugment(target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n *\n * @param {*} value\n * @param {Vue} [vm]\n * @return {Observer|undefined}\n * @static\n */\n\nfunction observe(value, vm) {\n  if (!value || typeof value !== 'object') {\n    return;\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (shouldConvert && (isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {\n    ob = new Observer(value);\n  }\n  if (ob && vm) {\n    ob.addVm(vm);\n  }\n  return ob;\n}\n\n/**\n * Define a reactive property on an Object.\n *\n * @param {Object} obj\n * @param {String} key\n * @param {*} val\n */\n\nfunction defineReactive(obj, key, val) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return;\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n\n  var childOb = observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter() {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n        }\n        if (isArray(value)) {\n          for (var e, i = 0, l = value.length; i < l; i++) {\n            e = value[i];\n            e && e.__ob__ && e.__ob__.dep.depend();\n          }\n        }\n      }\n      return value;\n    },\n    set: function reactiveSetter(newVal) {\n      var value = getter ? getter.call(obj) : val;\n      if (newVal === value) {\n        return;\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n\n\nvar util = Object.freeze({\n\tdefineReactive: defineReactive,\n\tset: set,\n\tdel: del,\n\thasOwn: hasOwn,\n\tisLiteral: isLiteral,\n\tisReserved: isReserved,\n\t_toString: _toString,\n\ttoNumber: toNumber,\n\ttoBoolean: toBoolean,\n\tstripQuotes: stripQuotes,\n\tcamelize: camelize,\n\thyphenate: hyphenate,\n\tclassify: classify,\n\tbind: bind,\n\ttoArray: toArray,\n\textend: extend,\n\tisObject: isObject,\n\tisPlainObject: isPlainObject,\n\tdef: def,\n\tdebounce: _debounce,\n\tindexOf: indexOf,\n\tcancellable: cancellable,\n\tlooseEqual: looseEqual,\n\tisArray: isArray,\n\thasProto: hasProto,\n\tinBrowser: inBrowser,\n\tdevtools: devtools,\n\tisIE9: isIE9,\n\tisAndroid: isAndroid,\n\tisIos: isIos,\n\tisWechat: isWechat,\n\tget transitionProp () { return transitionProp; },\n\tget transitionEndEvent () { return transitionEndEvent; },\n\tget animationProp () { return animationProp; },\n\tget animationEndEvent () { return animationEndEvent; },\n\tnextTick: nextTick,\n\tget _Set () { return _Set; },\n\tquery: query,\n\tinDoc: inDoc,\n\tgetAttr: getAttr,\n\tgetBindAttr: getBindAttr,\n\thasBindAttr: hasBindAttr,\n\tbefore: before,\n\tafter: after,\n\tremove: remove,\n\tprepend: prepend,\n\treplace: replace,\n\ton: on,\n\toff: off,\n\tsetClass: setClass,\n\taddClass: addClass,\n\tremoveClass: removeClass,\n\textractContent: extractContent,\n\ttrimNode: trimNode,\n\tisTemplate: isTemplate,\n\tcreateAnchor: createAnchor,\n\tfindRef: findRef,\n\tmapNodeRange: mapNodeRange,\n\tremoveNodeRange: removeNodeRange,\n\tisFragment: isFragment,\n\tgetOuterHTML: getOuterHTML,\n\tmergeOptions: mergeOptions,\n\tresolveAsset: resolveAsset,\n\tcheckComponentAttr: checkComponentAttr,\n\tcommonTagRE: commonTagRE,\n\treservedTagRE: reservedTagRE,\n\tget warn () { return warn; }\n});\n\nvar uid = 0;\n\nfunction initMixin (Vue) {\n  /**\n   * The main init sequence. This is called for every\n   * instance, including ones that are created from extended\n   * constructors.\n   *\n   * @param {Object} options - this options object should be\n   *                           the result of merging class\n   *                           options and the options passed\n   *                           in to the constructor.\n   */\n\n  Vue.prototype._init = function (options) {\n    options = options || {};\n\n    this.$el = null;\n    this.$parent = options.parent;\n    this.$root = this.$parent ? this.$parent.$root : this;\n    this.$children = [];\n    this.$refs = {}; // child vm references\n    this.$els = {}; // element references\n    this._watchers = []; // all watchers as an array\n    this._directives = []; // all directives\n\n    // a uid\n    this._uid = uid++;\n\n    // a flag to avoid this being observed\n    this._isVue = true;\n\n    // events bookkeeping\n    this._events = {}; // registered callbacks\n    this._eventsCount = {}; // for $broadcast optimization\n\n    // fragment instance properties\n    this._isFragment = false;\n    this._fragment = // @type {DocumentFragment}\n    this._fragmentStart = // @type {Text|Comment}\n    this._fragmentEnd = null; // @type {Text|Comment}\n\n    // lifecycle state\n    this._isCompiled = this._isDestroyed = this._isReady = this._isAttached = this._isBeingDestroyed = this._vForRemoving = false;\n    this._unlinkFn = null;\n\n    // context:\n    // if this is a transcluded component, context\n    // will be the common parent vm of this instance\n    // and its host.\n    this._context = options._context || this.$parent;\n\n    // scope:\n    // if this is inside an inline v-for, the scope\n    // will be the intermediate scope created for this\n    // repeat fragment. this is used for linking props\n    // and container directives.\n    this._scope = options._scope;\n\n    // fragment:\n    // if this instance is compiled inside a Fragment, it\n    // needs to reigster itself as a child of that fragment\n    // for attach/detach to work properly.\n    this._frag = options._frag;\n    if (this._frag) {\n      this._frag.children.push(this);\n    }\n\n    // push self into parent / transclusion host\n    if (this.$parent) {\n      this.$parent.$children.push(this);\n    }\n\n    // merge options.\n    options = this.$options = mergeOptions(this.constructor.options, options, this);\n\n    // set ref\n    this._updateRef();\n\n    // initialize data as empty object.\n    // it will be filled up in _initData().\n    this._data = {};\n\n    // call init hook\n    this._callHook('init');\n\n    // initialize data observation and scope inheritance.\n    this._initState();\n\n    // setup event system and option events.\n    this._initEvents();\n\n    // call created hook\n    this._callHook('created');\n\n    // if `el` option is passed, start compilation.\n    if (options.el) {\n      this.$mount(options.el);\n    }\n  };\n}\n\nvar pathCache = new Cache(1000);\n\n// actions\nvar APPEND = 0;\nvar PUSH = 1;\nvar INC_SUB_PATH_DEPTH = 2;\nvar PUSH_SUB_PATH = 3;\n\n// states\nvar BEFORE_PATH = 0;\nvar IN_PATH = 1;\nvar BEFORE_IDENT = 2;\nvar IN_IDENT = 3;\nvar IN_SUB_PATH = 4;\nvar IN_SINGLE_QUOTE = 5;\nvar IN_DOUBLE_QUOTE = 6;\nvar AFTER_PATH = 7;\nvar ERROR = 8;\n\nvar pathStateMachine = [];\n\npathStateMachine[BEFORE_PATH] = {\n  'ws': [BEFORE_PATH],\n  'ident': [IN_IDENT, APPEND],\n  '[': [IN_SUB_PATH],\n  'eof': [AFTER_PATH]\n};\n\npathStateMachine[IN_PATH] = {\n  'ws': [IN_PATH],\n  '.': [BEFORE_IDENT],\n  '[': [IN_SUB_PATH],\n  'eof': [AFTER_PATH]\n};\n\npathStateMachine[BEFORE_IDENT] = {\n  'ws': [BEFORE_IDENT],\n  'ident': [IN_IDENT, APPEND]\n};\n\npathStateMachine[IN_IDENT] = {\n  'ident': [IN_IDENT, APPEND],\n  '0': [IN_IDENT, APPEND],\n  'number': [IN_IDENT, APPEND],\n  'ws': [IN_PATH, PUSH],\n  '.': [BEFORE_IDENT, PUSH],\n  '[': [IN_SUB_PATH, PUSH],\n  'eof': [AFTER_PATH, PUSH]\n};\n\npathStateMachine[IN_SUB_PATH] = {\n  \"'\": [IN_SINGLE_QUOTE, APPEND],\n  '\"': [IN_DOUBLE_QUOTE, APPEND],\n  '[': [IN_SUB_PATH, INC_SUB_PATH_DEPTH],\n  ']': [IN_PATH, PUSH_SUB_PATH],\n  'eof': ERROR,\n  'else': [IN_SUB_PATH, APPEND]\n};\n\npathStateMachine[IN_SINGLE_QUOTE] = {\n  \"'\": [IN_SUB_PATH, APPEND],\n  'eof': ERROR,\n  'else': [IN_SINGLE_QUOTE, APPEND]\n};\n\npathStateMachine[IN_DOUBLE_QUOTE] = {\n  '\"': [IN_SUB_PATH, APPEND],\n  'eof': ERROR,\n  'else': [IN_DOUBLE_QUOTE, APPEND]\n};\n\n/**\n * Determine the type of a character in a keypath.\n *\n * @param {Char} ch\n * @return {String} type\n */\n\nfunction getPathCharType(ch) {\n  if (ch === undefined) {\n    return 'eof';\n  }\n\n  var code = ch.charCodeAt(0);\n\n  switch (code) {\n    case 0x5B: // [\n    case 0x5D: // ]\n    case 0x2E: // .\n    case 0x22: // \"\n    case 0x27: // '\n    case 0x30:\n      // 0\n      return ch;\n\n    case 0x5F: // _\n    case 0x24:\n      // $\n      return 'ident';\n\n    case 0x20: // Space\n    case 0x09: // Tab\n    case 0x0A: // Newline\n    case 0x0D: // Return\n    case 0xA0: // No-break space\n    case 0xFEFF: // Byte Order Mark\n    case 0x2028: // Line Separator\n    case 0x2029:\n      // Paragraph Separator\n      return 'ws';\n  }\n\n  // a-z, A-Z\n  if (code >= 0x61 && code <= 0x7A || code >= 0x41 && code <= 0x5A) {\n    return 'ident';\n  }\n\n  // 1-9\n  if (code >= 0x31 && code <= 0x39) {\n    return 'number';\n  }\n\n  return 'else';\n}\n\n/**\n * Format a subPath, return its plain form if it is\n * a literal string or number. Otherwise prepend the\n * dynamic indicator (*).\n *\n * @param {String} path\n * @return {String}\n */\n\nfunction formatSubPath(path) {\n  var trimmed = path.trim();\n  // invalid leading 0\n  if (path.charAt(0) === '0' && isNaN(path)) {\n    return false;\n  }\n  return isLiteral(trimmed) ? stripQuotes(trimmed) : '*' + trimmed;\n}\n\n/**\n * Parse a string path into an array of segments\n *\n * @param {String} path\n * @return {Array|undefined}\n */\n\nfunction parse(path) {\n  var keys = [];\n  var index = -1;\n  var mode = BEFORE_PATH;\n  var subPathDepth = 0;\n  var c, newChar, key, type, transition, action, typeMap;\n\n  var actions = [];\n\n  actions[PUSH] = function () {\n    if (key !== undefined) {\n      keys.push(key);\n      key = undefined;\n    }\n  };\n\n  actions[APPEND] = function () {\n    if (key === undefined) {\n      key = newChar;\n    } else {\n      key += newChar;\n    }\n  };\n\n  actions[INC_SUB_PATH_DEPTH] = function () {\n    actions[APPEND]();\n    subPathDepth++;\n  };\n\n  actions[PUSH_SUB_PATH] = function () {\n    if (subPathDepth > 0) {\n      subPathDepth--;\n      mode = IN_SUB_PATH;\n      actions[APPEND]();\n    } else {\n      subPathDepth = 0;\n      key = formatSubPath(key);\n      if (key === false) {\n        return false;\n      } else {\n        actions[PUSH]();\n      }\n    }\n  };\n\n  function maybeUnescapeQuote() {\n    var nextChar = path[index + 1];\n    if (mode === IN_SINGLE_QUOTE && nextChar === \"'\" || mode === IN_DOUBLE_QUOTE && nextChar === '\"') {\n      index++;\n      newChar = '\\\\' + nextChar;\n      actions[APPEND]();\n      return true;\n    }\n  }\n\n  while (mode != null) {\n    index++;\n    c = path[index];\n\n    if (c === '\\\\' && maybeUnescapeQuote()) {\n      continue;\n    }\n\n    type = getPathCharType(c);\n    typeMap = pathStateMachine[mode];\n    transition = typeMap[type] || typeMap['else'] || ERROR;\n\n    if (transition === ERROR) {\n      return; // parse error\n    }\n\n    mode = transition[0];\n    action = actions[transition[1]];\n    if (action) {\n      newChar = transition[2];\n      newChar = newChar === undefined ? c : newChar;\n      if (action() === false) {\n        return;\n      }\n    }\n\n    if (mode === AFTER_PATH) {\n      keys.raw = path;\n      return keys;\n    }\n  }\n}\n\n/**\n * External parse that check for a cache hit first\n *\n * @param {String} path\n * @return {Array|undefined}\n */\n\nfunction parsePath(path) {\n  var hit = pathCache.get(path);\n  if (!hit) {\n    hit = parse(path);\n    if (hit) {\n      pathCache.put(path, hit);\n    }\n  }\n  return hit;\n}\n\n/**\n * Get from an object from a path string\n *\n * @param {Object} obj\n * @param {String} path\n */\n\nfunction getPath(obj, path) {\n  return parseExpression(path).get(obj);\n}\n\n/**\n * Warn against setting non-existent root path on a vm.\n */\n\nvar warnNonExistent;\nif (process.env.NODE_ENV !== 'production') {\n  warnNonExistent = function (path, vm) {\n    warn('You are setting a non-existent path \"' + path.raw + '\" ' + 'on a vm instance. Consider pre-initializing the property ' + 'with the \"data\" option for more reliable reactivity ' + 'and better performance.', vm);\n  };\n}\n\n/**\n * Set on an object from a path\n *\n * @param {Object} obj\n * @param {String | Array} path\n * @param {*} val\n */\n\nfunction setPath(obj, path, val) {\n  var original = obj;\n  if (typeof path === 'string') {\n    path = parse(path);\n  }\n  if (!path || !isObject(obj)) {\n    return false;\n  }\n  var last, key;\n  for (var i = 0, l = path.length; i < l; i++) {\n    last = obj;\n    key = path[i];\n    if (key.charAt(0) === '*') {\n      key = parseExpression(key.slice(1)).get.call(original, original);\n    }\n    if (i < l - 1) {\n      obj = obj[key];\n      if (!isObject(obj)) {\n        obj = {};\n        if (process.env.NODE_ENV !== 'production' && last._isVue) {\n          warnNonExistent(path, last);\n        }\n        set(last, key, obj);\n      }\n    } else {\n      if (isArray(obj)) {\n        obj.$set(key, val);\n      } else if (key in obj) {\n        obj[key] = val;\n      } else {\n        if (process.env.NODE_ENV !== 'production' && obj._isVue) {\n          warnNonExistent(path, obj);\n        }\n        set(obj, key, val);\n      }\n    }\n  }\n  return true;\n}\n\nvar path = Object.freeze({\n  parsePath: parsePath,\n  getPath: getPath,\n  setPath: setPath\n});\n\nvar expressionCache = new Cache(1000);\n\nvar allowedKeywords = 'Math,Date,this,true,false,null,undefined,Infinity,NaN,' + 'isNaN,isFinite,decodeURI,decodeURIComponent,encodeURI,' + 'encodeURIComponent,parseInt,parseFloat';\nvar allowedKeywordsRE = new RegExp('^(' + allowedKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\n// keywords that don't make sense inside expressions\nvar improperKeywords = 'break,case,class,catch,const,continue,debugger,default,' + 'delete,do,else,export,extends,finally,for,function,if,' + 'import,in,instanceof,let,return,super,switch,throw,try,' + 'var,while,with,yield,enum,await,implements,package,' + 'protected,static,interface,private,public';\nvar improperKeywordsRE = new RegExp('^(' + improperKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\nvar wsRE = /\\s/g;\nvar newlineRE = /\\n/g;\nvar saveRE = /[\\{,]\\s*[\\w\\$_]+\\s*:|('(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`)|new |typeof |void /g;\nvar restoreRE = /\"(\\d+)\"/g;\nvar pathTestRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$/;\nvar identRE = /[^\\w$\\.](?:[A-Za-z_$][\\w$]*)/g;\nvar booleanLiteralRE = /^(?:true|false)$/;\n\n/**\n * Save / Rewrite / Restore\n *\n * When rewriting paths found in an expression, it is\n * possible for the same letter sequences to be found in\n * strings and Object literal property keys. Therefore we\n * remove and store these parts in a temporary array, and\n * restore them after the path rewrite.\n */\n\nvar saved = [];\n\n/**\n * Save replacer\n *\n * The save regex can match two possible cases:\n * 1. An opening object literal\n * 2. A string\n * If matched as a plain string, we need to escape its\n * newlines, since the string needs to be preserved when\n * generating the function body.\n *\n * @param {String} str\n * @param {String} isString - str if matched as a string\n * @return {String} - placeholder with index\n */\n\nfunction save(str, isString) {\n  var i = saved.length;\n  saved[i] = isString ? str.replace(newlineRE, '\\\\n') : str;\n  return '\"' + i + '\"';\n}\n\n/**\n * Path rewrite replacer\n *\n * @param {String} raw\n * @return {String}\n */\n\nfunction rewrite(raw) {\n  var c = raw.charAt(0);\n  var path = raw.slice(1);\n  if (allowedKeywordsRE.test(path)) {\n    return raw;\n  } else {\n    path = path.indexOf('\"') > -1 ? path.replace(restoreRE, restore) : path;\n    return c + 'scope.' + path;\n  }\n}\n\n/**\n * Restore replacer\n *\n * @param {String} str\n * @param {String} i - matched save index\n * @return {String}\n */\n\nfunction restore(str, i) {\n  return saved[i];\n}\n\n/**\n * Rewrite an expression, prefixing all path accessors with\n * `scope.` and generate getter/setter functions.\n *\n * @param {String} exp\n * @return {Function}\n */\n\nfunction compileGetter(exp) {\n  if (improperKeywordsRE.test(exp)) {\n    process.env.NODE_ENV !== 'production' && warn('Avoid using reserved keywords in expression: ' + exp);\n  }\n  // reset state\n  saved.length = 0;\n  // save strings and object literal keys\n  var body = exp.replace(saveRE, save).replace(wsRE, '');\n  // rewrite all paths\n  // pad 1 space here becaue the regex matches 1 extra char\n  body = (' ' + body).replace(identRE, rewrite).replace(restoreRE, restore);\n  return makeGetterFn(body);\n}\n\n/**\n * Build a getter function. Requires eval.\n *\n * We isolate the try/catch so it doesn't affect the\n * optimization of the parse function when it is not called.\n *\n * @param {String} body\n * @return {Function|undefined}\n */\n\nfunction makeGetterFn(body) {\n  try {\n    /* eslint-disable no-new-func */\n    return new Function('scope', 'return ' + body + ';');\n    /* eslint-enable no-new-func */\n  } catch (e) {\n    process.env.NODE_ENV !== 'production' && warn('Invalid expression. ' + 'Generated function body: ' + body);\n  }\n}\n\n/**\n * Compile a setter function for the expression.\n *\n * @param {String} exp\n * @return {Function|undefined}\n */\n\nfunction compileSetter(exp) {\n  var path = parsePath(exp);\n  if (path) {\n    return function (scope, val) {\n      setPath(scope, path, val);\n    };\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid setter expression: ' + exp);\n  }\n}\n\n/**\n * Parse an expression into re-written getter/setters.\n *\n * @param {String} exp\n * @param {Boolean} needSet\n * @return {Function}\n */\n\nfunction parseExpression(exp, needSet) {\n  exp = exp.trim();\n  // try cache\n  var hit = expressionCache.get(exp);\n  if (hit) {\n    if (needSet && !hit.set) {\n      hit.set = compileSetter(hit.exp);\n    }\n    return hit;\n  }\n  var res = { exp: exp };\n  res.get = isSimplePath(exp) && exp.indexOf('[') < 0\n  // optimized super simple getter\n  ? makeGetterFn('scope.' + exp)\n  // dynamic getter\n  : compileGetter(exp);\n  if (needSet) {\n    res.set = compileSetter(exp);\n  }\n  expressionCache.put(exp, res);\n  return res;\n}\n\n/**\n * Check if an expression is a simple path.\n *\n * @param {String} exp\n * @return {Boolean}\n */\n\nfunction isSimplePath(exp) {\n  return pathTestRE.test(exp) &&\n  // don't treat true/false as paths\n  !booleanLiteralRE.test(exp) &&\n  // Math constants e.g. Math.PI, Math.E etc.\n  exp.slice(0, 5) !== 'Math.';\n}\n\nvar expression = Object.freeze({\n  parseExpression: parseExpression,\n  isSimplePath: isSimplePath\n});\n\n// we have two separate queues: one for directive updates\n// and one for user watcher registered via $watch().\n// we want to guarantee directive updates to be called\n// before user watchers so that when user watchers are\n// triggered, the DOM would have already been in updated\n// state.\n\nvar queue = [];\nvar userQueue = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\n\n/**\n * Reset the batcher's state.\n */\n\nfunction resetBatcherState() {\n  queue.length = 0;\n  userQueue.length = 0;\n  has = {};\n  circular = {};\n  waiting = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\n\nfunction flushBatcherQueue() {\n  var _again = true;\n\n  _function: while (_again) {\n    _again = false;\n\n    runBatcherQueue(queue);\n    runBatcherQueue(userQueue);\n    // user watchers triggered more watchers,\n    // keep flushing until it depletes\n    if (queue.length) {\n      _again = true;\n      continue _function;\n    }\n    // dev tool hook\n    /* istanbul ignore if */\n    if (devtools && config.devtools) {\n      devtools.emit('flush');\n    }\n    resetBatcherState();\n  }\n}\n\n/**\n * Run the watchers in a single queue.\n *\n * @param {Array} queue\n */\n\nfunction runBatcherQueue(queue) {\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (var i = 0; i < queue.length; i++) {\n    var watcher = queue[i];\n    var id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (process.env.NODE_ENV !== 'production' && has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > config._maxUpdateCount) {\n        warn('You may have an infinite update loop for watcher ' + 'with expression \"' + watcher.expression + '\"', watcher.vm);\n        break;\n      }\n    }\n  }\n  queue.length = 0;\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n *\n * @param {Watcher} watcher\n *   properties:\n *   - {Number} id\n *   - {Function} run\n */\n\nfunction pushWatcher(watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    // push watcher into appropriate queue\n    var q = watcher.user ? userQueue : queue;\n    has[id] = q.length;\n    q.push(watcher);\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n      nextTick(flushBatcherQueue);\n    }\n  }\n}\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n *\n * @param {Vue} vm\n * @param {String|Function} expOrFn\n * @param {Function} cb\n * @param {Object} options\n *                 - {Array} filters\n *                 - {Boolean} twoWay\n *                 - {Boolean} deep\n *                 - {Boolean} user\n *                 - {Boolean} sync\n *                 - {Boolean} lazy\n *                 - {Function} [preProcess]\n *                 - {Function} [postProcess]\n * @constructor\n */\nfunction Watcher(vm, expOrFn, cb, options) {\n  // mix in options\n  if (options) {\n    extend(this, options);\n  }\n  var isFn = typeof expOrFn === 'function';\n  this.vm = vm;\n  vm._watchers.push(this);\n  this.expression = expOrFn;\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.prevError = null; // for async error stacks\n  // parse expression for getter/setter\n  if (isFn) {\n    this.getter = expOrFn;\n    this.setter = undefined;\n  } else {\n    var res = parseExpression(expOrFn, this.twoWay);\n    this.getter = res.get;\n    this.setter = res.set;\n  }\n  this.value = this.lazy ? undefined : this.get();\n  // state for avoiding false triggers for deep and Array\n  // watchers during vm._digest()\n  this.queued = this.shallow = false;\n}\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\n\nWatcher.prototype.get = function () {\n  this.beforeGet();\n  var scope = this.scope || this.vm;\n  var value;\n  try {\n    value = this.getter.call(scope, scope);\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n      warn('Error when evaluating expression ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n    }\n  }\n  // \"touch\" every property so they are all tracked as\n  // dependencies for deep watching\n  if (this.deep) {\n    traverse(value);\n  }\n  if (this.preProcess) {\n    value = this.preProcess(value);\n  }\n  if (this.filters) {\n    value = scope._applyFilters(value, null, this.filters, false);\n  }\n  if (this.postProcess) {\n    value = this.postProcess(value);\n  }\n  this.afterGet();\n  return value;\n};\n\n/**\n * Set the corresponding value with the setter.\n *\n * @param {*} value\n */\n\nWatcher.prototype.set = function (value) {\n  var scope = this.scope || this.vm;\n  if (this.filters) {\n    value = scope._applyFilters(value, this.value, this.filters, true);\n  }\n  try {\n    this.setter.call(scope, scope, value);\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n      warn('Error when evaluating setter ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n    }\n  }\n  // two-way sync for v-for alias\n  var forContext = scope.$forContext;\n  if (forContext && forContext.alias === this.expression) {\n    if (forContext.filters) {\n      process.env.NODE_ENV !== 'production' && warn('It seems you are using two-way binding on ' + 'a v-for alias (' + this.expression + '), and the ' + 'v-for has filters. This will not work properly. ' + 'Either remove the filters or use an array of ' + 'objects and bind to object properties instead.', this.vm);\n      return;\n    }\n    forContext._withLock(function () {\n      if (scope.$key) {\n        // original is an object\n        forContext.rawValue[scope.$key] = value;\n      } else {\n        forContext.rawValue.$set(scope.$index, value);\n      }\n    });\n  }\n};\n\n/**\n * Prepare for dependency collection.\n */\n\nWatcher.prototype.beforeGet = function () {\n  Dep.target = this;\n};\n\n/**\n * Add a dependency to this directive.\n *\n * @param {Dep} dep\n */\n\nWatcher.prototype.addDep = function (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\n\nWatcher.prototype.afterGet = function () {\n  Dep.target = null;\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this.deps[i];\n    if (!this.newDepIds.has(dep.id)) {\n      dep.removeSub(this);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n *\n * @param {Boolean} shallow\n */\n\nWatcher.prototype.update = function (shallow) {\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync || !config.async) {\n    this.run();\n  } else {\n    // if queued, only overwrite shallow with non-shallow,\n    // but not the other way around.\n    this.shallow = this.queued ? shallow ? this.shallow : false : !!shallow;\n    this.queued = true;\n    // record before-push error stack in debug mode\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.debug) {\n      this.prevError = new Error('[vue] async stack trace');\n    }\n    pushWatcher(this);\n  }\n};\n\n/**\n * Batcher job interface.\n * Will be called by the batcher.\n */\n\nWatcher.prototype.run = function () {\n  if (this.active) {\n    var value = this.get();\n    if (value !== this.value ||\n    // Deep watchers and watchers on Object/Arrays should fire even\n    // when the value is the same, because the value may\n    // have mutated; but only do so if this is a\n    // non-shallow update (caused by a vm digest).\n    (isObject(value) || this.deep) && !this.shallow) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      // in debug + async mode, when a watcher callbacks\n      // throws, we also throw the saved before-push error\n      // so the full cross-tick stack trace is available.\n      var prevError = this.prevError;\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.debug && prevError) {\n        this.prevError = null;\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          nextTick(function () {\n            throw prevError;\n          }, 0);\n          throw e;\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n    this.queued = this.shallow = false;\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\n\nWatcher.prototype.evaluate = function () {\n  // avoid overwriting another watcher that is being\n  // collected.\n  var current = Dep.target;\n  this.value = this.get();\n  this.dirty = false;\n  Dep.target = current;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\n\nWatcher.prototype.depend = function () {\n  var i = this.deps.length;\n  while (i--) {\n    this.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subcriber list.\n */\n\nWatcher.prototype.teardown = function () {\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed or is performing a v-for\n    // re-render (the watcher list is then filtered by v-for).\n    if (!this.vm._isBeingDestroyed && !this.vm._vForRemoving) {\n      this.vm._watchers.$remove(this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this.deps[i].removeSub(this);\n    }\n    this.active = false;\n    this.vm = this.cb = this.value = null;\n  }\n};\n\n/**\n * Recrusively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n *\n * @param {*} val\n */\n\nvar seenObjects = new _Set();\nfunction traverse(val, seen) {\n  var i = undefined,\n      keys = undefined;\n  if (!seen) {\n    seen = seenObjects;\n    seen.clear();\n  }\n  var isA = isArray(val);\n  var isO = isObject(val);\n  if (isA || isO) {\n    if (val.__ob__) {\n      var depId = val.__ob__.dep.id;\n      if (seen.has(depId)) {\n        return;\n      } else {\n        seen.add(depId);\n      }\n    }\n    if (isA) {\n      i = val.length;\n      while (i--) traverse(val[i], seen);\n    } else if (isO) {\n      keys = Object.keys(val);\n      i = keys.length;\n      while (i--) traverse(val[keys[i]], seen);\n    }\n  }\n}\n\nvar text$1 = {\n\n  bind: function bind() {\n    this.attr = this.el.nodeType === 3 ? 'data' : 'textContent';\n  },\n\n  update: function update(value) {\n    this.el[this.attr] = _toString(value);\n  }\n};\n\nvar templateCache = new Cache(1000);\nvar idSelectorCache = new Cache(1000);\n\nvar map = {\n  efault: [0, '', ''],\n  legend: [1, '<fieldset>', '</fieldset>'],\n  tr: [2, '<table><tbody>', '</tbody></table>'],\n  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>']\n};\n\nmap.td = map.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\nmap.option = map.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\nmap.thead = map.tbody = map.colgroup = map.caption = map.tfoot = [1, '<table>', '</table>'];\n\nmap.g = map.defs = map.symbol = map.use = map.image = map.text = map.circle = map.ellipse = map.line = map.path = map.polygon = map.polyline = map.rect = [1, '<svg ' + 'xmlns=\"http://www.w3.org/2000/svg\" ' + 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' + 'xmlns:ev=\"http://www.w3.org/2001/xml-events\"' + 'version=\"1.1\">', '</svg>'];\n\n/**\n * Check if a node is a supported template node with a\n * DocumentFragment content.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction isRealTemplate(node) {\n  return isTemplate(node) && isFragment(node.content);\n}\n\nvar tagRE$1 = /<([\\w:-]+)/;\nvar entityRE = /&#?\\w+?;/;\n\n/**\n * Convert a string template to a DocumentFragment.\n * Determines correct wrapping by tag types. Wrapping\n * strategy found in jQuery & component/domify.\n *\n * @param {String} templateString\n * @param {Boolean} raw\n * @return {DocumentFragment}\n */\n\nfunction stringToFragment(templateString, raw) {\n  // try a cache hit first\n  var cacheKey = raw ? templateString : templateString.trim();\n  var hit = templateCache.get(cacheKey);\n  if (hit) {\n    return hit;\n  }\n\n  var frag = document.createDocumentFragment();\n  var tagMatch = templateString.match(tagRE$1);\n  var entityMatch = entityRE.test(templateString);\n\n  if (!tagMatch && !entityMatch) {\n    // text only, return a single text node.\n    frag.appendChild(document.createTextNode(templateString));\n  } else {\n    var tag = tagMatch && tagMatch[1];\n    var wrap = map[tag] || map.efault;\n    var depth = wrap[0];\n    var prefix = wrap[1];\n    var suffix = wrap[2];\n    var node = document.createElement('div');\n\n    node.innerHTML = prefix + templateString + suffix;\n    while (depth--) {\n      node = node.lastChild;\n    }\n\n    var child;\n    /* eslint-disable no-cond-assign */\n    while (child = node.firstChild) {\n      /* eslint-enable no-cond-assign */\n      frag.appendChild(child);\n    }\n  }\n  if (!raw) {\n    trimNode(frag);\n  }\n  templateCache.put(cacheKey, frag);\n  return frag;\n}\n\n/**\n * Convert a template node to a DocumentFragment.\n *\n * @param {Node} node\n * @return {DocumentFragment}\n */\n\nfunction nodeToFragment(node) {\n  // if its a template tag and the browser supports it,\n  // its content is already a document fragment. However, iOS Safari has\n  // bug when using directly cloned template content with touch\n  // events and can cause crashes when the nodes are removed from DOM, so we\n  // have to treat template elements as string templates. (#2805)\n  /* istanbul ignore if */\n  if (isRealTemplate(node)) {\n    return stringToFragment(node.innerHTML);\n  }\n  // script template\n  if (node.tagName === 'SCRIPT') {\n    return stringToFragment(node.textContent);\n  }\n  // normal node, clone it to avoid mutating the original\n  var clonedNode = cloneNode(node);\n  var frag = document.createDocumentFragment();\n  var child;\n  /* eslint-disable no-cond-assign */\n  while (child = clonedNode.firstChild) {\n    /* eslint-enable no-cond-assign */\n    frag.appendChild(child);\n  }\n  trimNode(frag);\n  return frag;\n}\n\n// Test for the presence of the Safari template cloning bug\n// https://bugs.webkit.org/showug.cgi?id=137755\nvar hasBrokenTemplate = (function () {\n  /* istanbul ignore else */\n  if (inBrowser) {\n    var a = document.createElement('div');\n    a.innerHTML = '<template>1</template>';\n    return !a.cloneNode(true).firstChild.innerHTML;\n  } else {\n    return false;\n  }\n})();\n\n// Test for IE10/11 textarea placeholder clone bug\nvar hasTextareaCloneBug = (function () {\n  /* istanbul ignore else */\n  if (inBrowser) {\n    var t = document.createElement('textarea');\n    t.placeholder = 't';\n    return t.cloneNode(true).value === 't';\n  } else {\n    return false;\n  }\n})();\n\n/**\n * 1. Deal with Safari cloning nested <template> bug by\n *    manually cloning all template instances.\n * 2. Deal with IE10/11 textarea placeholder bug by setting\n *    the correct value after cloning.\n *\n * @param {Element|DocumentFragment} node\n * @return {Element|DocumentFragment}\n */\n\nfunction cloneNode(node) {\n  /* istanbul ignore if */\n  if (!node.querySelectorAll) {\n    return node.cloneNode();\n  }\n  var res = node.cloneNode(true);\n  var i, original, cloned;\n  /* istanbul ignore if */\n  if (hasBrokenTemplate) {\n    var tempClone = res;\n    if (isRealTemplate(node)) {\n      node = node.content;\n      tempClone = res.content;\n    }\n    original = node.querySelectorAll('template');\n    if (original.length) {\n      cloned = tempClone.querySelectorAll('template');\n      i = cloned.length;\n      while (i--) {\n        cloned[i].parentNode.replaceChild(cloneNode(original[i]), cloned[i]);\n      }\n    }\n  }\n  /* istanbul ignore if */\n  if (hasTextareaCloneBug) {\n    if (node.tagName === 'TEXTAREA') {\n      res.value = node.value;\n    } else {\n      original = node.querySelectorAll('textarea');\n      if (original.length) {\n        cloned = res.querySelectorAll('textarea');\n        i = cloned.length;\n        while (i--) {\n          cloned[i].value = original[i].value;\n        }\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * Process the template option and normalizes it into a\n * a DocumentFragment that can be used as a partial or a\n * instance template.\n *\n * @param {*} template\n *        Possible values include:\n *        - DocumentFragment object\n *        - Node object of type Template\n *        - id selector: '#some-template-id'\n *        - template string: '<div><span>{{msg}}</span></div>'\n * @param {Boolean} shouldClone\n * @param {Boolean} raw\n *        inline HTML interpolation. Do not check for id\n *        selector and keep whitespace in the string.\n * @return {DocumentFragment|undefined}\n */\n\nfunction parseTemplate(template, shouldClone, raw) {\n  var node, frag;\n\n  // if the template is already a document fragment,\n  // do nothing\n  if (isFragment(template)) {\n    trimNode(template);\n    return shouldClone ? cloneNode(template) : template;\n  }\n\n  if (typeof template === 'string') {\n    // id selector\n    if (!raw && template.charAt(0) === '#') {\n      // id selector can be cached too\n      frag = idSelectorCache.get(template);\n      if (!frag) {\n        node = document.getElementById(template.slice(1));\n        if (node) {\n          frag = nodeToFragment(node);\n          // save selector to cache\n          idSelectorCache.put(template, frag);\n        }\n      }\n    } else {\n      // normal string template\n      frag = stringToFragment(template, raw);\n    }\n  } else if (template.nodeType) {\n    // a direct node\n    frag = nodeToFragment(template);\n  }\n\n  return frag && shouldClone ? cloneNode(frag) : frag;\n}\n\nvar template = Object.freeze({\n  cloneNode: cloneNode,\n  parseTemplate: parseTemplate\n});\n\nvar html = {\n\n  bind: function bind() {\n    // a comment node means this is a binding for\n    // {{{ inline unescaped html }}}\n    if (this.el.nodeType === 8) {\n      // hold nodes\n      this.nodes = [];\n      // replace the placeholder with proper anchor\n      this.anchor = createAnchor('v-html');\n      replace(this.el, this.anchor);\n    }\n  },\n\n  update: function update(value) {\n    value = _toString(value);\n    if (this.nodes) {\n      this.swap(value);\n    } else {\n      this.el.innerHTML = value;\n    }\n  },\n\n  swap: function swap(value) {\n    // remove old nodes\n    var i = this.nodes.length;\n    while (i--) {\n      remove(this.nodes[i]);\n    }\n    // convert new value to a fragment\n    // do not attempt to retrieve from id selector\n    var frag = parseTemplate(value, true, true);\n    // save a reference to these nodes so we can remove later\n    this.nodes = toArray(frag.childNodes);\n    before(frag, this.anchor);\n  }\n};\n\n/**\n * Abstraction for a partially-compiled fragment.\n * Can optionally compile content with a child scope.\n *\n * @param {Function} linker\n * @param {Vue} vm\n * @param {DocumentFragment} frag\n * @param {Vue} [host]\n * @param {Object} [scope]\n * @param {Fragment} [parentFrag]\n */\nfunction Fragment(linker, vm, frag, host, scope, parentFrag) {\n  this.children = [];\n  this.childFrags = [];\n  this.vm = vm;\n  this.scope = scope;\n  this.inserted = false;\n  this.parentFrag = parentFrag;\n  if (parentFrag) {\n    parentFrag.childFrags.push(this);\n  }\n  this.unlink = linker(vm, frag, host, scope, this);\n  var single = this.single = frag.childNodes.length === 1 &&\n  // do not go single mode if the only node is an anchor\n  !frag.childNodes[0].__v_anchor;\n  if (single) {\n    this.node = frag.childNodes[0];\n    this.before = singleBefore;\n    this.remove = singleRemove;\n  } else {\n    this.node = createAnchor('fragment-start');\n    this.end = createAnchor('fragment-end');\n    this.frag = frag;\n    prepend(this.node, frag);\n    frag.appendChild(this.end);\n    this.before = multiBefore;\n    this.remove = multiRemove;\n  }\n  this.node.__v_frag = this;\n}\n\n/**\n * Call attach/detach for all components contained within\n * this fragment. Also do so recursively for all child\n * fragments.\n *\n * @param {Function} hook\n */\n\nFragment.prototype.callHook = function (hook) {\n  var i, l;\n  for (i = 0, l = this.childFrags.length; i < l; i++) {\n    this.childFrags[i].callHook(hook);\n  }\n  for (i = 0, l = this.children.length; i < l; i++) {\n    hook(this.children[i]);\n  }\n};\n\n/**\n * Insert fragment before target, single node version\n *\n * @param {Node} target\n * @param {Boolean} withTransition\n */\n\nfunction singleBefore(target, withTransition) {\n  this.inserted = true;\n  var method = withTransition !== false ? beforeWithTransition : before;\n  method(this.node, target, this.vm);\n  if (inDoc(this.node)) {\n    this.callHook(attach);\n  }\n}\n\n/**\n * Remove fragment, single node version\n */\n\nfunction singleRemove() {\n  this.inserted = false;\n  var shouldCallRemove = inDoc(this.node);\n  var self = this;\n  this.beforeRemove();\n  removeWithTransition(this.node, this.vm, function () {\n    if (shouldCallRemove) {\n      self.callHook(detach);\n    }\n    self.destroy();\n  });\n}\n\n/**\n * Insert fragment before target, multi-nodes version\n *\n * @param {Node} target\n * @param {Boolean} withTransition\n */\n\nfunction multiBefore(target, withTransition) {\n  this.inserted = true;\n  var vm = this.vm;\n  var method = withTransition !== false ? beforeWithTransition : before;\n  mapNodeRange(this.node, this.end, function (node) {\n    method(node, target, vm);\n  });\n  if (inDoc(this.node)) {\n    this.callHook(attach);\n  }\n}\n\n/**\n * Remove fragment, multi-nodes version\n */\n\nfunction multiRemove() {\n  this.inserted = false;\n  var self = this;\n  var shouldCallRemove = inDoc(this.node);\n  this.beforeRemove();\n  removeNodeRange(this.node, this.end, this.vm, this.frag, function () {\n    if (shouldCallRemove) {\n      self.callHook(detach);\n    }\n    self.destroy();\n  });\n}\n\n/**\n * Prepare the fragment for removal.\n */\n\nFragment.prototype.beforeRemove = function () {\n  var i, l;\n  for (i = 0, l = this.childFrags.length; i < l; i++) {\n    // call the same method recursively on child\n    // fragments, depth-first\n    this.childFrags[i].beforeRemove(false);\n  }\n  for (i = 0, l = this.children.length; i < l; i++) {\n    // Call destroy for all contained instances,\n    // with remove:false and defer:true.\n    // Defer is necessary because we need to\n    // keep the children to call detach hooks\n    // on them.\n    this.children[i].$destroy(false, true);\n  }\n  var dirs = this.unlink.dirs;\n  for (i = 0, l = dirs.length; i < l; i++) {\n    // disable the watchers on all the directives\n    // so that the rendered content stays the same\n    // during removal.\n    dirs[i]._watcher && dirs[i]._watcher.teardown();\n  }\n};\n\n/**\n * Destroy the fragment.\n */\n\nFragment.prototype.destroy = function () {\n  if (this.parentFrag) {\n    this.parentFrag.childFrags.$remove(this);\n  }\n  this.node.__v_frag = null;\n  this.unlink();\n};\n\n/**\n * Call attach hook for a Vue instance.\n *\n * @param {Vue} child\n */\n\nfunction attach(child) {\n  if (!child._isAttached && inDoc(child.$el)) {\n    child._callHook('attached');\n  }\n}\n\n/**\n * Call detach hook for a Vue instance.\n *\n * @param {Vue} child\n */\n\nfunction detach(child) {\n  if (child._isAttached && !inDoc(child.$el)) {\n    child._callHook('detached');\n  }\n}\n\nvar linkerCache = new Cache(5000);\n\n/**\n * A factory that can be used to create instances of a\n * fragment. Caches the compiled linker if possible.\n *\n * @param {Vue} vm\n * @param {Element|String} el\n */\nfunction FragmentFactory(vm, el) {\n  this.vm = vm;\n  var template;\n  var isString = typeof el === 'string';\n  if (isString || isTemplate(el) && !el.hasAttribute('v-if')) {\n    template = parseTemplate(el, true);\n  } else {\n    template = document.createDocumentFragment();\n    template.appendChild(el);\n  }\n  this.template = template;\n  // linker can be cached, but only for components\n  var linker;\n  var cid = vm.constructor.cid;\n  if (cid > 0) {\n    var cacheId = cid + (isString ? el : getOuterHTML(el));\n    linker = linkerCache.get(cacheId);\n    if (!linker) {\n      linker = compile(template, vm.$options, true);\n      linkerCache.put(cacheId, linker);\n    }\n  } else {\n    linker = compile(template, vm.$options, true);\n  }\n  this.linker = linker;\n}\n\n/**\n * Create a fragment instance with given host and scope.\n *\n * @param {Vue} host\n * @param {Object} scope\n * @param {Fragment} parentFrag\n */\n\nFragmentFactory.prototype.create = function (host, scope, parentFrag) {\n  var frag = cloneNode(this.template);\n  return new Fragment(this.linker, this.vm, frag, host, scope, parentFrag);\n};\n\nvar ON = 700;\nvar MODEL = 800;\nvar BIND = 850;\nvar TRANSITION = 1100;\nvar EL = 1500;\nvar COMPONENT = 1500;\nvar PARTIAL = 1750;\nvar IF = 2100;\nvar FOR = 2200;\nvar SLOT = 2300;\n\nvar uid$3 = 0;\n\nvar vFor = {\n\n  priority: FOR,\n  terminal: true,\n\n  params: ['track-by', 'stagger', 'enter-stagger', 'leave-stagger'],\n\n  bind: function bind() {\n    // support \"item in/of items\" syntax\n    var inMatch = this.expression.match(/(.*) (?:in|of) (.*)/);\n    if (inMatch) {\n      var itMatch = inMatch[1].match(/\\((.*),(.*)\\)/);\n      if (itMatch) {\n        this.iterator = itMatch[1].trim();\n        this.alias = itMatch[2].trim();\n      } else {\n        this.alias = inMatch[1].trim();\n      }\n      this.expression = inMatch[2];\n    }\n\n    if (!this.alias) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid v-for expression \"' + this.descriptor.raw + '\": ' + 'alias is required.', this.vm);\n      return;\n    }\n\n    // uid as a cache identifier\n    this.id = '__v-for__' + ++uid$3;\n\n    // check if this is an option list,\n    // so that we know if we need to update the <select>'s\n    // v-model when the option list has changed.\n    // because v-model has a lower priority than v-for,\n    // the v-model is not bound here yet, so we have to\n    // retrive it in the actual updateModel() function.\n    var tag = this.el.tagName;\n    this.isOption = (tag === 'OPTION' || tag === 'OPTGROUP') && this.el.parentNode.tagName === 'SELECT';\n\n    // setup anchor nodes\n    this.start = createAnchor('v-for-start');\n    this.end = createAnchor('v-for-end');\n    replace(this.el, this.end);\n    before(this.start, this.end);\n\n    // cache\n    this.cache = Object.create(null);\n\n    // fragment factory\n    this.factory = new FragmentFactory(this.vm, this.el);\n  },\n\n  update: function update(data) {\n    this.diff(data);\n    this.updateRef();\n    this.updateModel();\n  },\n\n  /**\n   * Diff, based on new data and old data, determine the\n   * minimum amount of DOM manipulations needed to make the\n   * DOM reflect the new data Array.\n   *\n   * The algorithm diffs the new data Array by storing a\n   * hidden reference to an owner vm instance on previously\n   * seen data. This allows us to achieve O(n) which is\n   * better than a levenshtein distance based algorithm,\n   * which is O(m * n).\n   *\n   * @param {Array} data\n   */\n\n  diff: function diff(data) {\n    // check if the Array was converted from an Object\n    var item = data[0];\n    var convertedFromObject = this.fromObject = isObject(item) && hasOwn(item, '$key') && hasOwn(item, '$value');\n\n    var trackByKey = this.params.trackBy;\n    var oldFrags = this.frags;\n    var frags = this.frags = new Array(data.length);\n    var alias = this.alias;\n    var iterator = this.iterator;\n    var start = this.start;\n    var end = this.end;\n    var inDocument = inDoc(start);\n    var init = !oldFrags;\n    var i, l, frag, key, value, primitive;\n\n    // First pass, go through the new Array and fill up\n    // the new frags array. If a piece of data has a cached\n    // instance for it, we reuse it. Otherwise build a new\n    // instance.\n    for (i = 0, l = data.length; i < l; i++) {\n      item = data[i];\n      key = convertedFromObject ? item.$key : null;\n      value = convertedFromObject ? item.$value : item;\n      primitive = !isObject(value);\n      frag = !init && this.getCachedFrag(value, i, key);\n      if (frag) {\n        // reusable fragment\n        frag.reused = true;\n        // update $index\n        frag.scope.$index = i;\n        // update $key\n        if (key) {\n          frag.scope.$key = key;\n        }\n        // update iterator\n        if (iterator) {\n          frag.scope[iterator] = key !== null ? key : i;\n        }\n        // update data for track-by, object repeat &\n        // primitive values.\n        if (trackByKey || convertedFromObject || primitive) {\n          withoutConversion(function () {\n            frag.scope[alias] = value;\n          });\n        }\n      } else {\n        // new isntance\n        frag = this.create(value, alias, i, key);\n        frag.fresh = !init;\n      }\n      frags[i] = frag;\n      if (init) {\n        frag.before(end);\n      }\n    }\n\n    // we're done for the initial render.\n    if (init) {\n      return;\n    }\n\n    // Second pass, go through the old fragments and\n    // destroy those who are not reused (and remove them\n    // from cache)\n    var removalIndex = 0;\n    var totalRemoved = oldFrags.length - frags.length;\n    // when removing a large number of fragments, watcher removal\n    // turns out to be a perf bottleneck, so we batch the watcher\n    // removals into a single filter call!\n    this.vm._vForRemoving = true;\n    for (i = 0, l = oldFrags.length; i < l; i++) {\n      frag = oldFrags[i];\n      if (!frag.reused) {\n        this.deleteCachedFrag(frag);\n        this.remove(frag, removalIndex++, totalRemoved, inDocument);\n      }\n    }\n    this.vm._vForRemoving = false;\n    if (removalIndex) {\n      this.vm._watchers = this.vm._watchers.filter(function (w) {\n        return w.active;\n      });\n    }\n\n    // Final pass, move/insert new fragments into the\n    // right place.\n    var targetPrev, prevEl, currentPrev;\n    var insertionIndex = 0;\n    for (i = 0, l = frags.length; i < l; i++) {\n      frag = frags[i];\n      // this is the frag that we should be after\n      targetPrev = frags[i - 1];\n      prevEl = targetPrev ? targetPrev.staggerCb ? targetPrev.staggerAnchor : targetPrev.end || targetPrev.node : start;\n      if (frag.reused && !frag.staggerCb) {\n        currentPrev = findPrevFrag(frag, start, this.id);\n        if (currentPrev !== targetPrev && (!currentPrev ||\n        // optimization for moving a single item.\n        // thanks to suggestions by @livoras in #1807\n        findPrevFrag(currentPrev, start, this.id) !== targetPrev)) {\n          this.move(frag, prevEl);\n        }\n      } else {\n        // new instance, or still in stagger.\n        // insert with updated stagger index.\n        this.insert(frag, insertionIndex++, prevEl, inDocument);\n      }\n      frag.reused = frag.fresh = false;\n    }\n  },\n\n  /**\n   * Create a new fragment instance.\n   *\n   * @param {*} value\n   * @param {String} alias\n   * @param {Number} index\n   * @param {String} [key]\n   * @return {Fragment}\n   */\n\n  create: function create(value, alias, index, key) {\n    var host = this._host;\n    // create iteration scope\n    var parentScope = this._scope || this.vm;\n    var scope = Object.create(parentScope);\n    // ref holder for the scope\n    scope.$refs = Object.create(parentScope.$refs);\n    scope.$els = Object.create(parentScope.$els);\n    // make sure point $parent to parent scope\n    scope.$parent = parentScope;\n    // for two-way binding on alias\n    scope.$forContext = this;\n    // define scope properties\n    // important: define the scope alias without forced conversion\n    // so that frozen data structures remain non-reactive.\n    withoutConversion(function () {\n      defineReactive(scope, alias, value);\n    });\n    defineReactive(scope, '$index', index);\n    if (key) {\n      defineReactive(scope, '$key', key);\n    } else if (scope.$key) {\n      // avoid accidental fallback\n      def(scope, '$key', null);\n    }\n    if (this.iterator) {\n      defineReactive(scope, this.iterator, key !== null ? key : index);\n    }\n    var frag = this.factory.create(host, scope, this._frag);\n    frag.forId = this.id;\n    this.cacheFrag(value, frag, index, key);\n    return frag;\n  },\n\n  /**\n   * Update the v-ref on owner vm.\n   */\n\n  updateRef: function updateRef() {\n    var ref = this.descriptor.ref;\n    if (!ref) return;\n    var hash = (this._scope || this.vm).$refs;\n    var refs;\n    if (!this.fromObject) {\n      refs = this.frags.map(findVmFromFrag);\n    } else {\n      refs = {};\n      this.frags.forEach(function (frag) {\n        refs[frag.scope.$key] = findVmFromFrag(frag);\n      });\n    }\n    hash[ref] = refs;\n  },\n\n  /**\n   * For option lists, update the containing v-model on\n   * parent <select>.\n   */\n\n  updateModel: function updateModel() {\n    if (this.isOption) {\n      var parent = this.start.parentNode;\n      var model = parent && parent.__v_model;\n      if (model) {\n        model.forceUpdate();\n      }\n    }\n  },\n\n  /**\n   * Insert a fragment. Handles staggering.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Node} prevEl\n   * @param {Boolean} inDocument\n   */\n\n  insert: function insert(frag, index, prevEl, inDocument) {\n    if (frag.staggerCb) {\n      frag.staggerCb.cancel();\n      frag.staggerCb = null;\n    }\n    var staggerAmount = this.getStagger(frag, index, null, 'enter');\n    if (inDocument && staggerAmount) {\n      // create an anchor and insert it synchronously,\n      // so that we can resolve the correct order without\n      // worrying about some elements not inserted yet\n      var anchor = frag.staggerAnchor;\n      if (!anchor) {\n        anchor = frag.staggerAnchor = createAnchor('stagger-anchor');\n        anchor.__v_frag = frag;\n      }\n      after(anchor, prevEl);\n      var op = frag.staggerCb = cancellable(function () {\n        frag.staggerCb = null;\n        frag.before(anchor);\n        remove(anchor);\n      });\n      setTimeout(op, staggerAmount);\n    } else {\n      var target = prevEl.nextSibling;\n      /* istanbul ignore if */\n      if (!target) {\n        // reset end anchor position in case the position was messed up\n        // by an external drag-n-drop library.\n        after(this.end, prevEl);\n        target = this.end;\n      }\n      frag.before(target);\n    }\n  },\n\n  /**\n   * Remove a fragment. Handles staggering.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Number} total\n   * @param {Boolean} inDocument\n   */\n\n  remove: function remove(frag, index, total, inDocument) {\n    if (frag.staggerCb) {\n      frag.staggerCb.cancel();\n      frag.staggerCb = null;\n      // it's not possible for the same frag to be removed\n      // twice, so if we have a pending stagger callback,\n      // it means this frag is queued for enter but removed\n      // before its transition started. Since it is already\n      // destroyed, we can just leave it in detached state.\n      return;\n    }\n    var staggerAmount = this.getStagger(frag, index, total, 'leave');\n    if (inDocument && staggerAmount) {\n      var op = frag.staggerCb = cancellable(function () {\n        frag.staggerCb = null;\n        frag.remove();\n      });\n      setTimeout(op, staggerAmount);\n    } else {\n      frag.remove();\n    }\n  },\n\n  /**\n   * Move a fragment to a new position.\n   * Force no transition.\n   *\n   * @param {Fragment} frag\n   * @param {Node} prevEl\n   */\n\n  move: function move(frag, prevEl) {\n    // fix a common issue with Sortable:\n    // if prevEl doesn't have nextSibling, this means it's\n    // been dragged after the end anchor. Just re-position\n    // the end anchor to the end of the container.\n    /* istanbul ignore if */\n    if (!prevEl.nextSibling) {\n      this.end.parentNode.appendChild(this.end);\n    }\n    frag.before(prevEl.nextSibling, false);\n  },\n\n  /**\n   * Cache a fragment using track-by or the object key.\n   *\n   * @param {*} value\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {String} [key]\n   */\n\n  cacheFrag: function cacheFrag(value, frag, index, key) {\n    var trackByKey = this.params.trackBy;\n    var cache = this.cache;\n    var primitive = !isObject(value);\n    var id;\n    if (key || trackByKey || primitive) {\n      id = getTrackByKey(index, key, value, trackByKey);\n      if (!cache[id]) {\n        cache[id] = frag;\n      } else if (trackByKey !== '$index') {\n        process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n      }\n    } else {\n      id = this.id;\n      if (hasOwn(value, id)) {\n        if (value[id] === null) {\n          value[id] = frag;\n        } else {\n          process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n        }\n      } else if (Object.isExtensible(value)) {\n        def(value, id, frag);\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('Frozen v-for objects cannot be automatically tracked, make sure to ' + 'provide a track-by key.');\n      }\n    }\n    frag.raw = value;\n  },\n\n  /**\n   * Get a cached fragment from the value/index/key\n   *\n   * @param {*} value\n   * @param {Number} index\n   * @param {String} key\n   * @return {Fragment}\n   */\n\n  getCachedFrag: function getCachedFrag(value, index, key) {\n    var trackByKey = this.params.trackBy;\n    var primitive = !isObject(value);\n    var frag;\n    if (key || trackByKey || primitive) {\n      var id = getTrackByKey(index, key, value, trackByKey);\n      frag = this.cache[id];\n    } else {\n      frag = value[this.id];\n    }\n    if (frag && (frag.reused || frag.fresh)) {\n      process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n    }\n    return frag;\n  },\n\n  /**\n   * Delete a fragment from cache.\n   *\n   * @param {Fragment} frag\n   */\n\n  deleteCachedFrag: function deleteCachedFrag(frag) {\n    var value = frag.raw;\n    var trackByKey = this.params.trackBy;\n    var scope = frag.scope;\n    var index = scope.$index;\n    // fix #948: avoid accidentally fall through to\n    // a parent repeater which happens to have $key.\n    var key = hasOwn(scope, '$key') && scope.$key;\n    var primitive = !isObject(value);\n    if (trackByKey || key || primitive) {\n      var id = getTrackByKey(index, key, value, trackByKey);\n      this.cache[id] = null;\n    } else {\n      value[this.id] = null;\n      frag.raw = null;\n    }\n  },\n\n  /**\n   * Get the stagger amount for an insertion/removal.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Number} total\n   * @param {String} type\n   */\n\n  getStagger: function getStagger(frag, index, total, type) {\n    type = type + 'Stagger';\n    var trans = frag.node.__v_trans;\n    var hooks = trans && trans.hooks;\n    var hook = hooks && (hooks[type] || hooks.stagger);\n    return hook ? hook.call(frag, index, total) : index * parseInt(this.params[type] || this.params.stagger, 10);\n  },\n\n  /**\n   * Pre-process the value before piping it through the\n   * filters. This is passed to and called by the watcher.\n   */\n\n  _preProcess: function _preProcess(value) {\n    // regardless of type, store the un-filtered raw value.\n    this.rawValue = value;\n    return value;\n  },\n\n  /**\n   * Post-process the value after it has been piped through\n   * the filters. This is passed to and called by the watcher.\n   *\n   * It is necessary for this to be called during the\n   * wathcer's dependency collection phase because we want\n   * the v-for to update when the source Object is mutated.\n   */\n\n  _postProcess: function _postProcess(value) {\n    if (isArray(value)) {\n      return value;\n    } else if (isPlainObject(value)) {\n      // convert plain object to array.\n      var keys = Object.keys(value);\n      var i = keys.length;\n      var res = new Array(i);\n      var key;\n      while (i--) {\n        key = keys[i];\n        res[i] = {\n          $key: key,\n          $value: value[key]\n        };\n      }\n      return res;\n    } else {\n      if (typeof value === 'number' && !isNaN(value)) {\n        value = range(value);\n      }\n      return value || [];\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.descriptor.ref) {\n      (this._scope || this.vm).$refs[this.descriptor.ref] = null;\n    }\n    if (this.frags) {\n      var i = this.frags.length;\n      var frag;\n      while (i--) {\n        frag = this.frags[i];\n        this.deleteCachedFrag(frag);\n        frag.destroy();\n      }\n    }\n  }\n};\n\n/**\n * Helper to find the previous element that is a fragment\n * anchor. This is necessary because a destroyed frag's\n * element could still be lingering in the DOM before its\n * leaving transition finishes, but its inserted flag\n * should have been set to false so we can skip them.\n *\n * If this is a block repeat, we want to make sure we only\n * return frag that is bound to this v-for. (see #929)\n *\n * @param {Fragment} frag\n * @param {Comment|Text} anchor\n * @param {String} id\n * @return {Fragment}\n */\n\nfunction findPrevFrag(frag, anchor, id) {\n  var el = frag.node.previousSibling;\n  /* istanbul ignore if */\n  if (!el) return;\n  frag = el.__v_frag;\n  while ((!frag || frag.forId !== id || !frag.inserted) && el !== anchor) {\n    el = el.previousSibling;\n    /* istanbul ignore if */\n    if (!el) return;\n    frag = el.__v_frag;\n  }\n  return frag;\n}\n\n/**\n * Find a vm from a fragment.\n *\n * @param {Fragment} frag\n * @return {Vue|undefined}\n */\n\nfunction findVmFromFrag(frag) {\n  var node = frag.node;\n  // handle multi-node frag\n  if (frag.end) {\n    while (!node.__vue__ && node !== frag.end && node.nextSibling) {\n      node = node.nextSibling;\n    }\n  }\n  return node.__vue__;\n}\n\n/**\n * Create a range array from given number.\n *\n * @param {Number} n\n * @return {Array}\n */\n\nfunction range(n) {\n  var i = -1;\n  var ret = new Array(Math.floor(n));\n  while (++i < n) {\n    ret[i] = i;\n  }\n  return ret;\n}\n\n/**\n * Get the track by key for an item.\n *\n * @param {Number} index\n * @param {String} key\n * @param {*} value\n * @param {String} [trackByKey]\n */\n\nfunction getTrackByKey(index, key, value, trackByKey) {\n  return trackByKey ? trackByKey === '$index' ? index : trackByKey.charAt(0).match(/\\w/) ? getPath(value, trackByKey) : value[trackByKey] : key || value;\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  vFor.warnDuplicate = function (value) {\n    warn('Duplicate value found in v-for=\"' + this.descriptor.raw + '\": ' + JSON.stringify(value) + '. Use track-by=\"$index\" if ' + 'you are expecting duplicate values.', this.vm);\n  };\n}\n\nvar vIf = {\n\n  priority: IF,\n  terminal: true,\n\n  bind: function bind() {\n    var el = this.el;\n    if (!el.__vue__) {\n      // check else block\n      var next = el.nextElementSibling;\n      if (next && getAttr(next, 'v-else') !== null) {\n        remove(next);\n        this.elseEl = next;\n      }\n      // check main block\n      this.anchor = createAnchor('v-if');\n      replace(el, this.anchor);\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('v-if=\"' + this.expression + '\" cannot be ' + 'used on an instance root element.', this.vm);\n      this.invalid = true;\n    }\n  },\n\n  update: function update(value) {\n    if (this.invalid) return;\n    if (value) {\n      if (!this.frag) {\n        this.insert();\n      }\n    } else {\n      this.remove();\n    }\n  },\n\n  insert: function insert() {\n    if (this.elseFrag) {\n      this.elseFrag.remove();\n      this.elseFrag = null;\n    }\n    // lazy init factory\n    if (!this.factory) {\n      this.factory = new FragmentFactory(this.vm, this.el);\n    }\n    this.frag = this.factory.create(this._host, this._scope, this._frag);\n    this.frag.before(this.anchor);\n  },\n\n  remove: function remove() {\n    if (this.frag) {\n      this.frag.remove();\n      this.frag = null;\n    }\n    if (this.elseEl && !this.elseFrag) {\n      if (!this.elseFactory) {\n        this.elseFactory = new FragmentFactory(this.elseEl._context || this.vm, this.elseEl);\n      }\n      this.elseFrag = this.elseFactory.create(this._host, this._scope, this._frag);\n      this.elseFrag.before(this.anchor);\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.frag) {\n      this.frag.destroy();\n    }\n    if (this.elseFrag) {\n      this.elseFrag.destroy();\n    }\n  }\n};\n\nvar show = {\n\n  bind: function bind() {\n    // check else block\n    var next = this.el.nextElementSibling;\n    if (next && getAttr(next, 'v-else') !== null) {\n      this.elseEl = next;\n    }\n  },\n\n  update: function update(value) {\n    this.apply(this.el, value);\n    if (this.elseEl) {\n      this.apply(this.elseEl, !value);\n    }\n  },\n\n  apply: function apply(el, value) {\n    if (inDoc(el)) {\n      applyTransition(el, value ? 1 : -1, toggle, this.vm);\n    } else {\n      toggle();\n    }\n    function toggle() {\n      el.style.display = value ? '' : 'none';\n    }\n  }\n};\n\nvar text$2 = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n    var isRange = el.type === 'range';\n    var lazy = this.params.lazy;\n    var number = this.params.number;\n    var debounce = this.params.debounce;\n\n    // handle composition events.\n    //   http://blog.evanyou.me/2014/01/03/composition-event/\n    // skip this for Android because it handles composition\n    // events quite differently. Android doesn't trigger\n    // composition events for language input methods e.g.\n    // Chinese, but instead triggers them for spelling\n    // suggestions... (see Discussion/#162)\n    var composing = false;\n    if (!isAndroid && !isRange) {\n      this.on('compositionstart', function () {\n        composing = true;\n      });\n      this.on('compositionend', function () {\n        composing = false;\n        // in IE11 the \"compositionend\" event fires AFTER\n        // the \"input\" event, so the input handler is blocked\n        // at the end... have to call it here.\n        //\n        // #1327: in lazy mode this is unecessary.\n        if (!lazy) {\n          self.listener();\n        }\n      });\n    }\n\n    // prevent messing with the input when user is typing,\n    // and force update on blur.\n    this.focused = false;\n    if (!isRange && !lazy) {\n      this.on('focus', function () {\n        self.focused = true;\n      });\n      this.on('blur', function () {\n        self.focused = false;\n        // do not sync value after fragment removal (#2017)\n        if (!self._frag || self._frag.inserted) {\n          self.rawListener();\n        }\n      });\n    }\n\n    // Now attach the main listener\n    this.listener = this.rawListener = function () {\n      if (composing || !self._bound) {\n        return;\n      }\n      var val = number || isRange ? toNumber(el.value) : el.value;\n      self.set(val);\n      // force update on next tick to avoid lock & same value\n      // also only update when user is not typing\n      nextTick(function () {\n        if (self._bound && !self.focused) {\n          self.update(self._watcher.value);\n        }\n      });\n    };\n\n    // apply debounce\n    if (debounce) {\n      this.listener = _debounce(this.listener, debounce);\n    }\n\n    // Support jQuery events, since jQuery.trigger() doesn't\n    // trigger native events in some cases and some plugins\n    // rely on $.trigger()\n    //\n    // We want to make sure if a listener is attached using\n    // jQuery, it is also removed with jQuery, that's why\n    // we do the check for each directive instance and\n    // store that check result on itself. This also allows\n    // easier test coverage control by unsetting the global\n    // jQuery variable in tests.\n    this.hasjQuery = typeof jQuery === 'function';\n    if (this.hasjQuery) {\n      var method = jQuery.fn.on ? 'on' : 'bind';\n      jQuery(el)[method]('change', this.rawListener);\n      if (!lazy) {\n        jQuery(el)[method]('input', this.listener);\n      }\n    } else {\n      this.on('change', this.rawListener);\n      if (!lazy) {\n        this.on('input', this.listener);\n      }\n    }\n\n    // IE9 doesn't fire input event on backspace/del/cut\n    if (!lazy && isIE9) {\n      this.on('cut', function () {\n        nextTick(self.listener);\n      });\n      this.on('keyup', function (e) {\n        if (e.keyCode === 46 || e.keyCode === 8) {\n          self.listener();\n        }\n      });\n    }\n\n    // set initial value if present\n    if (el.hasAttribute('value') || el.tagName === 'TEXTAREA' && el.value.trim()) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    this.el.value = _toString(value);\n  },\n\n  unbind: function unbind() {\n    var el = this.el;\n    if (this.hasjQuery) {\n      var method = jQuery.fn.off ? 'off' : 'unbind';\n      jQuery(el)[method]('change', this.listener);\n      jQuery(el)[method]('input', this.listener);\n    }\n  }\n};\n\nvar radio = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    this.getValue = function () {\n      // value overwrite via v-bind:value\n      if (el.hasOwnProperty('_value')) {\n        return el._value;\n      }\n      var val = el.value;\n      if (self.params.number) {\n        val = toNumber(val);\n      }\n      return val;\n    };\n\n    this.listener = function () {\n      self.set(self.getValue());\n    };\n    this.on('change', this.listener);\n\n    if (el.hasAttribute('checked')) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    this.el.checked = looseEqual(value, this.getValue());\n  }\n};\n\nvar select = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    // method to force update DOM using latest value.\n    this.forceUpdate = function () {\n      if (self._watcher) {\n        self.update(self._watcher.get());\n      }\n    };\n\n    // check if this is a multiple select\n    var multiple = this.multiple = el.hasAttribute('multiple');\n\n    // attach listener\n    this.listener = function () {\n      var value = getValue(el, multiple);\n      value = self.params.number ? isArray(value) ? value.map(toNumber) : toNumber(value) : value;\n      self.set(value);\n    };\n    this.on('change', this.listener);\n\n    // if has initial value, set afterBind\n    var initValue = getValue(el, multiple, true);\n    if (multiple && initValue.length || !multiple && initValue !== null) {\n      this.afterBind = this.listener;\n    }\n\n    // All major browsers except Firefox resets\n    // selectedIndex with value -1 to 0 when the element\n    // is appended to a new parent, therefore we have to\n    // force a DOM update whenever that happens...\n    this.vm.$on('hook:attached', this.forceUpdate);\n  },\n\n  update: function update(value) {\n    var el = this.el;\n    el.selectedIndex = -1;\n    var multi = this.multiple && isArray(value);\n    var options = el.options;\n    var i = options.length;\n    var op, val;\n    while (i--) {\n      op = options[i];\n      val = op.hasOwnProperty('_value') ? op._value : op.value;\n      /* eslint-disable eqeqeq */\n      op.selected = multi ? indexOf$1(value, val) > -1 : looseEqual(value, val);\n      /* eslint-enable eqeqeq */\n    }\n  },\n\n  unbind: function unbind() {\n    /* istanbul ignore next */\n    this.vm.$off('hook:attached', this.forceUpdate);\n  }\n};\n\n/**\n * Get select value\n *\n * @param {SelectElement} el\n * @param {Boolean} multi\n * @param {Boolean} init\n * @return {Array|*}\n */\n\nfunction getValue(el, multi, init) {\n  var res = multi ? [] : null;\n  var op, val, selected;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    op = el.options[i];\n    selected = init ? op.hasAttribute('selected') : op.selected;\n    if (selected) {\n      val = op.hasOwnProperty('_value') ? op._value : op.value;\n      if (multi) {\n        res.push(val);\n      } else {\n        return val;\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * Native Array.indexOf uses strict equal, but in this\n * case we need to match string/numbers with custom equal.\n *\n * @param {Array} arr\n * @param {*} val\n */\n\nfunction indexOf$1(arr, val) {\n  var i = arr.length;\n  while (i--) {\n    if (looseEqual(arr[i], val)) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nvar checkbox = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    this.getValue = function () {\n      return el.hasOwnProperty('_value') ? el._value : self.params.number ? toNumber(el.value) : el.value;\n    };\n\n    function getBooleanValue() {\n      var val = el.checked;\n      if (val && el.hasOwnProperty('_trueValue')) {\n        return el._trueValue;\n      }\n      if (!val && el.hasOwnProperty('_falseValue')) {\n        return el._falseValue;\n      }\n      return val;\n    }\n\n    this.listener = function () {\n      var model = self._watcher.value;\n      if (isArray(model)) {\n        var val = self.getValue();\n        if (el.checked) {\n          if (indexOf(model, val) < 0) {\n            model.push(val);\n          }\n        } else {\n          model.$remove(val);\n        }\n      } else {\n        self.set(getBooleanValue());\n      }\n    };\n\n    this.on('change', this.listener);\n    if (el.hasAttribute('checked')) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    var el = this.el;\n    if (isArray(value)) {\n      el.checked = indexOf(value, this.getValue()) > -1;\n    } else {\n      if (el.hasOwnProperty('_trueValue')) {\n        el.checked = looseEqual(value, el._trueValue);\n      } else {\n        el.checked = !!value;\n      }\n    }\n  }\n};\n\nvar handlers = {\n  text: text$2,\n  radio: radio,\n  select: select,\n  checkbox: checkbox\n};\n\nvar model = {\n\n  priority: MODEL,\n  twoWay: true,\n  handlers: handlers,\n  params: ['lazy', 'number', 'debounce'],\n\n  /**\n   * Possible elements:\n   *   <select>\n   *   <textarea>\n   *   <input type=\"*\">\n   *     - text\n   *     - checkbox\n   *     - radio\n   *     - number\n   */\n\n  bind: function bind() {\n    // friendly warning...\n    this.checkFilters();\n    if (this.hasRead && !this.hasWrite) {\n      process.env.NODE_ENV !== 'production' && warn('It seems you are using a read-only filter with ' + 'v-model=\"' + this.descriptor.raw + '\". ' + 'You might want to use a two-way filter to ensure correct behavior.', this.vm);\n    }\n    var el = this.el;\n    var tag = el.tagName;\n    var handler;\n    if (tag === 'INPUT') {\n      handler = handlers[el.type] || handlers.text;\n    } else if (tag === 'SELECT') {\n      handler = handlers.select;\n    } else if (tag === 'TEXTAREA') {\n      handler = handlers.text;\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('v-model does not support element type: ' + tag, this.vm);\n      return;\n    }\n    el.__v_model = this;\n    handler.bind.call(this);\n    this.update = handler.update;\n    this._unbind = handler.unbind;\n  },\n\n  /**\n   * Check read/write filter stats.\n   */\n\n  checkFilters: function checkFilters() {\n    var filters = this.filters;\n    if (!filters) return;\n    var i = filters.length;\n    while (i--) {\n      var filter = resolveAsset(this.vm.$options, 'filters', filters[i].name);\n      if (typeof filter === 'function' || filter.read) {\n        this.hasRead = true;\n      }\n      if (filter.write) {\n        this.hasWrite = true;\n      }\n    }\n  },\n\n  unbind: function unbind() {\n    this.el.__v_model = null;\n    this._unbind && this._unbind();\n  }\n};\n\n// keyCode aliases\nvar keyCodes = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  'delete': [8, 46],\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40\n};\n\nfunction keyFilter(handler, keys) {\n  var codes = keys.map(function (key) {\n    var charCode = key.charCodeAt(0);\n    if (charCode > 47 && charCode < 58) {\n      return parseInt(key, 10);\n    }\n    if (key.length === 1) {\n      charCode = key.toUpperCase().charCodeAt(0);\n      if (charCode > 64 && charCode < 91) {\n        return charCode;\n      }\n    }\n    return keyCodes[key];\n  });\n  codes = [].concat.apply([], codes);\n  return function keyHandler(e) {\n    if (codes.indexOf(e.keyCode) > -1) {\n      return handler.call(this, e);\n    }\n  };\n}\n\nfunction stopFilter(handler) {\n  return function stopHandler(e) {\n    e.stopPropagation();\n    return handler.call(this, e);\n  };\n}\n\nfunction preventFilter(handler) {\n  return function preventHandler(e) {\n    e.preventDefault();\n    return handler.call(this, e);\n  };\n}\n\nfunction selfFilter(handler) {\n  return function selfHandler(e) {\n    if (e.target === e.currentTarget) {\n      return handler.call(this, e);\n    }\n  };\n}\n\nvar on$1 = {\n\n  priority: ON,\n  acceptStatement: true,\n  keyCodes: keyCodes,\n\n  bind: function bind() {\n    // deal with iframes\n    if (this.el.tagName === 'IFRAME' && this.arg !== 'load') {\n      var self = this;\n      this.iframeBind = function () {\n        on(self.el.contentWindow, self.arg, self.handler, self.modifiers.capture);\n      };\n      this.on('load', this.iframeBind);\n    }\n  },\n\n  update: function update(handler) {\n    // stub a noop for v-on with no value,\n    // e.g. @mousedown.prevent\n    if (!this.descriptor.raw) {\n      handler = function () {};\n    }\n\n    if (typeof handler !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn('v-on:' + this.arg + '=\"' + this.expression + '\" expects a function value, ' + 'got ' + handler, this.vm);\n      return;\n    }\n\n    // apply modifiers\n    if (this.modifiers.stop) {\n      handler = stopFilter(handler);\n    }\n    if (this.modifiers.prevent) {\n      handler = preventFilter(handler);\n    }\n    if (this.modifiers.self) {\n      handler = selfFilter(handler);\n    }\n    // key filter\n    var keys = Object.keys(this.modifiers).filter(function (key) {\n      return key !== 'stop' && key !== 'prevent' && key !== 'self' && key !== 'capture';\n    });\n    if (keys.length) {\n      handler = keyFilter(handler, keys);\n    }\n\n    this.reset();\n    this.handler = handler;\n\n    if (this.iframeBind) {\n      this.iframeBind();\n    } else {\n      on(this.el, this.arg, this.handler, this.modifiers.capture);\n    }\n  },\n\n  reset: function reset() {\n    var el = this.iframeBind ? this.el.contentWindow : this.el;\n    if (this.handler) {\n      off(el, this.arg, this.handler);\n    }\n  },\n\n  unbind: function unbind() {\n    this.reset();\n  }\n};\n\nvar prefixes = ['-webkit-', '-moz-', '-ms-'];\nvar camelPrefixes = ['Webkit', 'Moz', 'ms'];\nvar importantRE = /!important;?$/;\nvar propCache = Object.create(null);\n\nvar testEl = null;\n\nvar style = {\n\n  deep: true,\n\n  update: function update(value) {\n    if (typeof value === 'string') {\n      this.el.style.cssText = value;\n    } else if (isArray(value)) {\n      this.handleObject(value.reduce(extend, {}));\n    } else {\n      this.handleObject(value || {});\n    }\n  },\n\n  handleObject: function handleObject(value) {\n    // cache object styles so that only changed props\n    // are actually updated.\n    var cache = this.cache || (this.cache = {});\n    var name, val;\n    for (name in cache) {\n      if (!(name in value)) {\n        this.handleSingle(name, null);\n        delete cache[name];\n      }\n    }\n    for (name in value) {\n      val = value[name];\n      if (val !== cache[name]) {\n        cache[name] = val;\n        this.handleSingle(name, val);\n      }\n    }\n  },\n\n  handleSingle: function handleSingle(prop, value) {\n    prop = normalize(prop);\n    if (!prop) return; // unsupported prop\n    // cast possible numbers/booleans into strings\n    if (value != null) value += '';\n    if (value) {\n      var isImportant = importantRE.test(value) ? 'important' : '';\n      if (isImportant) {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production') {\n          warn('It\\'s probably a bad idea to use !important with inline rules. ' + 'This feature will be deprecated in a future version of Vue.');\n        }\n        value = value.replace(importantRE, '').trim();\n        this.el.style.setProperty(prop.kebab, value, isImportant);\n      } else {\n        this.el.style[prop.camel] = value;\n      }\n    } else {\n      this.el.style[prop.camel] = '';\n    }\n  }\n\n};\n\n/**\n * Normalize a CSS property name.\n * - cache result\n * - auto prefix\n * - camelCase -> dash-case\n *\n * @param {String} prop\n * @return {String}\n */\n\nfunction normalize(prop) {\n  if (propCache[prop]) {\n    return propCache[prop];\n  }\n  var res = prefix(prop);\n  propCache[prop] = propCache[res] = res;\n  return res;\n}\n\n/**\n * Auto detect the appropriate prefix for a CSS property.\n * https://gist.github.com/paulirish/523692\n *\n * @param {String} prop\n * @return {String}\n */\n\nfunction prefix(prop) {\n  prop = hyphenate(prop);\n  var camel = camelize(prop);\n  var upper = camel.charAt(0).toUpperCase() + camel.slice(1);\n  if (!testEl) {\n    testEl = document.createElement('div');\n  }\n  var i = prefixes.length;\n  var prefixed;\n  if (camel !== 'filter' && camel in testEl.style) {\n    return {\n      kebab: prop,\n      camel: camel\n    };\n  }\n  while (i--) {\n    prefixed = camelPrefixes[i] + upper;\n    if (prefixed in testEl.style) {\n      return {\n        kebab: prefixes[i] + prop,\n        camel: prefixed\n      };\n    }\n  }\n}\n\n// xlink\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\nvar xlinkRE = /^xlink:/;\n\n// check for attributes that prohibit interpolations\nvar disallowedInterpAttrRE = /^v-|^:|^@|^(?:is|transition|transition-mode|debounce|track-by|stagger|enter-stagger|leave-stagger)$/;\n// these attributes should also set their corresponding properties\n// because they only affect the initial state of the element\nvar attrWithPropsRE = /^(?:value|checked|selected|muted)$/;\n// these attributes expect enumrated values of \"true\" or \"false\"\n// but are not boolean attributes\nvar enumeratedAttrRE = /^(?:draggable|contenteditable|spellcheck)$/;\n\n// these attributes should set a hidden property for\n// binding v-model to object values\nvar modelProps = {\n  value: '_value',\n  'true-value': '_trueValue',\n  'false-value': '_falseValue'\n};\n\nvar bind$1 = {\n\n  priority: BIND,\n\n  bind: function bind() {\n    var attr = this.arg;\n    var tag = this.el.tagName;\n    // should be deep watch on object mode\n    if (!attr) {\n      this.deep = true;\n    }\n    // handle interpolation bindings\n    var descriptor = this.descriptor;\n    var tokens = descriptor.interp;\n    if (tokens) {\n      // handle interpolations with one-time tokens\n      if (descriptor.hasOneTime) {\n        this.expression = tokensToExp(tokens, this._scope || this.vm);\n      }\n\n      // only allow binding on native attributes\n      if (disallowedInterpAttrRE.test(attr) || attr === 'name' && (tag === 'PARTIAL' || tag === 'SLOT')) {\n        process.env.NODE_ENV !== 'production' && warn(attr + '=\"' + descriptor.raw + '\": ' + 'attribute interpolation is not allowed in Vue.js ' + 'directives and special attributes.', this.vm);\n        this.el.removeAttribute(attr);\n        this.invalid = true;\n      }\n\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production') {\n        var raw = attr + '=\"' + descriptor.raw + '\": ';\n        // warn src\n        if (attr === 'src') {\n          warn(raw + 'interpolation in \"src\" attribute will cause ' + 'a 404 request. Use v-bind:src instead.', this.vm);\n        }\n\n        // warn style\n        if (attr === 'style') {\n          warn(raw + 'interpolation in \"style\" attribute will cause ' + 'the attribute to be discarded in Internet Explorer. ' + 'Use v-bind:style instead.', this.vm);\n        }\n      }\n    }\n  },\n\n  update: function update(value) {\n    if (this.invalid) {\n      return;\n    }\n    var attr = this.arg;\n    if (this.arg) {\n      this.handleSingle(attr, value);\n    } else {\n      this.handleObject(value || {});\n    }\n  },\n\n  // share object handler with v-bind:class\n  handleObject: style.handleObject,\n\n  handleSingle: function handleSingle(attr, value) {\n    var el = this.el;\n    var interp = this.descriptor.interp;\n    if (this.modifiers.camel) {\n      attr = camelize(attr);\n    }\n    if (!interp && attrWithPropsRE.test(attr) && attr in el) {\n      var attrValue = attr === 'value' ? value == null // IE9 will set input.value to \"null\" for null...\n      ? '' : value : value;\n\n      if (el[attr] !== attrValue) {\n        el[attr] = attrValue;\n      }\n    }\n    // set model props\n    var modelProp = modelProps[attr];\n    if (!interp && modelProp) {\n      el[modelProp] = value;\n      // update v-model if present\n      var model = el.__v_model;\n      if (model) {\n        model.listener();\n      }\n    }\n    // do not set value attribute for textarea\n    if (attr === 'value' && el.tagName === 'TEXTAREA') {\n      el.removeAttribute(attr);\n      return;\n    }\n    // update attribute\n    if (enumeratedAttrRE.test(attr)) {\n      el.setAttribute(attr, value ? 'true' : 'false');\n    } else if (value != null && value !== false) {\n      if (attr === 'class') {\n        // handle edge case #1960:\n        // class interpolation should not overwrite Vue transition class\n        if (el.__v_trans) {\n          value += ' ' + el.__v_trans.id + '-transition';\n        }\n        setClass(el, value);\n      } else if (xlinkRE.test(attr)) {\n        el.setAttributeNS(xlinkNS, attr, value === true ? '' : value);\n      } else {\n        el.setAttribute(attr, value === true ? '' : value);\n      }\n    } else {\n      el.removeAttribute(attr);\n    }\n  }\n};\n\nvar el = {\n\n  priority: EL,\n\n  bind: function bind() {\n    /* istanbul ignore if */\n    if (!this.arg) {\n      return;\n    }\n    var id = this.id = camelize(this.arg);\n    var refs = (this._scope || this.vm).$els;\n    if (hasOwn(refs, id)) {\n      refs[id] = this.el;\n    } else {\n      defineReactive(refs, id, this.el);\n    }\n  },\n\n  unbind: function unbind() {\n    var refs = (this._scope || this.vm).$els;\n    if (refs[this.id] === this.el) {\n      refs[this.id] = null;\n    }\n  }\n};\n\nvar ref = {\n  bind: function bind() {\n    process.env.NODE_ENV !== 'production' && warn('v-ref:' + this.arg + ' must be used on a child ' + 'component. Found on <' + this.el.tagName.toLowerCase() + '>.', this.vm);\n  }\n};\n\nvar cloak = {\n  bind: function bind() {\n    var el = this.el;\n    this.vm.$once('pre-hook:compiled', function () {\n      el.removeAttribute('v-cloak');\n    });\n  }\n};\n\n// must export plain object\nvar directives = {\n  text: text$1,\n  html: html,\n  'for': vFor,\n  'if': vIf,\n  show: show,\n  model: model,\n  on: on$1,\n  bind: bind$1,\n  el: el,\n  ref: ref,\n  cloak: cloak\n};\n\nvar vClass = {\n\n  deep: true,\n\n  update: function update(value) {\n    if (!value) {\n      this.cleanup();\n    } else if (typeof value === 'string') {\n      this.setClass(value.trim().split(/\\s+/));\n    } else {\n      this.setClass(normalize$1(value));\n    }\n  },\n\n  setClass: function setClass(value) {\n    this.cleanup(value);\n    for (var i = 0, l = value.length; i < l; i++) {\n      var val = value[i];\n      if (val) {\n        apply(this.el, val, addClass);\n      }\n    }\n    this.prevKeys = value;\n  },\n\n  cleanup: function cleanup(value) {\n    var prevKeys = this.prevKeys;\n    if (!prevKeys) return;\n    var i = prevKeys.length;\n    while (i--) {\n      var key = prevKeys[i];\n      if (!value || value.indexOf(key) < 0) {\n        apply(this.el, key, removeClass);\n      }\n    }\n  }\n};\n\n/**\n * Normalize objects and arrays (potentially containing objects)\n * into array of strings.\n *\n * @param {Object|Array<String|Object>} value\n * @return {Array<String>}\n */\n\nfunction normalize$1(value) {\n  var res = [];\n  if (isArray(value)) {\n    for (var i = 0, l = value.length; i < l; i++) {\n      var _key = value[i];\n      if (_key) {\n        if (typeof _key === 'string') {\n          res.push(_key);\n        } else {\n          for (var k in _key) {\n            if (_key[k]) res.push(k);\n          }\n        }\n      }\n    }\n  } else if (isObject(value)) {\n    for (var key in value) {\n      if (value[key]) res.push(key);\n    }\n  }\n  return res;\n}\n\n/**\n * Add or remove a class/classes on an element\n *\n * @param {Element} el\n * @param {String} key The class name. This may or may not\n *                     contain a space character, in such a\n *                     case we'll deal with multiple class\n *                     names at once.\n * @param {Function} fn\n */\n\nfunction apply(el, key, fn) {\n  key = key.trim();\n  if (key.indexOf(' ') === -1) {\n    fn(el, key);\n    return;\n  }\n  // The key contains one or more space characters.\n  // Since a class name doesn't accept such characters, we\n  // treat it as multiple classes.\n  var keys = key.split(/\\s+/);\n  for (var i = 0, l = keys.length; i < l; i++) {\n    fn(el, keys[i]);\n  }\n}\n\nvar component = {\n\n  priority: COMPONENT,\n\n  params: ['keep-alive', 'transition-mode', 'inline-template'],\n\n  /**\n   * Setup. Two possible usages:\n   *\n   * - static:\n   *   <comp> or <div v-component=\"comp\">\n   *\n   * - dynamic:\n   *   <component :is=\"view\">\n   */\n\n  bind: function bind() {\n    if (!this.el.__vue__) {\n      // keep-alive cache\n      this.keepAlive = this.params.keepAlive;\n      if (this.keepAlive) {\n        this.cache = {};\n      }\n      // check inline-template\n      if (this.params.inlineTemplate) {\n        // extract inline template as a DocumentFragment\n        this.inlineTemplate = extractContent(this.el, true);\n      }\n      // component resolution related state\n      this.pendingComponentCb = this.Component = null;\n      // transition related state\n      this.pendingRemovals = 0;\n      this.pendingRemovalCb = null;\n      // create a ref anchor\n      this.anchor = createAnchor('v-component');\n      replace(this.el, this.anchor);\n      // remove is attribute.\n      // this is removed during compilation, but because compilation is\n      // cached, when the component is used elsewhere this attribute\n      // will remain at link time.\n      this.el.removeAttribute('is');\n      this.el.removeAttribute(':is');\n      // remove ref, same as above\n      if (this.descriptor.ref) {\n        this.el.removeAttribute('v-ref:' + hyphenate(this.descriptor.ref));\n      }\n      // if static, build right now.\n      if (this.literal) {\n        this.setComponent(this.expression);\n      }\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('cannot mount component \"' + this.expression + '\" ' + 'on already mounted element: ' + this.el);\n    }\n  },\n\n  /**\n   * Public update, called by the watcher in the dynamic\n   * literal scenario, e.g. <component :is=\"view\">\n   */\n\n  update: function update(value) {\n    if (!this.literal) {\n      this.setComponent(value);\n    }\n  },\n\n  /**\n   * Switch dynamic components. May resolve the component\n   * asynchronously, and perform transition based on\n   * specified transition mode. Accepts a few additional\n   * arguments specifically for vue-router.\n   *\n   * The callback is called when the full transition is\n   * finished.\n   *\n   * @param {String} value\n   * @param {Function} [cb]\n   */\n\n  setComponent: function setComponent(value, cb) {\n    this.invalidatePending();\n    if (!value) {\n      // just remove current\n      this.unbuild(true);\n      this.remove(this.childVM, cb);\n      this.childVM = null;\n    } else {\n      var self = this;\n      this.resolveComponent(value, function () {\n        self.mountComponent(cb);\n      });\n    }\n  },\n\n  /**\n   * Resolve the component constructor to use when creating\n   * the child vm.\n   *\n   * @param {String|Function} value\n   * @param {Function} cb\n   */\n\n  resolveComponent: function resolveComponent(value, cb) {\n    var self = this;\n    this.pendingComponentCb = cancellable(function (Component) {\n      self.ComponentName = Component.options.name || (typeof value === 'string' ? value : null);\n      self.Component = Component;\n      cb();\n    });\n    this.vm._resolveComponent(value, this.pendingComponentCb);\n  },\n\n  /**\n   * Create a new instance using the current constructor and\n   * replace the existing instance. This method doesn't care\n   * whether the new component and the old one are actually\n   * the same.\n   *\n   * @param {Function} [cb]\n   */\n\n  mountComponent: function mountComponent(cb) {\n    // actual mount\n    this.unbuild(true);\n    var self = this;\n    var activateHooks = this.Component.options.activate;\n    var cached = this.getCached();\n    var newComponent = this.build();\n    if (activateHooks && !cached) {\n      this.waitingFor = newComponent;\n      callActivateHooks(activateHooks, newComponent, function () {\n        if (self.waitingFor !== newComponent) {\n          return;\n        }\n        self.waitingFor = null;\n        self.transition(newComponent, cb);\n      });\n    } else {\n      // update ref for kept-alive component\n      if (cached) {\n        newComponent._updateRef();\n      }\n      this.transition(newComponent, cb);\n    }\n  },\n\n  /**\n   * When the component changes or unbinds before an async\n   * constructor is resolved, we need to invalidate its\n   * pending callback.\n   */\n\n  invalidatePending: function invalidatePending() {\n    if (this.pendingComponentCb) {\n      this.pendingComponentCb.cancel();\n      this.pendingComponentCb = null;\n    }\n  },\n\n  /**\n   * Instantiate/insert a new child vm.\n   * If keep alive and has cached instance, insert that\n   * instance; otherwise build a new one and cache it.\n   *\n   * @param {Object} [extraOptions]\n   * @return {Vue} - the created instance\n   */\n\n  build: function build(extraOptions) {\n    var cached = this.getCached();\n    if (cached) {\n      return cached;\n    }\n    if (this.Component) {\n      // default options\n      var options = {\n        name: this.ComponentName,\n        el: cloneNode(this.el),\n        template: this.inlineTemplate,\n        // make sure to add the child with correct parent\n        // if this is a transcluded component, its parent\n        // should be the transclusion host.\n        parent: this._host || this.vm,\n        // if no inline-template, then the compiled\n        // linker can be cached for better performance.\n        _linkerCachable: !this.inlineTemplate,\n        _ref: this.descriptor.ref,\n        _asComponent: true,\n        _isRouterView: this._isRouterView,\n        // if this is a transcluded component, context\n        // will be the common parent vm of this instance\n        // and its host.\n        _context: this.vm,\n        // if this is inside an inline v-for, the scope\n        // will be the intermediate scope created for this\n        // repeat fragment. this is used for linking props\n        // and container directives.\n        _scope: this._scope,\n        // pass in the owner fragment of this component.\n        // this is necessary so that the fragment can keep\n        // track of its contained components in order to\n        // call attach/detach hooks for them.\n        _frag: this._frag\n      };\n      // extra options\n      // in 1.0.0 this is used by vue-router only\n      /* istanbul ignore if */\n      if (extraOptions) {\n        extend(options, extraOptions);\n      }\n      var child = new this.Component(options);\n      if (this.keepAlive) {\n        this.cache[this.Component.cid] = child;\n      }\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && this.el.hasAttribute('transition') && child._isFragment) {\n        warn('Transitions will not work on a fragment instance. ' + 'Template: ' + child.$options.template, child);\n      }\n      return child;\n    }\n  },\n\n  /**\n   * Try to get a cached instance of the current component.\n   *\n   * @return {Vue|undefined}\n   */\n\n  getCached: function getCached() {\n    return this.keepAlive && this.cache[this.Component.cid];\n  },\n\n  /**\n   * Teardown the current child, but defers cleanup so\n   * that we can separate the destroy and removal steps.\n   *\n   * @param {Boolean} defer\n   */\n\n  unbuild: function unbuild(defer) {\n    if (this.waitingFor) {\n      if (!this.keepAlive) {\n        this.waitingFor.$destroy();\n      }\n      this.waitingFor = null;\n    }\n    var child = this.childVM;\n    if (!child || this.keepAlive) {\n      if (child) {\n        // remove ref\n        child._inactive = true;\n        child._updateRef(true);\n      }\n      return;\n    }\n    // the sole purpose of `deferCleanup` is so that we can\n    // \"deactivate\" the vm right now and perform DOM removal\n    // later.\n    child.$destroy(false, defer);\n  },\n\n  /**\n   * Remove current destroyed child and manually do\n   * the cleanup after removal.\n   *\n   * @param {Function} cb\n   */\n\n  remove: function remove(child, cb) {\n    var keepAlive = this.keepAlive;\n    if (child) {\n      // we may have a component switch when a previous\n      // component is still being transitioned out.\n      // we want to trigger only one lastest insertion cb\n      // when the existing transition finishes. (#1119)\n      this.pendingRemovals++;\n      this.pendingRemovalCb = cb;\n      var self = this;\n      child.$remove(function () {\n        self.pendingRemovals--;\n        if (!keepAlive) child._cleanup();\n        if (!self.pendingRemovals && self.pendingRemovalCb) {\n          self.pendingRemovalCb();\n          self.pendingRemovalCb = null;\n        }\n      });\n    } else if (cb) {\n      cb();\n    }\n  },\n\n  /**\n   * Actually swap the components, depending on the\n   * transition mode. Defaults to simultaneous.\n   *\n   * @param {Vue} target\n   * @param {Function} [cb]\n   */\n\n  transition: function transition(target, cb) {\n    var self = this;\n    var current = this.childVM;\n    // for devtool inspection\n    if (current) current._inactive = true;\n    target._inactive = false;\n    this.childVM = target;\n    switch (self.params.transitionMode) {\n      case 'in-out':\n        target.$before(self.anchor, function () {\n          self.remove(current, cb);\n        });\n        break;\n      case 'out-in':\n        self.remove(current, function () {\n          target.$before(self.anchor, cb);\n        });\n        break;\n      default:\n        self.remove(current);\n        target.$before(self.anchor, cb);\n    }\n  },\n\n  /**\n   * Unbind.\n   */\n\n  unbind: function unbind() {\n    this.invalidatePending();\n    // Do not defer cleanup when unbinding\n    this.unbuild();\n    // destroy all keep-alive cached instances\n    if (this.cache) {\n      for (var key in this.cache) {\n        this.cache[key].$destroy();\n      }\n      this.cache = null;\n    }\n  }\n};\n\n/**\n * Call activate hooks in order (asynchronous)\n *\n * @param {Array} hooks\n * @param {Vue} vm\n * @param {Function} cb\n */\n\nfunction callActivateHooks(hooks, vm, cb) {\n  var total = hooks.length;\n  var called = 0;\n  hooks[0].call(vm, next);\n  function next() {\n    if (++called >= total) {\n      cb();\n    } else {\n      hooks[called].call(vm, next);\n    }\n  }\n}\n\nvar propBindingModes = config._propBindingModes;\nvar empty = {};\n\n// regexes\nvar identRE$1 = /^[$_a-zA-Z]+[\\w$]*$/;\nvar settablePathRE = /^[A-Za-z_$][\\w$]*(\\.[A-Za-z_$][\\w$]*|\\[[^\\[\\]]+\\])*$/;\n\n/**\n * Compile props on a root element and return\n * a props link function.\n *\n * @param {Element|DocumentFragment} el\n * @param {Array} propOptions\n * @param {Vue} vm\n * @return {Function} propsLinkFn\n */\n\nfunction compileProps(el, propOptions, vm) {\n  var props = [];\n  var names = Object.keys(propOptions);\n  var i = names.length;\n  var options, name, attr, value, path, parsed, prop;\n  while (i--) {\n    name = names[i];\n    options = propOptions[name] || empty;\n\n    if (process.env.NODE_ENV !== 'production' && name === '$data') {\n      warn('Do not use $data as prop.', vm);\n      continue;\n    }\n\n    // props could contain dashes, which will be\n    // interpreted as minus calculations by the parser\n    // so we need to camelize the path here\n    path = camelize(name);\n    if (!identRE$1.test(path)) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid prop key: \"' + name + '\". Prop keys ' + 'must be valid identifiers.', vm);\n      continue;\n    }\n\n    prop = {\n      name: name,\n      path: path,\n      options: options,\n      mode: propBindingModes.ONE_WAY,\n      raw: null\n    };\n\n    attr = hyphenate(name);\n    // first check dynamic version\n    if ((value = getBindAttr(el, attr)) === null) {\n      if ((value = getBindAttr(el, attr + '.sync')) !== null) {\n        prop.mode = propBindingModes.TWO_WAY;\n      } else if ((value = getBindAttr(el, attr + '.once')) !== null) {\n        prop.mode = propBindingModes.ONE_TIME;\n      }\n    }\n    if (value !== null) {\n      // has dynamic binding!\n      prop.raw = value;\n      parsed = parseDirective(value);\n      value = parsed.expression;\n      prop.filters = parsed.filters;\n      // check binding type\n      if (isLiteral(value) && !parsed.filters) {\n        // for expressions containing literal numbers and\n        // booleans, there's no need to setup a prop binding,\n        // so we can optimize them as a one-time set.\n        prop.optimizedLiteral = true;\n      } else {\n        prop.dynamic = true;\n        // check non-settable path for two-way bindings\n        if (process.env.NODE_ENV !== 'production' && prop.mode === propBindingModes.TWO_WAY && !settablePathRE.test(value)) {\n          prop.mode = propBindingModes.ONE_WAY;\n          warn('Cannot bind two-way prop with non-settable ' + 'parent path: ' + value, vm);\n        }\n      }\n      prop.parentPath = value;\n\n      // warn required two-way\n      if (process.env.NODE_ENV !== 'production' && options.twoWay && prop.mode !== propBindingModes.TWO_WAY) {\n        warn('Prop \"' + name + '\" expects a two-way binding type.', vm);\n      }\n    } else if ((value = getAttr(el, attr)) !== null) {\n      // has literal binding!\n      prop.raw = value;\n    } else if (process.env.NODE_ENV !== 'production') {\n      // check possible camelCase prop usage\n      var lowerCaseName = path.toLowerCase();\n      value = /[A-Z\\-]/.test(name) && (el.getAttribute(lowerCaseName) || el.getAttribute(':' + lowerCaseName) || el.getAttribute('v-bind:' + lowerCaseName) || el.getAttribute(':' + lowerCaseName + '.once') || el.getAttribute('v-bind:' + lowerCaseName + '.once') || el.getAttribute(':' + lowerCaseName + '.sync') || el.getAttribute('v-bind:' + lowerCaseName + '.sync'));\n      if (value) {\n        warn('Possible usage error for prop `' + lowerCaseName + '` - ' + 'did you mean `' + attr + '`? HTML is case-insensitive, remember to use ' + 'kebab-case for props in templates.', vm);\n      } else if (options.required) {\n        // warn missing required\n        warn('Missing required prop: ' + name, vm);\n      }\n    }\n    // push prop\n    props.push(prop);\n  }\n  return makePropsLinkFn(props);\n}\n\n/**\n * Build a function that applies props to a vm.\n *\n * @param {Array} props\n * @return {Function} propsLinkFn\n */\n\nfunction makePropsLinkFn(props) {\n  return function propsLinkFn(vm, scope) {\n    // store resolved props info\n    vm._props = {};\n    var inlineProps = vm.$options.propsData;\n    var i = props.length;\n    var prop, path, options, value, raw;\n    while (i--) {\n      prop = props[i];\n      raw = prop.raw;\n      path = prop.path;\n      options = prop.options;\n      vm._props[path] = prop;\n      if (inlineProps && hasOwn(inlineProps, path)) {\n        initProp(vm, prop, inlineProps[path]);\n      }if (raw === null) {\n        // initialize absent prop\n        initProp(vm, prop, undefined);\n      } else if (prop.dynamic) {\n        // dynamic prop\n        if (prop.mode === propBindingModes.ONE_TIME) {\n          // one time binding\n          value = (scope || vm._context || vm).$get(prop.parentPath);\n          initProp(vm, prop, value);\n        } else {\n          if (vm._context) {\n            // dynamic binding\n            vm._bindDir({\n              name: 'prop',\n              def: propDef,\n              prop: prop\n            }, null, null, scope); // el, host, scope\n          } else {\n              // root instance\n              initProp(vm, prop, vm.$get(prop.parentPath));\n            }\n        }\n      } else if (prop.optimizedLiteral) {\n        // optimized literal, cast it and just set once\n        var stripped = stripQuotes(raw);\n        value = stripped === raw ? toBoolean(toNumber(raw)) : stripped;\n        initProp(vm, prop, value);\n      } else {\n        // string literal, but we need to cater for\n        // Boolean props with no value, or with same\n        // literal value (e.g. disabled=\"disabled\")\n        // see https://github.com/vuejs/vue-loader/issues/182\n        value = options.type === Boolean && (raw === '' || raw === hyphenate(prop.name)) ? true : raw;\n        initProp(vm, prop, value);\n      }\n    }\n  };\n}\n\n/**\n * Process a prop with a rawValue, applying necessary coersions,\n * default values & assertions and call the given callback with\n * processed value.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} rawValue\n * @param {Function} fn\n */\n\nfunction processPropValue(vm, prop, rawValue, fn) {\n  var isSimple = prop.dynamic && isSimplePath(prop.parentPath);\n  var value = rawValue;\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop);\n  }\n  value = coerceProp(prop, value);\n  var coerced = value !== rawValue;\n  if (!assertProp(prop, value, vm)) {\n    value = undefined;\n  }\n  if (isSimple && !coerced) {\n    withoutConversion(function () {\n      fn(value);\n    });\n  } else {\n    fn(value);\n  }\n}\n\n/**\n * Set a prop's initial value on a vm and its data object.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} value\n */\n\nfunction initProp(vm, prop, value) {\n  processPropValue(vm, prop, value, function (value) {\n    defineReactive(vm, prop.path, value);\n  });\n}\n\n/**\n * Update a prop's value on a vm.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} value\n */\n\nfunction updateProp(vm, prop, value) {\n  processPropValue(vm, prop, value, function (value) {\n    vm[prop.path] = value;\n  });\n}\n\n/**\n * Get the default value of a prop.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @return {*}\n */\n\nfunction getPropDefaultValue(vm, prop) {\n  // no default, return undefined\n  var options = prop.options;\n  if (!hasOwn(options, 'default')) {\n    // absent boolean value defaults to false\n    return options.type === Boolean ? false : undefined;\n  }\n  var def = options['default'];\n  // warn against non-factory defaults for Object & Array\n  if (isObject(def)) {\n    process.env.NODE_ENV !== 'production' && warn('Invalid default value for prop \"' + prop.name + '\": ' + 'Props with type Object/Array must use a factory function ' + 'to return the default value.', vm);\n  }\n  // call factory function for non-Function types\n  return typeof def === 'function' && options.type !== Function ? def.call(vm) : def;\n}\n\n/**\n * Assert whether a prop is valid.\n *\n * @param {Object} prop\n * @param {*} value\n * @param {Vue} vm\n */\n\nfunction assertProp(prop, value, vm) {\n  if (!prop.options.required && ( // non-required\n  prop.raw === null || // abscent\n  value == null) // null or undefined\n  ) {\n      return true;\n    }\n  var options = prop.options;\n  var type = options.type;\n  var valid = !type;\n  var expectedTypes = [];\n  if (type) {\n    if (!isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType);\n      valid = assertedType.valid;\n    }\n  }\n  if (!valid) {\n    if (process.env.NODE_ENV !== 'production') {\n      warn('Invalid prop: type check failed for prop \"' + prop.name + '\".' + ' Expected ' + expectedTypes.map(formatType).join(', ') + ', got ' + formatValue(value) + '.', vm);\n    }\n    return false;\n  }\n  var validator = options.validator;\n  if (validator) {\n    if (!validator(value)) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid prop: custom validator check failed for prop \"' + prop.name + '\".', vm);\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Force parsing value with coerce option.\n *\n * @param {*} value\n * @param {Object} options\n * @return {*}\n */\n\nfunction coerceProp(prop, value) {\n  var coerce = prop.options.coerce;\n  if (!coerce) {\n    return value;\n  }\n  // coerce is a function\n  return coerce(value);\n}\n\n/**\n * Assert the type of a value\n *\n * @param {*} value\n * @param {Function} type\n * @return {Object}\n */\n\nfunction assertType(value, type) {\n  var valid;\n  var expectedType;\n  if (type === String) {\n    expectedType = 'string';\n    valid = typeof value === expectedType;\n  } else if (type === Number) {\n    expectedType = 'number';\n    valid = typeof value === expectedType;\n  } else if (type === Boolean) {\n    expectedType = 'boolean';\n    valid = typeof value === expectedType;\n  } else if (type === Function) {\n    expectedType = 'function';\n    valid = typeof value === expectedType;\n  } else if (type === Object) {\n    expectedType = 'object';\n    valid = isPlainObject(value);\n  } else if (type === Array) {\n    expectedType = 'array';\n    valid = isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  };\n}\n\n/**\n * Format type for output\n *\n * @param {String} type\n * @return {String}\n */\n\nfunction formatType(type) {\n  return type ? type.charAt(0).toUpperCase() + type.slice(1) : 'custom type';\n}\n\n/**\n * Format value\n *\n * @param {*} value\n * @return {String}\n */\n\nfunction formatValue(val) {\n  return Object.prototype.toString.call(val).slice(8, -1);\n}\n\nvar bindingModes = config._propBindingModes;\n\nvar propDef = {\n\n  bind: function bind() {\n    var child = this.vm;\n    var parent = child._context;\n    // passed in from compiler directly\n    var prop = this.descriptor.prop;\n    var childKey = prop.path;\n    var parentKey = prop.parentPath;\n    var twoWay = prop.mode === bindingModes.TWO_WAY;\n\n    var parentWatcher = this.parentWatcher = new Watcher(parent, parentKey, function (val) {\n      updateProp(child, prop, val);\n    }, {\n      twoWay: twoWay,\n      filters: prop.filters,\n      // important: props need to be observed on the\n      // v-for scope if present\n      scope: this._scope\n    });\n\n    // set the child initial value.\n    initProp(child, prop, parentWatcher.value);\n\n    // setup two-way binding\n    if (twoWay) {\n      // important: defer the child watcher creation until\n      // the created hook (after data observation)\n      var self = this;\n      child.$once('pre-hook:created', function () {\n        self.childWatcher = new Watcher(child, childKey, function (val) {\n          parentWatcher.set(val);\n        }, {\n          // ensure sync upward before parent sync down.\n          // this is necessary in cases e.g. the child\n          // mutates a prop array, then replaces it. (#1683)\n          sync: true\n        });\n      });\n    }\n  },\n\n  unbind: function unbind() {\n    this.parentWatcher.teardown();\n    if (this.childWatcher) {\n      this.childWatcher.teardown();\n    }\n  }\n};\n\nvar queue$1 = [];\nvar queued = false;\n\n/**\n * Push a job into the queue.\n *\n * @param {Function} job\n */\n\nfunction pushJob(job) {\n  queue$1.push(job);\n  if (!queued) {\n    queued = true;\n    nextTick(flush);\n  }\n}\n\n/**\n * Flush the queue, and do one forced reflow before\n * triggering transitions.\n */\n\nfunction flush() {\n  // Force layout\n  var f = document.documentElement.offsetHeight;\n  for (var i = 0; i < queue$1.length; i++) {\n    queue$1[i]();\n  }\n  queue$1 = [];\n  queued = false;\n  // dummy return, so js linters don't complain about\n  // unused variable f\n  return f;\n}\n\nvar TYPE_TRANSITION = 'transition';\nvar TYPE_ANIMATION = 'animation';\nvar transDurationProp = transitionProp + 'Duration';\nvar animDurationProp = animationProp + 'Duration';\n\n/**\n * If a just-entered element is applied the\n * leave class while its enter transition hasn't started yet,\n * and the transitioned property has the same value for both\n * enter/leave, then the leave transition will be skipped and\n * the transitionend event never fires. This function ensures\n * its callback to be called after a transition has started\n * by waiting for double raf.\n *\n * It falls back to setTimeout on devices that support CSS\n * transitions but not raf (e.g. Android 4.2 browser) - since\n * these environments are usually slow, we are giving it a\n * relatively large timeout.\n */\n\nvar raf = inBrowser && window.requestAnimationFrame;\nvar waitForTransitionStart = raf\n/* istanbul ignore next */\n? function (fn) {\n  raf(function () {\n    raf(fn);\n  });\n} : function (fn) {\n  setTimeout(fn, 50);\n};\n\n/**\n * A Transition object that encapsulates the state and logic\n * of the transition.\n *\n * @param {Element} el\n * @param {String} id\n * @param {Object} hooks\n * @param {Vue} vm\n */\nfunction Transition(el, id, hooks, vm) {\n  this.id = id;\n  this.el = el;\n  this.enterClass = hooks && hooks.enterClass || id + '-enter';\n  this.leaveClass = hooks && hooks.leaveClass || id + '-leave';\n  this.hooks = hooks;\n  this.vm = vm;\n  // async state\n  this.pendingCssEvent = this.pendingCssCb = this.cancel = this.pendingJsCb = this.op = this.cb = null;\n  this.justEntered = false;\n  this.entered = this.left = false;\n  this.typeCache = {};\n  // check css transition type\n  this.type = hooks && hooks.type;\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV !== 'production') {\n    if (this.type && this.type !== TYPE_TRANSITION && this.type !== TYPE_ANIMATION) {\n      warn('invalid CSS transition type for transition=\"' + this.id + '\": ' + this.type, vm);\n    }\n  }\n  // bind\n  var self = this;['enterNextTick', 'enterDone', 'leaveNextTick', 'leaveDone'].forEach(function (m) {\n    self[m] = bind(self[m], self);\n  });\n}\n\nvar p$1 = Transition.prototype;\n\n/**\n * Start an entering transition.\n *\n * 1. enter transition triggered\n * 2. call beforeEnter hook\n * 3. add enter class\n * 4. insert/show element\n * 5. call enter hook (with possible explicit js callback)\n * 6. reflow\n * 7. based on transition type:\n *    - transition:\n *        remove class now, wait for transitionend,\n *        then done if there's no explicit js callback.\n *    - animation:\n *        wait for animationend, remove class,\n *        then done if there's no explicit js callback.\n *    - no css transition:\n *        done now if there's no explicit js callback.\n * 8. wait for either done or js callback, then call\n *    afterEnter hook.\n *\n * @param {Function} op - insert/show the element\n * @param {Function} [cb]\n */\n\np$1.enter = function (op, cb) {\n  this.cancelPending();\n  this.callHook('beforeEnter');\n  this.cb = cb;\n  addClass(this.el, this.enterClass);\n  op();\n  this.entered = false;\n  this.callHookWithCb('enter');\n  if (this.entered) {\n    return; // user called done synchronously.\n  }\n  this.cancel = this.hooks && this.hooks.enterCancelled;\n  pushJob(this.enterNextTick);\n};\n\n/**\n * The \"nextTick\" phase of an entering transition, which is\n * to be pushed into a queue and executed after a reflow so\n * that removing the class can trigger a CSS transition.\n */\n\np$1.enterNextTick = function () {\n  var _this = this;\n\n  // prevent transition skipping\n  this.justEntered = true;\n  waitForTransitionStart(function () {\n    _this.justEntered = false;\n  });\n  var enterDone = this.enterDone;\n  var type = this.getCssTransitionType(this.enterClass);\n  if (!this.pendingJsCb) {\n    if (type === TYPE_TRANSITION) {\n      // trigger transition by removing enter class now\n      removeClass(this.el, this.enterClass);\n      this.setupCssCb(transitionEndEvent, enterDone);\n    } else if (type === TYPE_ANIMATION) {\n      this.setupCssCb(animationEndEvent, enterDone);\n    } else {\n      enterDone();\n    }\n  } else if (type === TYPE_TRANSITION) {\n    removeClass(this.el, this.enterClass);\n  }\n};\n\n/**\n * The \"cleanup\" phase of an entering transition.\n */\n\np$1.enterDone = function () {\n  this.entered = true;\n  this.cancel = this.pendingJsCb = null;\n  removeClass(this.el, this.enterClass);\n  this.callHook('afterEnter');\n  if (this.cb) this.cb();\n};\n\n/**\n * Start a leaving transition.\n *\n * 1. leave transition triggered.\n * 2. call beforeLeave hook\n * 3. add leave class (trigger css transition)\n * 4. call leave hook (with possible explicit js callback)\n * 5. reflow if no explicit js callback is provided\n * 6. based on transition type:\n *    - transition or animation:\n *        wait for end event, remove class, then done if\n *        there's no explicit js callback.\n *    - no css transition:\n *        done if there's no explicit js callback.\n * 7. wait for either done or js callback, then call\n *    afterLeave hook.\n *\n * @param {Function} op - remove/hide the element\n * @param {Function} [cb]\n */\n\np$1.leave = function (op, cb) {\n  this.cancelPending();\n  this.callHook('beforeLeave');\n  this.op = op;\n  this.cb = cb;\n  addClass(this.el, this.leaveClass);\n  this.left = false;\n  this.callHookWithCb('leave');\n  if (this.left) {\n    return; // user called done synchronously.\n  }\n  this.cancel = this.hooks && this.hooks.leaveCancelled;\n  // only need to handle leaveDone if\n  // 1. the transition is already done (synchronously called\n  //    by the user, which causes this.op set to null)\n  // 2. there's no explicit js callback\n  if (this.op && !this.pendingJsCb) {\n    // if a CSS transition leaves immediately after enter,\n    // the transitionend event never fires. therefore we\n    // detect such cases and end the leave immediately.\n    if (this.justEntered) {\n      this.leaveDone();\n    } else {\n      pushJob(this.leaveNextTick);\n    }\n  }\n};\n\n/**\n * The \"nextTick\" phase of a leaving transition.\n */\n\np$1.leaveNextTick = function () {\n  var type = this.getCssTransitionType(this.leaveClass);\n  if (type) {\n    var event = type === TYPE_TRANSITION ? transitionEndEvent : animationEndEvent;\n    this.setupCssCb(event, this.leaveDone);\n  } else {\n    this.leaveDone();\n  }\n};\n\n/**\n * The \"cleanup\" phase of a leaving transition.\n */\n\np$1.leaveDone = function () {\n  this.left = true;\n  this.cancel = this.pendingJsCb = null;\n  this.op();\n  removeClass(this.el, this.leaveClass);\n  this.callHook('afterLeave');\n  if (this.cb) this.cb();\n  this.op = null;\n};\n\n/**\n * Cancel any pending callbacks from a previously running\n * but not finished transition.\n */\n\np$1.cancelPending = function () {\n  this.op = this.cb = null;\n  var hasPending = false;\n  if (this.pendingCssCb) {\n    hasPending = true;\n    off(this.el, this.pendingCssEvent, this.pendingCssCb);\n    this.pendingCssEvent = this.pendingCssCb = null;\n  }\n  if (this.pendingJsCb) {\n    hasPending = true;\n    this.pendingJsCb.cancel();\n    this.pendingJsCb = null;\n  }\n  if (hasPending) {\n    removeClass(this.el, this.enterClass);\n    removeClass(this.el, this.leaveClass);\n  }\n  if (this.cancel) {\n    this.cancel.call(this.vm, this.el);\n    this.cancel = null;\n  }\n};\n\n/**\n * Call a user-provided synchronous hook function.\n *\n * @param {String} type\n */\n\np$1.callHook = function (type) {\n  if (this.hooks && this.hooks[type]) {\n    this.hooks[type].call(this.vm, this.el);\n  }\n};\n\n/**\n * Call a user-provided, potentially-async hook function.\n * We check for the length of arguments to see if the hook\n * expects a `done` callback. If true, the transition's end\n * will be determined by when the user calls that callback;\n * otherwise, the end is determined by the CSS transition or\n * animation.\n *\n * @param {String} type\n */\n\np$1.callHookWithCb = function (type) {\n  var hook = this.hooks && this.hooks[type];\n  if (hook) {\n    if (hook.length > 1) {\n      this.pendingJsCb = cancellable(this[type + 'Done']);\n    }\n    hook.call(this.vm, this.el, this.pendingJsCb);\n  }\n};\n\n/**\n * Get an element's transition type based on the\n * calculated styles.\n *\n * @param {String} className\n * @return {Number}\n */\n\np$1.getCssTransitionType = function (className) {\n  /* istanbul ignore if */\n  if (!transitionEndEvent ||\n  // skip CSS transitions if page is not visible -\n  // this solves the issue of transitionend events not\n  // firing until the page is visible again.\n  // pageVisibility API is supported in IE10+, same as\n  // CSS transitions.\n  document.hidden ||\n  // explicit js-only transition\n  this.hooks && this.hooks.css === false ||\n  // element is hidden\n  isHidden(this.el)) {\n    return;\n  }\n  var type = this.type || this.typeCache[className];\n  if (type) return type;\n  var inlineStyles = this.el.style;\n  var computedStyles = window.getComputedStyle(this.el);\n  var transDuration = inlineStyles[transDurationProp] || computedStyles[transDurationProp];\n  if (transDuration && transDuration !== '0s') {\n    type = TYPE_TRANSITION;\n  } else {\n    var animDuration = inlineStyles[animDurationProp] || computedStyles[animDurationProp];\n    if (animDuration && animDuration !== '0s') {\n      type = TYPE_ANIMATION;\n    }\n  }\n  if (type) {\n    this.typeCache[className] = type;\n  }\n  return type;\n};\n\n/**\n * Setup a CSS transitionend/animationend callback.\n *\n * @param {String} event\n * @param {Function} cb\n */\n\np$1.setupCssCb = function (event, cb) {\n  this.pendingCssEvent = event;\n  var self = this;\n  var el = this.el;\n  var onEnd = this.pendingCssCb = function (e) {\n    if (e.target === el) {\n      off(el, event, onEnd);\n      self.pendingCssEvent = self.pendingCssCb = null;\n      if (!self.pendingJsCb && cb) {\n        cb();\n      }\n    }\n  };\n  on(el, event, onEnd);\n};\n\n/**\n * Check if an element is hidden - in that case we can just\n * skip the transition alltogether.\n *\n * @param {Element} el\n * @return {Boolean}\n */\n\nfunction isHidden(el) {\n  if (/svg$/.test(el.namespaceURI)) {\n    // SVG elements do not have offset(Width|Height)\n    // so we need to check the client rect\n    var rect = el.getBoundingClientRect();\n    return !(rect.width || rect.height);\n  } else {\n    return !(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n  }\n}\n\nvar transition$1 = {\n\n  priority: TRANSITION,\n\n  update: function update(id, oldId) {\n    var el = this.el;\n    // resolve on owner vm\n    var hooks = resolveAsset(this.vm.$options, 'transitions', id);\n    id = id || 'v';\n    el.__v_trans = new Transition(el, id, hooks, this.vm);\n    if (oldId) {\n      removeClass(el, oldId + '-transition');\n    }\n    addClass(el, id + '-transition');\n  }\n};\n\nvar internalDirectives = {\n  style: style,\n  'class': vClass,\n  component: component,\n  prop: propDef,\n  transition: transition$1\n};\n\n// special binding prefixes\nvar bindRE = /^v-bind:|^:/;\nvar onRE = /^v-on:|^@/;\nvar dirAttrRE = /^v-([^:]+)(?:$|:(.*)$)/;\nvar modifierRE = /\\.[^\\.]+/g;\nvar transitionRE = /^(v-bind:|:)?transition$/;\n\n// default directive priority\nvar DEFAULT_PRIORITY = 1000;\nvar DEFAULT_TERMINAL_PRIORITY = 2000;\n\n/**\n * Compile a template and return a reusable composite link\n * function, which recursively contains more link functions\n * inside. This top level compile function would normally\n * be called on instance root nodes, but can also be used\n * for partial compilation if the partial argument is true.\n *\n * The returned composite link function, when called, will\n * return an unlink function that tearsdown all directives\n * created during the linking phase.\n *\n * @param {Element|DocumentFragment} el\n * @param {Object} options\n * @param {Boolean} partial\n * @return {Function}\n */\n\nfunction compile(el, options, partial) {\n  // link function for the node itself.\n  var nodeLinkFn = partial || !options._asComponent ? compileNode(el, options) : null;\n  // link function for the childNodes\n  var childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && !isScript(el) && el.hasChildNodes() ? compileNodeList(el.childNodes, options) : null;\n\n  /**\n   * A composite linker function to be called on a already\n   * compiled piece of DOM, which instantiates all directive\n   * instances.\n   *\n   * @param {Vue} vm\n   * @param {Element|DocumentFragment} el\n   * @param {Vue} [host] - host vm of transcluded content\n   * @param {Object} [scope] - v-for scope\n   * @param {Fragment} [frag] - link context fragment\n   * @return {Function|undefined}\n   */\n\n  return function compositeLinkFn(vm, el, host, scope, frag) {\n    // cache childNodes before linking parent, fix #657\n    var childNodes = toArray(el.childNodes);\n    // link\n    var dirs = linkAndCapture(function compositeLinkCapturer() {\n      if (nodeLinkFn) nodeLinkFn(vm, el, host, scope, frag);\n      if (childLinkFn) childLinkFn(vm, childNodes, host, scope, frag);\n    }, vm);\n    return makeUnlinkFn(vm, dirs);\n  };\n}\n\n/**\n * Apply a linker to a vm/element pair and capture the\n * directives created during the process.\n *\n * @param {Function} linker\n * @param {Vue} vm\n */\n\nfunction linkAndCapture(linker, vm) {\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV === 'production') {\n    // reset directives before every capture in production\n    // mode, so that when unlinking we don't need to splice\n    // them out (which turns out to be a perf hit).\n    // they are kept in development mode because they are\n    // useful for Vue's own tests.\n    vm._directives = [];\n  }\n  var originalDirCount = vm._directives.length;\n  linker();\n  var dirs = vm._directives.slice(originalDirCount);\n  dirs.sort(directiveComparator);\n  for (var i = 0, l = dirs.length; i < l; i++) {\n    dirs[i]._bind();\n  }\n  return dirs;\n}\n\n/**\n * Directive priority sort comparator\n *\n * @param {Object} a\n * @param {Object} b\n */\n\nfunction directiveComparator(a, b) {\n  a = a.descriptor.def.priority || DEFAULT_PRIORITY;\n  b = b.descriptor.def.priority || DEFAULT_PRIORITY;\n  return a > b ? -1 : a === b ? 0 : 1;\n}\n\n/**\n * Linker functions return an unlink function that\n * tearsdown all directives instances generated during\n * the process.\n *\n * We create unlink functions with only the necessary\n * information to avoid retaining additional closures.\n *\n * @param {Vue} vm\n * @param {Array} dirs\n * @param {Vue} [context]\n * @param {Array} [contextDirs]\n * @return {Function}\n */\n\nfunction makeUnlinkFn(vm, dirs, context, contextDirs) {\n  function unlink(destroying) {\n    teardownDirs(vm, dirs, destroying);\n    if (context && contextDirs) {\n      teardownDirs(context, contextDirs);\n    }\n  }\n  // expose linked directives\n  unlink.dirs = dirs;\n  return unlink;\n}\n\n/**\n * Teardown partial linked directives.\n *\n * @param {Vue} vm\n * @param {Array} dirs\n * @param {Boolean} destroying\n */\n\nfunction teardownDirs(vm, dirs, destroying) {\n  var i = dirs.length;\n  while (i--) {\n    dirs[i]._teardown();\n    if (process.env.NODE_ENV !== 'production' && !destroying) {\n      vm._directives.$remove(dirs[i]);\n    }\n  }\n}\n\n/**\n * Compile link props on an instance.\n *\n * @param {Vue} vm\n * @param {Element} el\n * @param {Object} props\n * @param {Object} [scope]\n * @return {Function}\n */\n\nfunction compileAndLinkProps(vm, el, props, scope) {\n  var propsLinkFn = compileProps(el, props, vm);\n  var propDirs = linkAndCapture(function () {\n    propsLinkFn(vm, scope);\n  }, vm);\n  return makeUnlinkFn(vm, propDirs);\n}\n\n/**\n * Compile the root element of an instance.\n *\n * 1. attrs on context container (context scope)\n * 2. attrs on the component template root node, if\n *    replace:true (child scope)\n *\n * If this is a fragment instance, we only need to compile 1.\n *\n * @param {Element} el\n * @param {Object} options\n * @param {Object} contextOptions\n * @return {Function}\n */\n\nfunction compileRoot(el, options, contextOptions) {\n  var containerAttrs = options._containerAttrs;\n  var replacerAttrs = options._replacerAttrs;\n  var contextLinkFn, replacerLinkFn;\n\n  // only need to compile other attributes for\n  // non-fragment instances\n  if (el.nodeType !== 11) {\n    // for components, container and replacer need to be\n    // compiled separately and linked in different scopes.\n    if (options._asComponent) {\n      // 2. container attributes\n      if (containerAttrs && contextOptions) {\n        contextLinkFn = compileDirectives(containerAttrs, contextOptions);\n      }\n      if (replacerAttrs) {\n        // 3. replacer attributes\n        replacerLinkFn = compileDirectives(replacerAttrs, options);\n      }\n    } else {\n      // non-component, just compile as a normal element.\n      replacerLinkFn = compileDirectives(el.attributes, options);\n    }\n  } else if (process.env.NODE_ENV !== 'production' && containerAttrs) {\n    // warn container directives for fragment instances\n    var names = containerAttrs.filter(function (attr) {\n      // allow vue-loader/vueify scoped css attributes\n      return attr.name.indexOf('_v-') < 0 &&\n      // allow event listeners\n      !onRE.test(attr.name) &&\n      // allow slots\n      attr.name !== 'slot';\n    }).map(function (attr) {\n      return '\"' + attr.name + '\"';\n    });\n    if (names.length) {\n      var plural = names.length > 1;\n      warn('Attribute' + (plural ? 's ' : ' ') + names.join(', ') + (plural ? ' are' : ' is') + ' ignored on component ' + '<' + options.el.tagName.toLowerCase() + '> because ' + 'the component is a fragment instance: ' + 'http://vuejs.org/guide/components.html#Fragment-Instance');\n    }\n  }\n\n  options._containerAttrs = options._replacerAttrs = null;\n  return function rootLinkFn(vm, el, scope) {\n    // link context scope dirs\n    var context = vm._context;\n    var contextDirs;\n    if (context && contextLinkFn) {\n      contextDirs = linkAndCapture(function () {\n        contextLinkFn(context, el, null, scope);\n      }, context);\n    }\n\n    // link self\n    var selfDirs = linkAndCapture(function () {\n      if (replacerLinkFn) replacerLinkFn(vm, el);\n    }, vm);\n\n    // return the unlink function that tearsdown context\n    // container directives.\n    return makeUnlinkFn(vm, selfDirs, context, contextDirs);\n  };\n}\n\n/**\n * Compile a node and return a nodeLinkFn based on the\n * node type.\n *\n * @param {Node} node\n * @param {Object} options\n * @return {Function|null}\n */\n\nfunction compileNode(node, options) {\n  var type = node.nodeType;\n  if (type === 1 && !isScript(node)) {\n    return compileElement(node, options);\n  } else if (type === 3 && node.data.trim()) {\n    return compileTextNode(node, options);\n  } else {\n    return null;\n  }\n}\n\n/**\n * Compile an element and return a nodeLinkFn.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Function|null}\n */\n\nfunction compileElement(el, options) {\n  // preprocess textareas.\n  // textarea treats its text content as the initial value.\n  // just bind it as an attr directive for value.\n  if (el.tagName === 'TEXTAREA') {\n    var tokens = parseText(el.value);\n    if (tokens) {\n      el.setAttribute(':value', tokensToExp(tokens));\n      el.value = '';\n    }\n  }\n  var linkFn;\n  var hasAttrs = el.hasAttributes();\n  var attrs = hasAttrs && toArray(el.attributes);\n  // check terminal directives (for & if)\n  if (hasAttrs) {\n    linkFn = checkTerminalDirectives(el, attrs, options);\n  }\n  // check element directives\n  if (!linkFn) {\n    linkFn = checkElementDirectives(el, options);\n  }\n  // check component\n  if (!linkFn) {\n    linkFn = checkComponent(el, options);\n  }\n  // normal directives\n  if (!linkFn && hasAttrs) {\n    linkFn = compileDirectives(attrs, options);\n  }\n  return linkFn;\n}\n\n/**\n * Compile a textNode and return a nodeLinkFn.\n *\n * @param {TextNode} node\n * @param {Object} options\n * @return {Function|null} textNodeLinkFn\n */\n\nfunction compileTextNode(node, options) {\n  // skip marked text nodes\n  if (node._skip) {\n    return removeText;\n  }\n\n  var tokens = parseText(node.wholeText);\n  if (!tokens) {\n    return null;\n  }\n\n  // mark adjacent text nodes as skipped,\n  // because we are using node.wholeText to compile\n  // all adjacent text nodes together. This fixes\n  // issues in IE where sometimes it splits up a single\n  // text node into multiple ones.\n  var next = node.nextSibling;\n  while (next && next.nodeType === 3) {\n    next._skip = true;\n    next = next.nextSibling;\n  }\n\n  var frag = document.createDocumentFragment();\n  var el, token;\n  for (var i = 0, l = tokens.length; i < l; i++) {\n    token = tokens[i];\n    el = token.tag ? processTextToken(token, options) : document.createTextNode(token.value);\n    frag.appendChild(el);\n  }\n  return makeTextNodeLinkFn(tokens, frag, options);\n}\n\n/**\n * Linker for an skipped text node.\n *\n * @param {Vue} vm\n * @param {Text} node\n */\n\nfunction removeText(vm, node) {\n  remove(node);\n}\n\n/**\n * Process a single text token.\n *\n * @param {Object} token\n * @param {Object} options\n * @return {Node}\n */\n\nfunction processTextToken(token, options) {\n  var el;\n  if (token.oneTime) {\n    el = document.createTextNode(token.value);\n  } else {\n    if (token.html) {\n      el = document.createComment('v-html');\n      setTokenType('html');\n    } else {\n      // IE will clean up empty textNodes during\n      // frag.cloneNode(true), so we have to give it\n      // something here...\n      el = document.createTextNode(' ');\n      setTokenType('text');\n    }\n  }\n  function setTokenType(type) {\n    if (token.descriptor) return;\n    var parsed = parseDirective(token.value);\n    token.descriptor = {\n      name: type,\n      def: directives[type],\n      expression: parsed.expression,\n      filters: parsed.filters\n    };\n  }\n  return el;\n}\n\n/**\n * Build a function that processes a textNode.\n *\n * @param {Array<Object>} tokens\n * @param {DocumentFragment} frag\n */\n\nfunction makeTextNodeLinkFn(tokens, frag) {\n  return function textNodeLinkFn(vm, el, host, scope) {\n    var fragClone = frag.cloneNode(true);\n    var childNodes = toArray(fragClone.childNodes);\n    var token, value, node;\n    for (var i = 0, l = tokens.length; i < l; i++) {\n      token = tokens[i];\n      value = token.value;\n      if (token.tag) {\n        node = childNodes[i];\n        if (token.oneTime) {\n          value = (scope || vm).$eval(value);\n          if (token.html) {\n            replace(node, parseTemplate(value, true));\n          } else {\n            node.data = value;\n          }\n        } else {\n          vm._bindDir(token.descriptor, node, host, scope);\n        }\n      }\n    }\n    replace(el, fragClone);\n  };\n}\n\n/**\n * Compile a node list and return a childLinkFn.\n *\n * @param {NodeList} nodeList\n * @param {Object} options\n * @return {Function|undefined}\n */\n\nfunction compileNodeList(nodeList, options) {\n  var linkFns = [];\n  var nodeLinkFn, childLinkFn, node;\n  for (var i = 0, l = nodeList.length; i < l; i++) {\n    node = nodeList[i];\n    nodeLinkFn = compileNode(node, options);\n    childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && node.tagName !== 'SCRIPT' && node.hasChildNodes() ? compileNodeList(node.childNodes, options) : null;\n    linkFns.push(nodeLinkFn, childLinkFn);\n  }\n  return linkFns.length ? makeChildLinkFn(linkFns) : null;\n}\n\n/**\n * Make a child link function for a node's childNodes.\n *\n * @param {Array<Function>} linkFns\n * @return {Function} childLinkFn\n */\n\nfunction makeChildLinkFn(linkFns) {\n  return function childLinkFn(vm, nodes, host, scope, frag) {\n    var node, nodeLinkFn, childrenLinkFn;\n    for (var i = 0, n = 0, l = linkFns.length; i < l; n++) {\n      node = nodes[n];\n      nodeLinkFn = linkFns[i++];\n      childrenLinkFn = linkFns[i++];\n      // cache childNodes before linking parent, fix #657\n      var childNodes = toArray(node.childNodes);\n      if (nodeLinkFn) {\n        nodeLinkFn(vm, node, host, scope, frag);\n      }\n      if (childrenLinkFn) {\n        childrenLinkFn(vm, childNodes, host, scope, frag);\n      }\n    }\n  };\n}\n\n/**\n * Check for element directives (custom elements that should\n * be resovled as terminal directives).\n *\n * @param {Element} el\n * @param {Object} options\n */\n\nfunction checkElementDirectives(el, options) {\n  var tag = el.tagName.toLowerCase();\n  if (commonTagRE.test(tag)) {\n    return;\n  }\n  var def = resolveAsset(options, 'elementDirectives', tag);\n  if (def) {\n    return makeTerminalNodeLinkFn(el, tag, '', options, def);\n  }\n}\n\n/**\n * Check if an element is a component. If yes, return\n * a component link function.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Function|undefined}\n */\n\nfunction checkComponent(el, options) {\n  var component = checkComponentAttr(el, options);\n  if (component) {\n    var ref = findRef(el);\n    var descriptor = {\n      name: 'component',\n      ref: ref,\n      expression: component.id,\n      def: internalDirectives.component,\n      modifiers: {\n        literal: !component.dynamic\n      }\n    };\n    var componentLinkFn = function componentLinkFn(vm, el, host, scope, frag) {\n      if (ref) {\n        defineReactive((scope || vm).$refs, ref, null);\n      }\n      vm._bindDir(descriptor, el, host, scope, frag);\n    };\n    componentLinkFn.terminal = true;\n    return componentLinkFn;\n  }\n}\n\n/**\n * Check an element for terminal directives in fixed order.\n * If it finds one, return a terminal link function.\n *\n * @param {Element} el\n * @param {Array} attrs\n * @param {Object} options\n * @return {Function} terminalLinkFn\n */\n\nfunction checkTerminalDirectives(el, attrs, options) {\n  // skip v-pre\n  if (getAttr(el, 'v-pre') !== null) {\n    return skip;\n  }\n  // skip v-else block, but only if following v-if\n  if (el.hasAttribute('v-else')) {\n    var prev = el.previousElementSibling;\n    if (prev && prev.hasAttribute('v-if')) {\n      return skip;\n    }\n  }\n\n  var attr, name, value, modifiers, matched, dirName, rawName, arg, def, termDef;\n  for (var i = 0, j = attrs.length; i < j; i++) {\n    attr = attrs[i];\n    name = attr.name.replace(modifierRE, '');\n    if (matched = name.match(dirAttrRE)) {\n      def = resolveAsset(options, 'directives', matched[1]);\n      if (def && def.terminal) {\n        if (!termDef || (def.priority || DEFAULT_TERMINAL_PRIORITY) > termDef.priority) {\n          termDef = def;\n          rawName = attr.name;\n          modifiers = parseModifiers(attr.name);\n          value = attr.value;\n          dirName = matched[1];\n          arg = matched[2];\n        }\n      }\n    }\n  }\n\n  if (termDef) {\n    return makeTerminalNodeLinkFn(el, dirName, value, options, termDef, rawName, arg, modifiers);\n  }\n}\n\nfunction skip() {}\nskip.terminal = true;\n\n/**\n * Build a node link function for a terminal directive.\n * A terminal link function terminates the current\n * compilation recursion and handles compilation of the\n * subtree in the directive.\n *\n * @param {Element} el\n * @param {String} dirName\n * @param {String} value\n * @param {Object} options\n * @param {Object} def\n * @param {String} [rawName]\n * @param {String} [arg]\n * @param {Object} [modifiers]\n * @return {Function} terminalLinkFn\n */\n\nfunction makeTerminalNodeLinkFn(el, dirName, value, options, def, rawName, arg, modifiers) {\n  var parsed = parseDirective(value);\n  var descriptor = {\n    name: dirName,\n    arg: arg,\n    expression: parsed.expression,\n    filters: parsed.filters,\n    raw: value,\n    attr: rawName,\n    modifiers: modifiers,\n    def: def\n  };\n  // check ref for v-for and router-view\n  if (dirName === 'for' || dirName === 'router-view') {\n    descriptor.ref = findRef(el);\n  }\n  var fn = function terminalNodeLinkFn(vm, el, host, scope, frag) {\n    if (descriptor.ref) {\n      defineReactive((scope || vm).$refs, descriptor.ref, null);\n    }\n    vm._bindDir(descriptor, el, host, scope, frag);\n  };\n  fn.terminal = true;\n  return fn;\n}\n\n/**\n * Compile the directives on an element and return a linker.\n *\n * @param {Array|NamedNodeMap} attrs\n * @param {Object} options\n * @return {Function}\n */\n\nfunction compileDirectives(attrs, options) {\n  var i = attrs.length;\n  var dirs = [];\n  var attr, name, value, rawName, rawValue, dirName, arg, modifiers, dirDef, tokens, matched;\n  while (i--) {\n    attr = attrs[i];\n    name = rawName = attr.name;\n    value = rawValue = attr.value;\n    tokens = parseText(value);\n    // reset arg\n    arg = null;\n    // check modifiers\n    modifiers = parseModifiers(name);\n    name = name.replace(modifierRE, '');\n\n    // attribute interpolations\n    if (tokens) {\n      value = tokensToExp(tokens);\n      arg = name;\n      pushDir('bind', directives.bind, tokens);\n      // warn against mixing mustaches with v-bind\n      if (process.env.NODE_ENV !== 'production') {\n        if (name === 'class' && Array.prototype.some.call(attrs, function (attr) {\n          return attr.name === ':class' || attr.name === 'v-bind:class';\n        })) {\n          warn('class=\"' + rawValue + '\": Do not mix mustache interpolation ' + 'and v-bind for \"class\" on the same element. Use one or the other.', options);\n        }\n      }\n    } else\n\n      // special attribute: transition\n      if (transitionRE.test(name)) {\n        modifiers.literal = !bindRE.test(name);\n        pushDir('transition', internalDirectives.transition);\n      } else\n\n        // event handlers\n        if (onRE.test(name)) {\n          arg = name.replace(onRE, '');\n          pushDir('on', directives.on);\n        } else\n\n          // attribute bindings\n          if (bindRE.test(name)) {\n            dirName = name.replace(bindRE, '');\n            if (dirName === 'style' || dirName === 'class') {\n              pushDir(dirName, internalDirectives[dirName]);\n            } else {\n              arg = dirName;\n              pushDir('bind', directives.bind);\n            }\n          } else\n\n            // normal directives\n            if (matched = name.match(dirAttrRE)) {\n              dirName = matched[1];\n              arg = matched[2];\n\n              // skip v-else (when used with v-show)\n              if (dirName === 'else') {\n                continue;\n              }\n\n              dirDef = resolveAsset(options, 'directives', dirName, true);\n              if (dirDef) {\n                pushDir(dirName, dirDef);\n              }\n            }\n  }\n\n  /**\n   * Push a directive.\n   *\n   * @param {String} dirName\n   * @param {Object|Function} def\n   * @param {Array} [interpTokens]\n   */\n\n  function pushDir(dirName, def, interpTokens) {\n    var hasOneTimeToken = interpTokens && hasOneTime(interpTokens);\n    var parsed = !hasOneTimeToken && parseDirective(value);\n    dirs.push({\n      name: dirName,\n      attr: rawName,\n      raw: rawValue,\n      def: def,\n      arg: arg,\n      modifiers: modifiers,\n      // conversion from interpolation strings with one-time token\n      // to expression is differed until directive bind time so that we\n      // have access to the actual vm context for one-time bindings.\n      expression: parsed && parsed.expression,\n      filters: parsed && parsed.filters,\n      interp: interpTokens,\n      hasOneTime: hasOneTimeToken\n    });\n  }\n\n  if (dirs.length) {\n    return makeNodeLinkFn(dirs);\n  }\n}\n\n/**\n * Parse modifiers from directive attribute name.\n *\n * @param {String} name\n * @return {Object}\n */\n\nfunction parseModifiers(name) {\n  var res = Object.create(null);\n  var match = name.match(modifierRE);\n  if (match) {\n    var i = match.length;\n    while (i--) {\n      res[match[i].slice(1)] = true;\n    }\n  }\n  return res;\n}\n\n/**\n * Build a link function for all directives on a single node.\n *\n * @param {Array} directives\n * @return {Function} directivesLinkFn\n */\n\nfunction makeNodeLinkFn(directives) {\n  return function nodeLinkFn(vm, el, host, scope, frag) {\n    // reverse apply because it's sorted low to high\n    var i = directives.length;\n    while (i--) {\n      vm._bindDir(directives[i], el, host, scope, frag);\n    }\n  };\n}\n\n/**\n * Check if an interpolation string contains one-time tokens.\n *\n * @param {Array} tokens\n * @return {Boolean}\n */\n\nfunction hasOneTime(tokens) {\n  var i = tokens.length;\n  while (i--) {\n    if (tokens[i].oneTime) return true;\n  }\n}\n\nfunction isScript(el) {\n  return el.tagName === 'SCRIPT' && (!el.hasAttribute('type') || el.getAttribute('type') === 'text/javascript');\n}\n\nvar specialCharRE = /[^\\w\\-:\\.]/;\n\n/**\n * Process an element or a DocumentFragment based on a\n * instance option object. This allows us to transclude\n * a template node/fragment before the instance is created,\n * so the processed fragment can then be cloned and reused\n * in v-for.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Element|DocumentFragment}\n */\n\nfunction transclude(el, options) {\n  // extract container attributes to pass them down\n  // to compiler, because they need to be compiled in\n  // parent scope. we are mutating the options object here\n  // assuming the same object will be used for compile\n  // right after this.\n  if (options) {\n    options._containerAttrs = extractAttrs(el);\n  }\n  // for template tags, what we want is its content as\n  // a documentFragment (for fragment instances)\n  if (isTemplate(el)) {\n    el = parseTemplate(el);\n  }\n  if (options) {\n    if (options._asComponent && !options.template) {\n      options.template = '<slot></slot>';\n    }\n    if (options.template) {\n      options._content = extractContent(el);\n      el = transcludeTemplate(el, options);\n    }\n  }\n  if (isFragment(el)) {\n    // anchors for fragment instance\n    // passing in `persist: true` to avoid them being\n    // discarded by IE during template cloning\n    prepend(createAnchor('v-start', true), el);\n    el.appendChild(createAnchor('v-end', true));\n  }\n  return el;\n}\n\n/**\n * Process the template option.\n * If the replace option is true this will swap the $el.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Element|DocumentFragment}\n */\n\nfunction transcludeTemplate(el, options) {\n  var template = options.template;\n  var frag = parseTemplate(template, true);\n  if (frag) {\n    var replacer = frag.firstChild;\n    var tag = replacer.tagName && replacer.tagName.toLowerCase();\n    if (options.replace) {\n      /* istanbul ignore if */\n      if (el === document.body) {\n        process.env.NODE_ENV !== 'production' && warn('You are mounting an instance with a template to ' + '<body>. This will replace <body> entirely. You ' + 'should probably use `replace: false` here.');\n      }\n      // there are many cases where the instance must\n      // become a fragment instance: basically anything that\n      // can create more than 1 root nodes.\n      if (\n      // multi-children template\n      frag.childNodes.length > 1 ||\n      // non-element template\n      replacer.nodeType !== 1 ||\n      // single nested component\n      tag === 'component' || resolveAsset(options, 'components', tag) || hasBindAttr(replacer, 'is') ||\n      // element directive\n      resolveAsset(options, 'elementDirectives', tag) ||\n      // for block\n      replacer.hasAttribute('v-for') ||\n      // if block\n      replacer.hasAttribute('v-if')) {\n        return frag;\n      } else {\n        options._replacerAttrs = extractAttrs(replacer);\n        mergeAttrs(el, replacer);\n        return replacer;\n      }\n    } else {\n      el.appendChild(frag);\n      return el;\n    }\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid template option: ' + template);\n  }\n}\n\n/**\n * Helper to extract a component container's attributes\n * into a plain object array.\n *\n * @param {Element} el\n * @return {Array}\n */\n\nfunction extractAttrs(el) {\n  if (el.nodeType === 1 && el.hasAttributes()) {\n    return toArray(el.attributes);\n  }\n}\n\n/**\n * Merge the attributes of two elements, and make sure\n * the class names are merged properly.\n *\n * @param {Element} from\n * @param {Element} to\n */\n\nfunction mergeAttrs(from, to) {\n  var attrs = from.attributes;\n  var i = attrs.length;\n  var name, value;\n  while (i--) {\n    name = attrs[i].name;\n    value = attrs[i].value;\n    if (!to.hasAttribute(name) && !specialCharRE.test(name)) {\n      to.setAttribute(name, value);\n    } else if (name === 'class' && !parseText(value) && (value = value.trim())) {\n      value.split(/\\s+/).forEach(function (cls) {\n        addClass(to, cls);\n      });\n    }\n  }\n}\n\n/**\n * Scan and determine slot content distribution.\n * We do this during transclusion instead at compile time so that\n * the distribution is decoupled from the compilation order of\n * the slots.\n *\n * @param {Element|DocumentFragment} template\n * @param {Element} content\n * @param {Vue} vm\n */\n\nfunction resolveSlots(vm, content) {\n  if (!content) {\n    return;\n  }\n  var contents = vm._slotContents = Object.create(null);\n  var el, name;\n  for (var i = 0, l = content.children.length; i < l; i++) {\n    el = content.children[i];\n    /* eslint-disable no-cond-assign */\n    if (name = el.getAttribute('slot')) {\n      (contents[name] || (contents[name] = [])).push(el);\n    }\n    /* eslint-enable no-cond-assign */\n    if (process.env.NODE_ENV !== 'production' && getBindAttr(el, 'slot')) {\n      warn('The \"slot\" attribute must be static.', vm.$parent);\n    }\n  }\n  for (name in contents) {\n    contents[name] = extractFragment(contents[name], content);\n  }\n  if (content.hasChildNodes()) {\n    var nodes = content.childNodes;\n    if (nodes.length === 1 && nodes[0].nodeType === 3 && !nodes[0].data.trim()) {\n      return;\n    }\n    contents['default'] = extractFragment(content.childNodes, content);\n  }\n}\n\n/**\n * Extract qualified content nodes from a node list.\n *\n * @param {NodeList} nodes\n * @return {DocumentFragment}\n */\n\nfunction extractFragment(nodes, parent) {\n  var frag = document.createDocumentFragment();\n  nodes = toArray(nodes);\n  for (var i = 0, l = nodes.length; i < l; i++) {\n    var node = nodes[i];\n    if (isTemplate(node) && !node.hasAttribute('v-if') && !node.hasAttribute('v-for')) {\n      parent.removeChild(node);\n      node = parseTemplate(node, true);\n    }\n    frag.appendChild(node);\n  }\n  return frag;\n}\n\n\n\nvar compiler = Object.freeze({\n\tcompile: compile,\n\tcompileAndLinkProps: compileAndLinkProps,\n\tcompileRoot: compileRoot,\n\ttransclude: transclude,\n\tresolveSlots: resolveSlots\n});\n\nfunction stateMixin (Vue) {\n  /**\n   * Accessor for `$data` property, since setting $data\n   * requires observing the new object and updating\n   * proxied properties.\n   */\n\n  Object.defineProperty(Vue.prototype, '$data', {\n    get: function get() {\n      return this._data;\n    },\n    set: function set(newData) {\n      if (newData !== this._data) {\n        this._setData(newData);\n      }\n    }\n  });\n\n  /**\n   * Setup the scope of an instance, which contains:\n   * - observed data\n   * - computed properties\n   * - user methods\n   * - meta properties\n   */\n\n  Vue.prototype._initState = function () {\n    this._initProps();\n    this._initMeta();\n    this._initMethods();\n    this._initData();\n    this._initComputed();\n  };\n\n  /**\n   * Initialize props.\n   */\n\n  Vue.prototype._initProps = function () {\n    var options = this.$options;\n    var el = options.el;\n    var props = options.props;\n    if (props && !el) {\n      process.env.NODE_ENV !== 'production' && warn('Props will not be compiled if no `el` option is ' + 'provided at instantiation.', this);\n    }\n    // make sure to convert string selectors into element now\n    el = options.el = query(el);\n    this._propsUnlinkFn = el && el.nodeType === 1 && props\n    // props must be linked in proper scope if inside v-for\n    ? compileAndLinkProps(this, el, props, this._scope) : null;\n  };\n\n  /**\n   * Initialize the data.\n   */\n\n  Vue.prototype._initData = function () {\n    var dataFn = this.$options.data;\n    var data = this._data = dataFn ? dataFn() : {};\n    if (!isPlainObject(data)) {\n      data = {};\n      process.env.NODE_ENV !== 'production' && warn('data functions should return an object.', this);\n    }\n    var props = this._props;\n    // proxy data on instance\n    var keys = Object.keys(data);\n    var i, key;\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      // there are two scenarios where we can proxy a data key:\n      // 1. it's not already defined as a prop\n      // 2. it's provided via a instantiation option AND there are no\n      //    template prop present\n      if (!props || !hasOwn(props, key)) {\n        this._proxy(key);\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('Data field \"' + key + '\" is already defined ' + 'as a prop. To provide default value for a prop, use the \"default\" ' + 'prop option; if you want to pass prop values to an instantiation ' + 'call, use the \"propsData\" option.', this);\n      }\n    }\n    // observe data\n    observe(data, this);\n  };\n\n  /**\n   * Swap the instance's $data. Called in $data's setter.\n   *\n   * @param {Object} newData\n   */\n\n  Vue.prototype._setData = function (newData) {\n    newData = newData || {};\n    var oldData = this._data;\n    this._data = newData;\n    var keys, key, i;\n    // unproxy keys not present in new data\n    keys = Object.keys(oldData);\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      if (!(key in newData)) {\n        this._unproxy(key);\n      }\n    }\n    // proxy keys not already proxied,\n    // and trigger change for changed values\n    keys = Object.keys(newData);\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      if (!hasOwn(this, key)) {\n        // new property\n        this._proxy(key);\n      }\n    }\n    oldData.__ob__.removeVm(this);\n    observe(newData, this);\n    this._digest();\n  };\n\n  /**\n   * Proxy a property, so that\n   * vm.prop === vm._data.prop\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype._proxy = function (key) {\n    if (!isReserved(key)) {\n      // need to store ref to self here\n      // because these getter/setters might\n      // be called by child scopes via\n      // prototype inheritance.\n      var self = this;\n      Object.defineProperty(self, key, {\n        configurable: true,\n        enumerable: true,\n        get: function proxyGetter() {\n          return self._data[key];\n        },\n        set: function proxySetter(val) {\n          self._data[key] = val;\n        }\n      });\n    }\n  };\n\n  /**\n   * Unproxy a property.\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype._unproxy = function (key) {\n    if (!isReserved(key)) {\n      delete this[key];\n    }\n  };\n\n  /**\n   * Force update on every watcher in scope.\n   */\n\n  Vue.prototype._digest = function () {\n    for (var i = 0, l = this._watchers.length; i < l; i++) {\n      this._watchers[i].update(true); // shallow updates\n    }\n  };\n\n  /**\n   * Setup computed properties. They are essentially\n   * special getter/setters\n   */\n\n  function noop() {}\n  Vue.prototype._initComputed = function () {\n    var computed = this.$options.computed;\n    if (computed) {\n      for (var key in computed) {\n        var userDef = computed[key];\n        var def = {\n          enumerable: true,\n          configurable: true\n        };\n        if (typeof userDef === 'function') {\n          def.get = makeComputedGetter(userDef, this);\n          def.set = noop;\n        } else {\n          def.get = userDef.get ? userDef.cache !== false ? makeComputedGetter(userDef.get, this) : bind(userDef.get, this) : noop;\n          def.set = userDef.set ? bind(userDef.set, this) : noop;\n        }\n        Object.defineProperty(this, key, def);\n      }\n    }\n  };\n\n  function makeComputedGetter(getter, owner) {\n    var watcher = new Watcher(owner, getter, null, {\n      lazy: true\n    });\n    return function computedGetter() {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value;\n    };\n  }\n\n  /**\n   * Setup instance methods. Methods must be bound to the\n   * instance since they might be passed down as a prop to\n   * child components.\n   */\n\n  Vue.prototype._initMethods = function () {\n    var methods = this.$options.methods;\n    if (methods) {\n      for (var key in methods) {\n        this[key] = bind(methods[key], this);\n      }\n    }\n  };\n\n  /**\n   * Initialize meta information like $index, $key & $value.\n   */\n\n  Vue.prototype._initMeta = function () {\n    var metas = this.$options._meta;\n    if (metas) {\n      for (var key in metas) {\n        defineReactive(this, key, metas[key]);\n      }\n    }\n  };\n}\n\nvar eventRE = /^v-on:|^@/;\n\nfunction eventsMixin (Vue) {\n  /**\n   * Setup the instance's option events & watchers.\n   * If the value is a string, we pull it from the\n   * instance's methods by name.\n   */\n\n  Vue.prototype._initEvents = function () {\n    var options = this.$options;\n    if (options._asComponent) {\n      registerComponentEvents(this, options.el);\n    }\n    registerCallbacks(this, '$on', options.events);\n    registerCallbacks(this, '$watch', options.watch);\n  };\n\n  /**\n   * Register v-on events on a child component\n   *\n   * @param {Vue} vm\n   * @param {Element} el\n   */\n\n  function registerComponentEvents(vm, el) {\n    var attrs = el.attributes;\n    var name, value, handler;\n    for (var i = 0, l = attrs.length; i < l; i++) {\n      name = attrs[i].name;\n      if (eventRE.test(name)) {\n        name = name.replace(eventRE, '');\n        // force the expression into a statement so that\n        // it always dynamically resolves the method to call (#2670)\n        // kinda ugly hack, but does the job.\n        value = attrs[i].value;\n        if (isSimplePath(value)) {\n          value += '.apply(this, $arguments)';\n        }\n        handler = (vm._scope || vm._context).$eval(value, true);\n        handler._fromParent = true;\n        vm.$on(name.replace(eventRE), handler);\n      }\n    }\n  }\n\n  /**\n   * Register callbacks for option events and watchers.\n   *\n   * @param {Vue} vm\n   * @param {String} action\n   * @param {Object} hash\n   */\n\n  function registerCallbacks(vm, action, hash) {\n    if (!hash) return;\n    var handlers, key, i, j;\n    for (key in hash) {\n      handlers = hash[key];\n      if (isArray(handlers)) {\n        for (i = 0, j = handlers.length; i < j; i++) {\n          register(vm, action, key, handlers[i]);\n        }\n      } else {\n        register(vm, action, key, handlers);\n      }\n    }\n  }\n\n  /**\n   * Helper to register an event/watch callback.\n   *\n   * @param {Vue} vm\n   * @param {String} action\n   * @param {String} key\n   * @param {Function|String|Object} handler\n   * @param {Object} [options]\n   */\n\n  function register(vm, action, key, handler, options) {\n    var type = typeof handler;\n    if (type === 'function') {\n      vm[action](key, handler, options);\n    } else if (type === 'string') {\n      var methods = vm.$options.methods;\n      var method = methods && methods[handler];\n      if (method) {\n        vm[action](key, method, options);\n      } else {\n        process.env.NODE_ENV !== 'production' && warn('Unknown method: \"' + handler + '\" when ' + 'registering callback for ' + action + ': \"' + key + '\".', vm);\n      }\n    } else if (handler && type === 'object') {\n      register(vm, action, key, handler.handler, handler);\n    }\n  }\n\n  /**\n   * Setup recursive attached/detached calls\n   */\n\n  Vue.prototype._initDOMHooks = function () {\n    this.$on('hook:attached', onAttached);\n    this.$on('hook:detached', onDetached);\n  };\n\n  /**\n   * Callback to recursively call attached hook on children\n   */\n\n  function onAttached() {\n    if (!this._isAttached) {\n      this._isAttached = true;\n      this.$children.forEach(callAttach);\n    }\n  }\n\n  /**\n   * Iterator to call attached hook\n   *\n   * @param {Vue} child\n   */\n\n  function callAttach(child) {\n    if (!child._isAttached && inDoc(child.$el)) {\n      child._callHook('attached');\n    }\n  }\n\n  /**\n   * Callback to recursively call detached hook on children\n   */\n\n  function onDetached() {\n    if (this._isAttached) {\n      this._isAttached = false;\n      this.$children.forEach(callDetach);\n    }\n  }\n\n  /**\n   * Iterator to call detached hook\n   *\n   * @param {Vue} child\n   */\n\n  function callDetach(child) {\n    if (child._isAttached && !inDoc(child.$el)) {\n      child._callHook('detached');\n    }\n  }\n\n  /**\n   * Trigger all handlers for a hook\n   *\n   * @param {String} hook\n   */\n\n  Vue.prototype._callHook = function (hook) {\n    this.$emit('pre-hook:' + hook);\n    var handlers = this.$options[hook];\n    if (handlers) {\n      for (var i = 0, j = handlers.length; i < j; i++) {\n        handlers[i].call(this);\n      }\n    }\n    this.$emit('hook:' + hook);\n  };\n}\n\nfunction noop() {}\n\n/**\n * A directive links a DOM element with a piece of data,\n * which is the result of evaluating an expression.\n * It registers a watcher with the expression and calls\n * the DOM update function when a change is triggered.\n *\n * @param {Object} descriptor\n *                 - {String} name\n *                 - {Object} def\n *                 - {String} expression\n *                 - {Array<Object>} [filters]\n *                 - {Object} [modifiers]\n *                 - {Boolean} literal\n *                 - {String} attr\n *                 - {String} arg\n *                 - {String} raw\n *                 - {String} [ref]\n *                 - {Array<Object>} [interp]\n *                 - {Boolean} [hasOneTime]\n * @param {Vue} vm\n * @param {Node} el\n * @param {Vue} [host] - transclusion host component\n * @param {Object} [scope] - v-for scope\n * @param {Fragment} [frag] - owner fragment\n * @constructor\n */\nfunction Directive(descriptor, vm, el, host, scope, frag) {\n  this.vm = vm;\n  this.el = el;\n  // copy descriptor properties\n  this.descriptor = descriptor;\n  this.name = descriptor.name;\n  this.expression = descriptor.expression;\n  this.arg = descriptor.arg;\n  this.modifiers = descriptor.modifiers;\n  this.filters = descriptor.filters;\n  this.literal = this.modifiers && this.modifiers.literal;\n  // private\n  this._locked = false;\n  this._bound = false;\n  this._listeners = null;\n  // link context\n  this._host = host;\n  this._scope = scope;\n  this._frag = frag;\n  // store directives on node in dev mode\n  if (process.env.NODE_ENV !== 'production' && this.el) {\n    this.el._vue_directives = this.el._vue_directives || [];\n    this.el._vue_directives.push(this);\n  }\n}\n\n/**\n * Initialize the directive, mixin definition properties,\n * setup the watcher, call definition bind() and update()\n * if present.\n */\n\nDirective.prototype._bind = function () {\n  var name = this.name;\n  var descriptor = this.descriptor;\n\n  // remove attribute\n  if ((name !== 'cloak' || this.vm._isCompiled) && this.el && this.el.removeAttribute) {\n    var attr = descriptor.attr || 'v-' + name;\n    this.el.removeAttribute(attr);\n  }\n\n  // copy def properties\n  var def = descriptor.def;\n  if (typeof def === 'function') {\n    this.update = def;\n  } else {\n    extend(this, def);\n  }\n\n  // setup directive params\n  this._setupParams();\n\n  // initial bind\n  if (this.bind) {\n    this.bind();\n  }\n  this._bound = true;\n\n  if (this.literal) {\n    this.update && this.update(descriptor.raw);\n  } else if ((this.expression || this.modifiers) && (this.update || this.twoWay) && !this._checkStatement()) {\n    // wrapped updater for context\n    var dir = this;\n    if (this.update) {\n      this._update = function (val, oldVal) {\n        if (!dir._locked) {\n          dir.update(val, oldVal);\n        }\n      };\n    } else {\n      this._update = noop;\n    }\n    var preProcess = this._preProcess ? bind(this._preProcess, this) : null;\n    var postProcess = this._postProcess ? bind(this._postProcess, this) : null;\n    var watcher = this._watcher = new Watcher(this.vm, this.expression, this._update, // callback\n    {\n      filters: this.filters,\n      twoWay: this.twoWay,\n      deep: this.deep,\n      preProcess: preProcess,\n      postProcess: postProcess,\n      scope: this._scope\n    });\n    // v-model with inital inline value need to sync back to\n    // model instead of update to DOM on init. They would\n    // set the afterBind hook to indicate that.\n    if (this.afterBind) {\n      this.afterBind();\n    } else if (this.update) {\n      this.update(watcher.value);\n    }\n  }\n};\n\n/**\n * Setup all param attributes, e.g. track-by,\n * transition-mode, etc...\n */\n\nDirective.prototype._setupParams = function () {\n  if (!this.params) {\n    return;\n  }\n  var params = this.params;\n  // swap the params array with a fresh object.\n  this.params = Object.create(null);\n  var i = params.length;\n  var key, val, mappedKey;\n  while (i--) {\n    key = hyphenate(params[i]);\n    mappedKey = camelize(key);\n    val = getBindAttr(this.el, key);\n    if (val != null) {\n      // dynamic\n      this._setupParamWatcher(mappedKey, val);\n    } else {\n      // static\n      val = getAttr(this.el, key);\n      if (val != null) {\n        this.params[mappedKey] = val === '' ? true : val;\n      }\n    }\n  }\n};\n\n/**\n * Setup a watcher for a dynamic param.\n *\n * @param {String} key\n * @param {String} expression\n */\n\nDirective.prototype._setupParamWatcher = function (key, expression) {\n  var self = this;\n  var called = false;\n  var unwatch = (this._scope || this.vm).$watch(expression, function (val, oldVal) {\n    self.params[key] = val;\n    // since we are in immediate mode,\n    // only call the param change callbacks if this is not the first update.\n    if (called) {\n      var cb = self.paramWatchers && self.paramWatchers[key];\n      if (cb) {\n        cb.call(self, val, oldVal);\n      }\n    } else {\n      called = true;\n    }\n  }, {\n    immediate: true,\n    user: false\n  });(this._paramUnwatchFns || (this._paramUnwatchFns = [])).push(unwatch);\n};\n\n/**\n * Check if the directive is a function caller\n * and if the expression is a callable one. If both true,\n * we wrap up the expression and use it as the event\n * handler.\n *\n * e.g. on-click=\"a++\"\n *\n * @return {Boolean}\n */\n\nDirective.prototype._checkStatement = function () {\n  var expression = this.expression;\n  if (expression && this.acceptStatement && !isSimplePath(expression)) {\n    var fn = parseExpression(expression).get;\n    var scope = this._scope || this.vm;\n    var handler = function handler(e) {\n      scope.$event = e;\n      fn.call(scope, scope);\n      scope.$event = null;\n    };\n    if (this.filters) {\n      handler = scope._applyFilters(handler, null, this.filters);\n    }\n    this.update(handler);\n    return true;\n  }\n};\n\n/**\n * Set the corresponding value with the setter.\n * This should only be used in two-way directives\n * e.g. v-model.\n *\n * @param {*} value\n * @public\n */\n\nDirective.prototype.set = function (value) {\n  /* istanbul ignore else */\n  if (this.twoWay) {\n    this._withLock(function () {\n      this._watcher.set(value);\n    });\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn('Directive.set() can only be used inside twoWay' + 'directives.');\n  }\n};\n\n/**\n * Execute a function while preventing that function from\n * triggering updates on this directive instance.\n *\n * @param {Function} fn\n */\n\nDirective.prototype._withLock = function (fn) {\n  var self = this;\n  self._locked = true;\n  fn.call(self);\n  nextTick(function () {\n    self._locked = false;\n  });\n};\n\n/**\n * Convenience method that attaches a DOM event listener\n * to the directive element and autometically tears it down\n * during unbind.\n *\n * @param {String} event\n * @param {Function} handler\n * @param {Boolean} [useCapture]\n */\n\nDirective.prototype.on = function (event, handler, useCapture) {\n  on(this.el, event, handler, useCapture);(this._listeners || (this._listeners = [])).push([event, handler]);\n};\n\n/**\n * Teardown the watcher and call unbind.\n */\n\nDirective.prototype._teardown = function () {\n  if (this._bound) {\n    this._bound = false;\n    if (this.unbind) {\n      this.unbind();\n    }\n    if (this._watcher) {\n      this._watcher.teardown();\n    }\n    var listeners = this._listeners;\n    var i;\n    if (listeners) {\n      i = listeners.length;\n      while (i--) {\n        off(this.el, listeners[i][0], listeners[i][1]);\n      }\n    }\n    var unwatchFns = this._paramUnwatchFns;\n    if (unwatchFns) {\n      i = unwatchFns.length;\n      while (i--) {\n        unwatchFns[i]();\n      }\n    }\n    if (process.env.NODE_ENV !== 'production' && this.el) {\n      this.el._vue_directives.$remove(this);\n    }\n    this.vm = this.el = this._watcher = this._listeners = null;\n  }\n};\n\nfunction lifecycleMixin (Vue) {\n  /**\n   * Update v-ref for component.\n   *\n   * @param {Boolean} remove\n   */\n\n  Vue.prototype._updateRef = function (remove) {\n    var ref = this.$options._ref;\n    if (ref) {\n      var refs = (this._scope || this._context).$refs;\n      if (remove) {\n        if (refs[ref] === this) {\n          refs[ref] = null;\n        }\n      } else {\n        refs[ref] = this;\n      }\n    }\n  };\n\n  /**\n   * Transclude, compile and link element.\n   *\n   * If a pre-compiled linker is available, that means the\n   * passed in element will be pre-transcluded and compiled\n   * as well - all we need to do is to call the linker.\n   *\n   * Otherwise we need to call transclude/compile/link here.\n   *\n   * @param {Element} el\n   */\n\n  Vue.prototype._compile = function (el) {\n    var options = this.$options;\n\n    // transclude and init element\n    // transclude can potentially replace original\n    // so we need to keep reference; this step also injects\n    // the template and caches the original attributes\n    // on the container node and replacer node.\n    var original = el;\n    el = transclude(el, options);\n    this._initElement(el);\n\n    // handle v-pre on root node (#2026)\n    if (el.nodeType === 1 && getAttr(el, 'v-pre') !== null) {\n      return;\n    }\n\n    // root is always compiled per-instance, because\n    // container attrs and props can be different every time.\n    var contextOptions = this._context && this._context.$options;\n    var rootLinker = compileRoot(el, options, contextOptions);\n\n    // resolve slot distribution\n    resolveSlots(this, options._content);\n\n    // compile and link the rest\n    var contentLinkFn;\n    var ctor = this.constructor;\n    // component compilation can be cached\n    // as long as it's not using inline-template\n    if (options._linkerCachable) {\n      contentLinkFn = ctor.linker;\n      if (!contentLinkFn) {\n        contentLinkFn = ctor.linker = compile(el, options);\n      }\n    }\n\n    // link phase\n    // make sure to link root with prop scope!\n    var rootUnlinkFn = rootLinker(this, el, this._scope);\n    var contentUnlinkFn = contentLinkFn ? contentLinkFn(this, el) : compile(el, options)(this, el);\n\n    // register composite unlink function\n    // to be called during instance destruction\n    this._unlinkFn = function () {\n      rootUnlinkFn();\n      // passing destroying: true to avoid searching and\n      // splicing the directives\n      contentUnlinkFn(true);\n    };\n\n    // finally replace original\n    if (options.replace) {\n      replace(original, el);\n    }\n\n    this._isCompiled = true;\n    this._callHook('compiled');\n  };\n\n  /**\n   * Initialize instance element. Called in the public\n   * $mount() method.\n   *\n   * @param {Element} el\n   */\n\n  Vue.prototype._initElement = function (el) {\n    if (isFragment(el)) {\n      this._isFragment = true;\n      this.$el = this._fragmentStart = el.firstChild;\n      this._fragmentEnd = el.lastChild;\n      // set persisted text anchors to empty\n      if (this._fragmentStart.nodeType === 3) {\n        this._fragmentStart.data = this._fragmentEnd.data = '';\n      }\n      this._fragment = el;\n    } else {\n      this.$el = el;\n    }\n    this.$el.__vue__ = this;\n    this._callHook('beforeCompile');\n  };\n\n  /**\n   * Create and bind a directive to an element.\n   *\n   * @param {Object} descriptor - parsed directive descriptor\n   * @param {Node} node   - target node\n   * @param {Vue} [host] - transclusion host component\n   * @param {Object} [scope] - v-for scope\n   * @param {Fragment} [frag] - owner fragment\n   */\n\n  Vue.prototype._bindDir = function (descriptor, node, host, scope, frag) {\n    this._directives.push(new Directive(descriptor, this, node, host, scope, frag));\n  };\n\n  /**\n   * Teardown an instance, unobserves the data, unbind all the\n   * directives, turn off all the event listeners, etc.\n   *\n   * @param {Boolean} remove - whether to remove the DOM node.\n   * @param {Boolean} deferCleanup - if true, defer cleanup to\n   *                                 be called later\n   */\n\n  Vue.prototype._destroy = function (remove, deferCleanup) {\n    if (this._isBeingDestroyed) {\n      if (!deferCleanup) {\n        this._cleanup();\n      }\n      return;\n    }\n\n    var destroyReady;\n    var pendingRemoval;\n\n    var self = this;\n    // Cleanup should be called either synchronously or asynchronoysly as\n    // callback of this.$remove(), or if remove and deferCleanup are false.\n    // In any case it should be called after all other removing, unbinding and\n    // turning of is done\n    var cleanupIfPossible = function cleanupIfPossible() {\n      if (destroyReady && !pendingRemoval && !deferCleanup) {\n        self._cleanup();\n      }\n    };\n\n    // remove DOM element\n    if (remove && this.$el) {\n      pendingRemoval = true;\n      this.$remove(function () {\n        pendingRemoval = false;\n        cleanupIfPossible();\n      });\n    }\n\n    this._callHook('beforeDestroy');\n    this._isBeingDestroyed = true;\n    var i;\n    // remove self from parent. only necessary\n    // if parent is not being destroyed as well.\n    var parent = this.$parent;\n    if (parent && !parent._isBeingDestroyed) {\n      parent.$children.$remove(this);\n      // unregister ref (remove: true)\n      this._updateRef(true);\n    }\n    // destroy all children.\n    i = this.$children.length;\n    while (i--) {\n      this.$children[i].$destroy();\n    }\n    // teardown props\n    if (this._propsUnlinkFn) {\n      this._propsUnlinkFn();\n    }\n    // teardown all directives. this also tearsdown all\n    // directive-owned watchers.\n    if (this._unlinkFn) {\n      this._unlinkFn();\n    }\n    i = this._watchers.length;\n    while (i--) {\n      this._watchers[i].teardown();\n    }\n    // remove reference to self on $el\n    if (this.$el) {\n      this.$el.__vue__ = null;\n    }\n\n    destroyReady = true;\n    cleanupIfPossible();\n  };\n\n  /**\n   * Clean up to ensure garbage collection.\n   * This is called after the leave transition if there\n   * is any.\n   */\n\n  Vue.prototype._cleanup = function () {\n    if (this._isDestroyed) {\n      return;\n    }\n    // remove self from owner fragment\n    // do it in cleanup so that we can call $destroy with\n    // defer right when a fragment is about to be removed.\n    if (this._frag) {\n      this._frag.children.$remove(this);\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (this._data && this._data.__ob__) {\n      this._data.__ob__.removeVm(this);\n    }\n    // Clean up references to private properties and other\n    // instances. preserve reference to _data so that proxy\n    // accessors still work. The only potential side effect\n    // here is that mutating the instance after it's destroyed\n    // may affect the state of other components that are still\n    // observing the same object, but that seems to be a\n    // reasonable responsibility for the user rather than\n    // always throwing an error on them.\n    this.$el = this.$parent = this.$root = this.$children = this._watchers = this._context = this._scope = this._directives = null;\n    // call the last hook...\n    this._isDestroyed = true;\n    this._callHook('destroyed');\n    // turn off all instance listeners.\n    this.$off();\n  };\n}\n\nfunction miscMixin (Vue) {\n  /**\n   * Apply a list of filter (descriptors) to a value.\n   * Using plain for loops here because this will be called in\n   * the getter of any watcher with filters so it is very\n   * performance sensitive.\n   *\n   * @param {*} value\n   * @param {*} [oldValue]\n   * @param {Array} filters\n   * @param {Boolean} write\n   * @return {*}\n   */\n\n  Vue.prototype._applyFilters = function (value, oldValue, filters, write) {\n    var filter, fn, args, arg, offset, i, l, j, k;\n    for (i = 0, l = filters.length; i < l; i++) {\n      filter = filters[write ? l - i - 1 : i];\n      fn = resolveAsset(this.$options, 'filters', filter.name, true);\n      if (!fn) continue;\n      fn = write ? fn.write : fn.read || fn;\n      if (typeof fn !== 'function') continue;\n      args = write ? [value, oldValue] : [value];\n      offset = write ? 2 : 1;\n      if (filter.args) {\n        for (j = 0, k = filter.args.length; j < k; j++) {\n          arg = filter.args[j];\n          args[j + offset] = arg.dynamic ? this.$get(arg.value) : arg.value;\n        }\n      }\n      value = fn.apply(this, args);\n    }\n    return value;\n  };\n\n  /**\n   * Resolve a component, depending on whether the component\n   * is defined normally or using an async factory function.\n   * Resolves synchronously if already resolved, otherwise\n   * resolves asynchronously and caches the resolved\n   * constructor on the factory.\n   *\n   * @param {String|Function} value\n   * @param {Function} cb\n   */\n\n  Vue.prototype._resolveComponent = function (value, cb) {\n    var factory;\n    if (typeof value === 'function') {\n      factory = value;\n    } else {\n      factory = resolveAsset(this.$options, 'components', value, true);\n    }\n    /* istanbul ignore if */\n    if (!factory) {\n      return;\n    }\n    // async component factory\n    if (!factory.options) {\n      if (factory.resolved) {\n        // cached\n        cb(factory.resolved);\n      } else if (factory.requested) {\n        // pool callbacks\n        factory.pendingCallbacks.push(cb);\n      } else {\n        factory.requested = true;\n        var cbs = factory.pendingCallbacks = [cb];\n        factory.call(this, function resolve(res) {\n          if (isPlainObject(res)) {\n            res = Vue.extend(res);\n          }\n          // cache resolved\n          factory.resolved = res;\n          // invoke callbacks\n          for (var i = 0, l = cbs.length; i < l; i++) {\n            cbs[i](res);\n          }\n        }, function reject(reason) {\n          process.env.NODE_ENV !== 'production' && warn('Failed to resolve async component' + (typeof value === 'string' ? ': ' + value : '') + '. ' + (reason ? '\\nReason: ' + reason : ''));\n        });\n      }\n    } else {\n      // normal component\n      cb(factory);\n    }\n  };\n}\n\nvar filterRE$1 = /[^|]\\|[^|]/;\n\nfunction dataAPI (Vue) {\n  /**\n   * Get the value from an expression on this vm.\n   *\n   * @param {String} exp\n   * @param {Boolean} [asStatement]\n   * @return {*}\n   */\n\n  Vue.prototype.$get = function (exp, asStatement) {\n    var res = parseExpression(exp);\n    if (res) {\n      if (asStatement) {\n        var self = this;\n        return function statementHandler() {\n          self.$arguments = toArray(arguments);\n          var result = res.get.call(self, self);\n          self.$arguments = null;\n          return result;\n        };\n      } else {\n        try {\n          return res.get.call(this, this);\n        } catch (e) {}\n      }\n    }\n  };\n\n  /**\n   * Set the value from an expression on this vm.\n   * The expression must be a valid left-hand\n   * expression in an assignment.\n   *\n   * @param {String} exp\n   * @param {*} val\n   */\n\n  Vue.prototype.$set = function (exp, val) {\n    var res = parseExpression(exp, true);\n    if (res && res.set) {\n      res.set.call(this, this, val);\n    }\n  };\n\n  /**\n   * Delete a property on the VM\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype.$delete = function (key) {\n    del(this._data, key);\n  };\n\n  /**\n   * Watch an expression, trigger callback when its\n   * value changes.\n   *\n   * @param {String|Function} expOrFn\n   * @param {Function} cb\n   * @param {Object} [options]\n   *                 - {Boolean} deep\n   *                 - {Boolean} immediate\n   * @return {Function} - unwatchFn\n   */\n\n  Vue.prototype.$watch = function (expOrFn, cb, options) {\n    var vm = this;\n    var parsed;\n    if (typeof expOrFn === 'string') {\n      parsed = parseDirective(expOrFn);\n      expOrFn = parsed.expression;\n    }\n    var watcher = new Watcher(vm, expOrFn, cb, {\n      deep: options && options.deep,\n      sync: options && options.sync,\n      filters: parsed && parsed.filters,\n      user: !options || options.user !== false\n    });\n    if (options && options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn() {\n      watcher.teardown();\n    };\n  };\n\n  /**\n   * Evaluate a text directive, including filters.\n   *\n   * @param {String} text\n   * @param {Boolean} [asStatement]\n   * @return {String}\n   */\n\n  Vue.prototype.$eval = function (text, asStatement) {\n    // check for filters.\n    if (filterRE$1.test(text)) {\n      var dir = parseDirective(text);\n      // the filter regex check might give false positive\n      // for pipes inside strings, so it's possible that\n      // we don't get any filters here\n      var val = this.$get(dir.expression, asStatement);\n      return dir.filters ? this._applyFilters(val, null, dir.filters) : val;\n    } else {\n      // no filter\n      return this.$get(text, asStatement);\n    }\n  };\n\n  /**\n   * Interpolate a piece of template text.\n   *\n   * @param {String} text\n   * @return {String}\n   */\n\n  Vue.prototype.$interpolate = function (text) {\n    var tokens = parseText(text);\n    var vm = this;\n    if (tokens) {\n      if (tokens.length === 1) {\n        return vm.$eval(tokens[0].value) + '';\n      } else {\n        return tokens.map(function (token) {\n          return token.tag ? vm.$eval(token.value) : token.value;\n        }).join('');\n      }\n    } else {\n      return text;\n    }\n  };\n\n  /**\n   * Log instance data as a plain JS object\n   * so that it is easier to inspect in console.\n   * This method assumes console is available.\n   *\n   * @param {String} [path]\n   */\n\n  Vue.prototype.$log = function (path) {\n    var data = path ? getPath(this._data, path) : this._data;\n    if (data) {\n      data = clean(data);\n    }\n    // include computed fields\n    if (!path) {\n      var key;\n      for (key in this.$options.computed) {\n        data[key] = clean(this[key]);\n      }\n      if (this._props) {\n        for (key in this._props) {\n          data[key] = clean(this[key]);\n        }\n      }\n    }\n    console.log(data);\n  };\n\n  /**\n   * \"clean\" a getter/setter converted object into a plain\n   * object copy.\n   *\n   * @param {Object} - obj\n   * @return {Object}\n   */\n\n  function clean(obj) {\n    return JSON.parse(JSON.stringify(obj));\n  }\n}\n\nfunction domAPI (Vue) {\n  /**\n   * Convenience on-instance nextTick. The callback is\n   * auto-bound to the instance, and this avoids component\n   * modules having to rely on the global Vue.\n   *\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$nextTick = function (fn) {\n    nextTick(fn, this);\n  };\n\n  /**\n   * Append instance to target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$appendTo = function (target, cb, withTransition) {\n    return insert(this, target, cb, withTransition, append, appendWithTransition);\n  };\n\n  /**\n   * Prepend instance to target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$prependTo = function (target, cb, withTransition) {\n    target = query(target);\n    if (target.hasChildNodes()) {\n      this.$before(target.firstChild, cb, withTransition);\n    } else {\n      this.$appendTo(target, cb, withTransition);\n    }\n    return this;\n  };\n\n  /**\n   * Insert instance before target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$before = function (target, cb, withTransition) {\n    return insert(this, target, cb, withTransition, beforeWithCb, beforeWithTransition);\n  };\n\n  /**\n   * Insert instance after target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$after = function (target, cb, withTransition) {\n    target = query(target);\n    if (target.nextSibling) {\n      this.$before(target.nextSibling, cb, withTransition);\n    } else {\n      this.$appendTo(target.parentNode, cb, withTransition);\n    }\n    return this;\n  };\n\n  /**\n   * Remove instance from DOM\n   *\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$remove = function (cb, withTransition) {\n    if (!this.$el.parentNode) {\n      return cb && cb();\n    }\n    var inDocument = this._isAttached && inDoc(this.$el);\n    // if we are not in document, no need to check\n    // for transitions\n    if (!inDocument) withTransition = false;\n    var self = this;\n    var realCb = function realCb() {\n      if (inDocument) self._callHook('detached');\n      if (cb) cb();\n    };\n    if (this._isFragment) {\n      removeNodeRange(this._fragmentStart, this._fragmentEnd, this, this._fragment, realCb);\n    } else {\n      var op = withTransition === false ? removeWithCb : removeWithTransition;\n      op(this.$el, this, realCb);\n    }\n    return this;\n  };\n\n  /**\n   * Shared DOM insertion function.\n   *\n   * @param {Vue} vm\n   * @param {Element} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition]\n   * @param {Function} op1 - op for non-transition insert\n   * @param {Function} op2 - op for transition insert\n   * @return vm\n   */\n\n  function insert(vm, target, cb, withTransition, op1, op2) {\n    target = query(target);\n    var targetIsDetached = !inDoc(target);\n    var op = withTransition === false || targetIsDetached ? op1 : op2;\n    var shouldCallHook = !targetIsDetached && !vm._isAttached && !inDoc(vm.$el);\n    if (vm._isFragment) {\n      mapNodeRange(vm._fragmentStart, vm._fragmentEnd, function (node) {\n        op(node, target, vm);\n      });\n      cb && cb();\n    } else {\n      op(vm.$el, target, vm, cb);\n    }\n    if (shouldCallHook) {\n      vm._callHook('attached');\n    }\n    return vm;\n  }\n\n  /**\n   * Check for selectors\n   *\n   * @param {String|Element} el\n   */\n\n  function query(el) {\n    return typeof el === 'string' ? document.querySelector(el) : el;\n  }\n\n  /**\n   * Append operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Node} target\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function append(el, target, vm, cb) {\n    target.appendChild(el);\n    if (cb) cb();\n  }\n\n  /**\n   * InsertBefore operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Node} target\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function beforeWithCb(el, target, vm, cb) {\n    before(el, target);\n    if (cb) cb();\n  }\n\n  /**\n   * Remove operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function removeWithCb(el, vm, cb) {\n    remove(el);\n    if (cb) cb();\n  }\n}\n\nfunction eventsAPI (Vue) {\n  /**\n   * Listen on the given `event` with `fn`.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$on = function (event, fn) {\n    (this._events[event] || (this._events[event] = [])).push(fn);\n    modifyListenerCount(this, event, 1);\n    return this;\n  };\n\n  /**\n   * Adds an `event` listener that will be invoked a single\n   * time then automatically removed.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$once = function (event, fn) {\n    var self = this;\n    function on() {\n      self.$off(event, on);\n      fn.apply(this, arguments);\n    }\n    on.fn = fn;\n    this.$on(event, on);\n    return this;\n  };\n\n  /**\n   * Remove the given callback for `event` or all\n   * registered callbacks.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$off = function (event, fn) {\n    var cbs;\n    // all\n    if (!arguments.length) {\n      if (this.$parent) {\n        for (event in this._events) {\n          cbs = this._events[event];\n          if (cbs) {\n            modifyListenerCount(this, event, -cbs.length);\n          }\n        }\n      }\n      this._events = {};\n      return this;\n    }\n    // specific event\n    cbs = this._events[event];\n    if (!cbs) {\n      return this;\n    }\n    if (arguments.length === 1) {\n      modifyListenerCount(this, event, -cbs.length);\n      this._events[event] = null;\n      return this;\n    }\n    // specific handler\n    var cb;\n    var i = cbs.length;\n    while (i--) {\n      cb = cbs[i];\n      if (cb === fn || cb.fn === fn) {\n        modifyListenerCount(this, event, -1);\n        cbs.splice(i, 1);\n        break;\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Trigger an event on self.\n   *\n   * @param {String|Object} event\n   * @return {Boolean} shouldPropagate\n   */\n\n  Vue.prototype.$emit = function (event) {\n    var isSource = typeof event === 'string';\n    event = isSource ? event : event.name;\n    var cbs = this._events[event];\n    var shouldPropagate = isSource || !cbs;\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      // this is a somewhat hacky solution to the question raised\n      // in #2102: for an inline component listener like <comp @test=\"doThis\">,\n      // the propagation handling is somewhat broken. Therefore we\n      // need to treat these inline callbacks differently.\n      var hasParentCbs = isSource && cbs.some(function (cb) {\n        return cb._fromParent;\n      });\n      if (hasParentCbs) {\n        shouldPropagate = false;\n      }\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        var cb = cbs[i];\n        var res = cb.apply(this, args);\n        if (res === true && (!hasParentCbs || cb._fromParent)) {\n          shouldPropagate = true;\n        }\n      }\n    }\n    return shouldPropagate;\n  };\n\n  /**\n   * Recursively broadcast an event to all children instances.\n   *\n   * @param {String|Object} event\n   * @param {...*} additional arguments\n   */\n\n  Vue.prototype.$broadcast = function (event) {\n    var isSource = typeof event === 'string';\n    event = isSource ? event : event.name;\n    // if no child has registered for this event,\n    // then there's no need to broadcast.\n    if (!this._eventsCount[event]) return;\n    var children = this.$children;\n    var args = toArray(arguments);\n    if (isSource) {\n      // use object event to indicate non-source emit\n      // on children\n      args[0] = { name: event, source: this };\n    }\n    for (var i = 0, l = children.length; i < l; i++) {\n      var child = children[i];\n      var shouldPropagate = child.$emit.apply(child, args);\n      if (shouldPropagate) {\n        child.$broadcast.apply(child, args);\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Recursively propagate an event up the parent chain.\n   *\n   * @param {String} event\n   * @param {...*} additional arguments\n   */\n\n  Vue.prototype.$dispatch = function (event) {\n    var shouldPropagate = this.$emit.apply(this, arguments);\n    if (!shouldPropagate) return;\n    var parent = this.$parent;\n    var args = toArray(arguments);\n    // use object event to indicate non-source emit\n    // on parents\n    args[0] = { name: event, source: this };\n    while (parent) {\n      shouldPropagate = parent.$emit.apply(parent, args);\n      parent = shouldPropagate ? parent.$parent : null;\n    }\n    return this;\n  };\n\n  /**\n   * Modify the listener counts on all parents.\n   * This bookkeeping allows $broadcast to return early when\n   * no child has listened to a certain event.\n   *\n   * @param {Vue} vm\n   * @param {String} event\n   * @param {Number} count\n   */\n\n  var hookRE = /^hook:/;\n  function modifyListenerCount(vm, event, count) {\n    var parent = vm.$parent;\n    // hooks do not get broadcasted so no need\n    // to do bookkeeping for them\n    if (!parent || !count || hookRE.test(event)) return;\n    while (parent) {\n      parent._eventsCount[event] = (parent._eventsCount[event] || 0) + count;\n      parent = parent.$parent;\n    }\n  }\n}\n\nfunction lifecycleAPI (Vue) {\n  /**\n   * Set instance target element and kick off the compilation\n   * process. The passed in `el` can be a selector string, an\n   * existing Element, or a DocumentFragment (for block\n   * instances).\n   *\n   * @param {Element|DocumentFragment|string} el\n   * @public\n   */\n\n  Vue.prototype.$mount = function (el) {\n    if (this._isCompiled) {\n      process.env.NODE_ENV !== 'production' && warn('$mount() should be called only once.', this);\n      return;\n    }\n    el = query(el);\n    if (!el) {\n      el = document.createElement('div');\n    }\n    this._compile(el);\n    this._initDOMHooks();\n    if (inDoc(this.$el)) {\n      this._callHook('attached');\n      ready.call(this);\n    } else {\n      this.$once('hook:attached', ready);\n    }\n    return this;\n  };\n\n  /**\n   * Mark an instance as ready.\n   */\n\n  function ready() {\n    this._isAttached = true;\n    this._isReady = true;\n    this._callHook('ready');\n  }\n\n  /**\n   * Teardown the instance, simply delegate to the internal\n   * _destroy.\n   *\n   * @param {Boolean} remove\n   * @param {Boolean} deferCleanup\n   */\n\n  Vue.prototype.$destroy = function (remove, deferCleanup) {\n    this._destroy(remove, deferCleanup);\n  };\n\n  /**\n   * Partially compile a piece of DOM and return a\n   * decompile function.\n   *\n   * @param {Element|DocumentFragment} el\n   * @param {Vue} [host]\n   * @param {Object} [scope]\n   * @param {Fragment} [frag]\n   * @return {Function}\n   */\n\n  Vue.prototype.$compile = function (el, host, scope, frag) {\n    return compile(el, this.$options, true)(this, el, host, scope, frag);\n  };\n}\n\n/**\n * The exposed Vue constructor.\n *\n * API conventions:\n * - public API methods/properties are prefixed with `$`\n * - internal methods/properties are prefixed with `_`\n * - non-prefixed properties are assumed to be proxied user\n *   data.\n *\n * @constructor\n * @param {Object} [options]\n * @public\n */\n\nfunction Vue(options) {\n  this._init(options);\n}\n\n// install internals\ninitMixin(Vue);\nstateMixin(Vue);\neventsMixin(Vue);\nlifecycleMixin(Vue);\nmiscMixin(Vue);\n\n// install instance APIs\ndataAPI(Vue);\ndomAPI(Vue);\neventsAPI(Vue);\nlifecycleAPI(Vue);\n\nvar slot = {\n\n  priority: SLOT,\n  params: ['name'],\n\n  bind: function bind() {\n    // this was resolved during component transclusion\n    var name = this.params.name || 'default';\n    var content = this.vm._slotContents && this.vm._slotContents[name];\n    if (!content || !content.hasChildNodes()) {\n      this.fallback();\n    } else {\n      this.compile(content.cloneNode(true), this.vm._context, this.vm);\n    }\n  },\n\n  compile: function compile(content, context, host) {\n    if (content && context) {\n      if (this.el.hasChildNodes() && content.childNodes.length === 1 && content.childNodes[0].nodeType === 1 && content.childNodes[0].hasAttribute('v-if')) {\n        // if the inserted slot has v-if\n        // inject fallback content as the v-else\n        var elseBlock = document.createElement('template');\n        elseBlock.setAttribute('v-else', '');\n        elseBlock.innerHTML = this.el.innerHTML;\n        // the else block should be compiled in child scope\n        elseBlock._context = this.vm;\n        content.appendChild(elseBlock);\n      }\n      var scope = host ? host._scope : this._scope;\n      this.unlink = context.$compile(content, host, scope, this._frag);\n    }\n    if (content) {\n      replace(this.el, content);\n    } else {\n      remove(this.el);\n    }\n  },\n\n  fallback: function fallback() {\n    this.compile(extractContent(this.el, true), this.vm);\n  },\n\n  unbind: function unbind() {\n    if (this.unlink) {\n      this.unlink();\n    }\n  }\n};\n\nvar partial = {\n\n  priority: PARTIAL,\n\n  params: ['name'],\n\n  // watch changes to name for dynamic partials\n  paramWatchers: {\n    name: function name(value) {\n      vIf.remove.call(this);\n      if (value) {\n        this.insert(value);\n      }\n    }\n  },\n\n  bind: function bind() {\n    this.anchor = createAnchor('v-partial');\n    replace(this.el, this.anchor);\n    this.insert(this.params.name);\n  },\n\n  insert: function insert(id) {\n    var partial = resolveAsset(this.vm.$options, 'partials', id, true);\n    if (partial) {\n      this.factory = new FragmentFactory(this.vm, partial);\n      vIf.insert.call(this);\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.frag) {\n      this.frag.destroy();\n    }\n  }\n};\n\nvar elementDirectives = {\n  slot: slot,\n  partial: partial\n};\n\nvar convertArray = vFor._postProcess;\n\n/**\n * Limit filter for arrays\n *\n * @param {Number} n\n * @param {Number} offset (Decimal expected)\n */\n\nfunction limitBy(arr, n, offset) {\n  offset = offset ? parseInt(offset, 10) : 0;\n  n = toNumber(n);\n  return typeof n === 'number' ? arr.slice(offset, offset + n) : arr;\n}\n\n/**\n * Filter filter for arrays\n *\n * @param {String} search\n * @param {String} [delimiter]\n * @param {String} ...dataKeys\n */\n\nfunction filterBy(arr, search, delimiter) {\n  arr = convertArray(arr);\n  if (search == null) {\n    return arr;\n  }\n  if (typeof search === 'function') {\n    return arr.filter(search);\n  }\n  // cast to lowercase string\n  search = ('' + search).toLowerCase();\n  // allow optional `in` delimiter\n  // because why not\n  var n = delimiter === 'in' ? 3 : 2;\n  // extract and flatten keys\n  var keys = Array.prototype.concat.apply([], toArray(arguments, n));\n  var res = [];\n  var item, key, val, j;\n  for (var i = 0, l = arr.length; i < l; i++) {\n    item = arr[i];\n    val = item && item.$value || item;\n    j = keys.length;\n    if (j) {\n      while (j--) {\n        key = keys[j];\n        if (key === '$key' && contains(item.$key, search) || contains(getPath(val, key), search)) {\n          res.push(item);\n          break;\n        }\n      }\n    } else if (contains(item, search)) {\n      res.push(item);\n    }\n  }\n  return res;\n}\n\n/**\n * Filter filter for arrays\n *\n * @param {String|Array<String>|Function} ...sortKeys\n * @param {Number} [order]\n */\n\nfunction orderBy(arr) {\n  var comparator = null;\n  var sortKeys = undefined;\n  arr = convertArray(arr);\n\n  // determine order (last argument)\n  var args = toArray(arguments, 1);\n  var order = args[args.length - 1];\n  if (typeof order === 'number') {\n    order = order < 0 ? -1 : 1;\n    args = args.length > 1 ? args.slice(0, -1) : args;\n  } else {\n    order = 1;\n  }\n\n  // determine sortKeys & comparator\n  var firstArg = args[0];\n  if (!firstArg) {\n    return arr;\n  } else if (typeof firstArg === 'function') {\n    // custom comparator\n    comparator = function (a, b) {\n      return firstArg(a, b) * order;\n    };\n  } else {\n    // string keys. flatten first\n    sortKeys = Array.prototype.concat.apply([], args);\n    comparator = function (a, b, i) {\n      i = i || 0;\n      return i >= sortKeys.length - 1 ? baseCompare(a, b, i) : baseCompare(a, b, i) || comparator(a, b, i + 1);\n    };\n  }\n\n  function baseCompare(a, b, sortKeyIndex) {\n    var sortKey = sortKeys[sortKeyIndex];\n    if (sortKey) {\n      if (sortKey !== '$key') {\n        if (isObject(a) && '$value' in a) a = a.$value;\n        if (isObject(b) && '$value' in b) b = b.$value;\n      }\n      a = isObject(a) ? getPath(a, sortKey) : a;\n      b = isObject(b) ? getPath(b, sortKey) : b;\n    }\n    return a === b ? 0 : a > b ? order : -order;\n  }\n\n  // sort on a copy to avoid mutating original array\n  return arr.slice().sort(comparator);\n}\n\n/**\n * String contain helper\n *\n * @param {*} val\n * @param {String} search\n */\n\nfunction contains(val, search) {\n  var i;\n  if (isPlainObject(val)) {\n    var keys = Object.keys(val);\n    i = keys.length;\n    while (i--) {\n      if (contains(val[keys[i]], search)) {\n        return true;\n      }\n    }\n  } else if (isArray(val)) {\n    i = val.length;\n    while (i--) {\n      if (contains(val[i], search)) {\n        return true;\n      }\n    }\n  } else if (val != null) {\n    return val.toString().toLowerCase().indexOf(search) > -1;\n  }\n}\n\nvar digitsRE = /(\\d{3})(?=\\d)/g;\n\n// asset collections must be a plain object.\nvar filters = {\n\n  orderBy: orderBy,\n  filterBy: filterBy,\n  limitBy: limitBy,\n\n  /**\n   * Stringify value.\n   *\n   * @param {Number} indent\n   */\n\n  json: {\n    read: function read(value, indent) {\n      return typeof value === 'string' ? value : JSON.stringify(value, null, Number(indent) || 2);\n    },\n    write: function write(value) {\n      try {\n        return JSON.parse(value);\n      } catch (e) {\n        return value;\n      }\n    }\n  },\n\n  /**\n   * 'abc' => 'Abc'\n   */\n\n  capitalize: function capitalize(value) {\n    if (!value && value !== 0) return '';\n    value = value.toString();\n    return value.charAt(0).toUpperCase() + value.slice(1);\n  },\n\n  /**\n   * 'abc' => 'ABC'\n   */\n\n  uppercase: function uppercase(value) {\n    return value || value === 0 ? value.toString().toUpperCase() : '';\n  },\n\n  /**\n   * 'AbC' => 'abc'\n   */\n\n  lowercase: function lowercase(value) {\n    return value || value === 0 ? value.toString().toLowerCase() : '';\n  },\n\n  /**\n   * 12345 => $12,345.00\n   *\n   * @param {String} sign\n   * @param {Number} decimals Decimal places\n   */\n\n  currency: function currency(value, _currency, decimals) {\n    value = parseFloat(value);\n    if (!isFinite(value) || !value && value !== 0) return '';\n    _currency = _currency != null ? _currency : '$';\n    decimals = decimals != null ? decimals : 2;\n    var stringified = Math.abs(value).toFixed(decimals);\n    var _int = decimals ? stringified.slice(0, -1 - decimals) : stringified;\n    var i = _int.length % 3;\n    var head = i > 0 ? _int.slice(0, i) + (_int.length > 3 ? ',' : '') : '';\n    var _float = decimals ? stringified.slice(-1 - decimals) : '';\n    var sign = value < 0 ? '-' : '';\n    return sign + _currency + head + _int.slice(i).replace(digitsRE, '$1,') + _float;\n  },\n\n  /**\n   * 'item' => 'items'\n   *\n   * @params\n   *  an array of strings corresponding to\n   *  the single, double, triple ... forms of the word to\n   *  be pluralized. When the number to be pluralized\n   *  exceeds the length of the args, it will use the last\n   *  entry in the array.\n   *\n   *  e.g. ['single', 'double', 'triple', 'multiple']\n   */\n\n  pluralize: function pluralize(value) {\n    var args = toArray(arguments, 1);\n    return args.length > 1 ? args[value % 10 - 1] || args[args.length - 1] : args[0] + (value === 1 ? '' : 's');\n  },\n\n  /**\n   * Debounce a handler function.\n   *\n   * @param {Function} handler\n   * @param {Number} delay = 300\n   * @return {Function}\n   */\n\n  debounce: function debounce(handler, delay) {\n    if (!handler) return;\n    if (!delay) {\n      delay = 300;\n    }\n    return _debounce(handler, delay);\n  }\n};\n\nfunction installGlobalAPI (Vue) {\n  /**\n   * Vue and every constructor that extends Vue has an\n   * associated options object, which can be accessed during\n   * compilation steps as `this.constructor.options`.\n   *\n   * These can be seen as the default options of every\n   * Vue instance.\n   */\n\n  Vue.options = {\n    directives: directives,\n    elementDirectives: elementDirectives,\n    filters: filters,\n    transitions: {},\n    components: {},\n    partials: {},\n    replace: true\n  };\n\n  /**\n   * Expose useful internals\n   */\n\n  Vue.util = util;\n  Vue.config = config;\n  Vue.set = set;\n  Vue['delete'] = del;\n  Vue.nextTick = nextTick;\n\n  /**\n   * The following are exposed for advanced usage / plugins\n   */\n\n  Vue.compiler = compiler;\n  Vue.FragmentFactory = FragmentFactory;\n  Vue.internalDirectives = internalDirectives;\n  Vue.parsers = {\n    path: path,\n    text: text,\n    template: template,\n    directive: directive,\n    expression: expression\n  };\n\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   *\n   * @param {Object} extendOptions\n   */\n\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var isFirstExtend = Super.cid === 0;\n    if (isFirstExtend && extendOptions._Ctor) {\n      return extendOptions._Ctor;\n    }\n    var name = extendOptions.name || Super.options.name;\n    if (process.env.NODE_ENV !== 'production') {\n      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n        warn('Invalid component name: \"' + name + '\". Component names ' + 'can only contain alphanumeric characaters and the hyphen.');\n        name = null;\n      }\n    }\n    var Sub = createClass(name || 'VueComponent');\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(Super.options, extendOptions);\n    Sub['super'] = Super;\n    // allow further extension\n    Sub.extend = Super.extend;\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    config._assetTypes.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n    // cache constructor\n    if (isFirstExtend) {\n      extendOptions._Ctor = Sub;\n    }\n    return Sub;\n  };\n\n  /**\n   * A function that returns a sub-class constructor with the\n   * given name. This gives us much nicer output when\n   * logging instances in the console.\n   *\n   * @param {String} name\n   * @return {Function}\n   */\n\n  function createClass(name) {\n    /* eslint-disable no-new-func */\n    return new Function('return function ' + classify(name) + ' (options) { this._init(options) }')();\n    /* eslint-enable no-new-func */\n  }\n\n  /**\n   * Plugin system\n   *\n   * @param {Object} plugin\n   */\n\n  Vue.use = function (plugin) {\n    /* istanbul ignore if */\n    if (plugin.installed) {\n      return;\n    }\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else {\n      plugin.apply(null, args);\n    }\n    plugin.installed = true;\n    return this;\n  };\n\n  /**\n   * Apply a global mixin by merging it into the default\n   * options.\n   */\n\n  Vue.mixin = function (mixin) {\n    Vue.options = mergeOptions(Vue.options, mixin);\n  };\n\n  /**\n   * Create asset registration methods with the following\n   * signature:\n   *\n   * @param {String} id\n   * @param {*} definition\n   */\n\n  config._assetTypes.forEach(function (type) {\n    Vue[type] = function (id, definition) {\n      if (!definition) {\n        return this.options[type + 's'][id];\n      } else {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production') {\n          if (type === 'component' && (commonTagRE.test(id) || reservedTagRE.test(id))) {\n            warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + id);\n          }\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = id;\n          definition = Vue.extend(definition);\n        }\n        this.options[type + 's'][id] = definition;\n        return definition;\n      }\n    };\n  });\n\n  // expose internal transition API\n  extend(Vue.transition, transition);\n}\n\ninstallGlobalAPI(Vue);\n\nVue.version = '1.0.24';\n\n// devtools global hook\n/* istanbul ignore next */\nsetTimeout(function () {\n  if (config.devtools) {\n    if (devtools) {\n      devtools.emit('init', Vue);\n    } else if (process.env.NODE_ENV !== 'production' && inBrowser && /Chrome\\/\\d+/.test(window.navigator.userAgent)) {\n      console.log('Download the Vue Devtools for a better development experience:\\n' + 'https://github.com/vuejs/vue-devtools');\n    }\n  }\n}, 0);\n\nmodule.exports = Vue;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue/dist/vue.common.js\n ** module id = 44\n ** module chunks = 0\n **/"],"sourceRoot":""}